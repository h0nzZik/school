

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Jun 07 15:17:55 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F819
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 14 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 14 "main.c"
    45  2007  FF18               	dw 0xFFFB & 0xFFFF & 0xFFDF & 0xFFFC & 0xFFBF & 0xFF7F ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_application_reset
    48                           	FNCALL	_main,_bit_on
    49                           	FNCALL	_main,_next_segment
    50                           	FNCALL	_main,_next_minute
    51                           	FNCALL	_init,_set_it_faster
    52                           	FNCALL	_init,_rtc_setup
    53                           	FNCALL	_init,_init_setup
    54                           	FNCALL	_init,_init_normal
    55                           	FNCALL	_init_normal,_what_time_is_now
    56                           	FNCALL	_init_normal,_set_it_faster
    57                           	FNCALL	_init_normal,_hour_start_end_init
    58                           	FNCALL	_init_normal,_sixty_start
    59                           	FNCALL	_init_normal,_sixty_stop
    60                           	FNCALL	_rtc_setup,_i2c_write
    61                           	FNCALL	_next_segment,_bit_on
    62                           	FNCALL	_next_segment,_bit_off
    63                           	FNCALL	_next_segment,_show_clk
    64                           	FNCALL	_application_reset,_shift_write
    65                           	FNCALL	_application_reset,_what_time_is_now
    66                           	FNCALL	_application_reset,_segment_calc
    67                           	FNCALL	_i2c_write,_i2c_write_byte
    68                           	FNCALL	_set_it_faster,_shift_write
    69                           	FNCALL	_next_minute,_time_next_minute
    70                           	FNCALL	_next_minute,_segment_calc
    71                           	FNCALL	_show_clk,_shift_write
    72                           	FNCALL	_i2c_write_byte,_i2c_write_bit
    73                           	FNCALL	_i2c_write_byte,_i2c_check_ack
    74                           	FNCALL	_segment_calc,_sixty_start
    75                           	FNCALL	_segment_calc,_sixty_stop
    76                           	FNCALL	_segment_calc,___bmul
    77                           	FNCALL	_hour_start_end_init,___bmul
    78                           	FNCALL	_hour_start_end_init,_sixty_start
    79                           	FNCALL	_hour_start_end_init,_sixty_stop
    80                           	FNCALL	_shift_write,_bit_off
    81                           	FNCALL	_shift_write,_bit_on
    82                           	FNROOT	_main
    83                           	FNCALL	_interrupt_handler,_sync
    84                           	FNCALL	intlevel1,_interrupt_handler
    85                           	global	intlevel1
    86                           	FNROOT	intlevel1
    87                           	global	rtc_setup@F797
    88                           psect	idataBANK1,class=CODE,space=0,delta=2
    89                           global __pidataBANK1
    90  04CF                     __pidataBANK1:
    91                           	file	"main.c"
    92                           	line	427
    93                           
    94                           ;initializer for rtc_setup@F797
    95  04CF  3400               	retlw	0
    96  04D0  3400               	retlw	0
    97  04D1  3401               	retlw	01h
    98  04D2  3411               	retlw	011h
    99  04D3  340D               	retlw	0Dh
   100  04D4  3483               	retlw	083h
   101  04D5  340E               	retlw	0Eh
   102  04D6  3480               	retlw	080h
   103  04D7  340F               	retlw	0Fh
   104  04D8  3401               	retlw	01h
   105  04D9  3409               	retlw	09h
   106  04DA  3400               	retlw	0
   107  04DB  340A               	retlw	0Ah
   108  04DC  3400               	retlw	0
   109  04DD  340B               	retlw	0Bh
   110  04DE  3400               	retlw	0
   111  04DF  340C               	retlw	0Ch
   112  04E0  3400               	retlw	0
   113  04E1  34FF               	retlw	0FFh
   114  04E2  34FF               	retlw	0FFh
   115                           	global	_hour_start
   116                           	global	_segment
   117                           	global	_a_latch
   118                           	global	_mode
   119                           	global	_red_start
   120                           	global	_red_stop
   121                           	global	_seg_ticks_h
   122                           	global	_seg_ticks_l
   123                           	global	_state
   124                           	global	_tmr0_counter
   125                           	global	_tmr1_counter
   126                           	global	interrupt_handler@c
   127                           	global	_last_clk
   128                           	global	_hour_end
   129                           	global	_time
   130                           	global	_PORTA
   131  0005                     _PORTA	set	5
   132                           	global	_T1CON
   133  0010                     _T1CON	set	16
   134                           	global	_TMR0
   135  0001                     _TMR0	set	1
   136                           	global	_TMR1H
   137  000F                     _TMR1H	set	15
   138                           	global	_TMR1L
   139  000E                     _TMR1L	set	14
   140                           	global	_CARRY
   141  0018                     _CARRY	set	24
   142                           	global	_GIE
   143  005F                     _GIE	set	95
   144                           	global	_INTE
   145  005C                     _INTE	set	92
   146                           	global	_INTF
   147  0059                     _INTF	set	89
   148                           	global	_PEIE
   149  005E                     _PEIE	set	94
   150                           	global	_RB1
   151  0031                     _RB1	set	49
   152                           	global	_RB3
   153  0033                     _RB3	set	51
   154                           	global	_RB4
   155  0034                     _RB4	set	52
   156                           	global	_RB5
   157  0035                     _RB5	set	53
   158                           	global	_RB7
   159  0037                     _RB7	set	55
   160                           	global	_RBIE
   161  005B                     _RBIE	set	91
   162                           	global	_RBIF
   163  0058                     _RBIF	set	88
   164                           	global	_TMR0IE
   165  005D                     _TMR0IE	set	93
   166                           	global	_TMR0IF
   167  005A                     _TMR0IF	set	90
   168                           	global	_TMR1IF
   169  0060                     _TMR1IF	set	96
   170                           	global	_TMR1ON
   171  0080                     _TMR1ON	set	128
   172                           	global	_ADCON1
   173  009F                     _ADCON1	set	159
   174                           	global	_OSCCONbits
   175  008F                     _OSCCONbits	set	143
   176                           	global	_TRISA
   177  0085                     _TRISA	set	133
   178                           	global	_TRISB
   179  0086                     _TRISB	set	134
   180                           	global	_IOFS
   181  047A                     _IOFS	set	1146
   182                           	global	_T0CS
   183  040D                     _T0CS	set	1037
   184                           	global	_TMR1IE
   185  0460                     _TMR1IE	set	1120
   186                           	global	_TRISB1
   187  0431                     _TRISB1	set	1073
   188                           	global	_TRISB4
   189  0434                     _TRISB4	set	1076
   190                           	global	_EEADR
   191  010D                     _EEADR	set	269
   192                           	global	_EEDATA
   193  010C                     _EEDATA	set	268
   194                           	global	_EECON1
   195  018C                     _EECON1	set	396
   196                           	global	_EECON2
   197  018D                     _EECON2	set	397
   198                           	global	_RD
   199  0C60                     _RD	set	3168
   200                           	global	_WR
   201  0C61                     _WR	set	3169
   202                           	global	_WREN
   203  0C62                     _WREN	set	3170
   204                           	file	"C:\Users\vyvoj\AppData\Local\Temp\s36g."
   205                           	line	#
   206                           psect cinit,class=CODE,delta=2
   207                           global start_initialization
   208  02A5                     start_initialization:
   209                           
   210                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   211                           global __pbitbssCOMMON
   212  03B8                     __pbitbssCOMMON:
   213  03B8                     _last_clk:
   214  03B8                            ds      1
   215                           
   216                           psect	bssCOMMON,class=COMMON,space=1
   217                           global __pbssCOMMON
   218  0078                     __pbssCOMMON:
   219  0078                     interrupt_handler@c:
   220  0078                            ds      1
   221                           
   222                           psect	bssBANK0,class=BANK0,space=1
   223                           global __pbssBANK0
   224  0045                     __pbssBANK0:
   225  0045                     _hour_start:
   226  0045                            ds      12
   227                           
   228  0051                     _segment:
   229  0051                            ds      12
   230                           
   231  005D                     _a_latch:
   232  005D                            ds      1
   233                           
   234  005E                     _mode:
   235  005E                            ds      1
   236                           
   237  005F                     _red_start:
   238  005F                            ds      1
   239                           
   240  0060                     _red_stop:
   241  0060                            ds      1
   242                           
   243  0061                     _seg_ticks_h:
   244  0061                            ds      1
   245                           
   246  0062                     _seg_ticks_l:
   247  0062                            ds      1
   248                           
   249  0063                     _state:
   250  0063                            ds      1
   251                           
   252  0064                     _tmr0_counter:
   253  0064                            ds      1
   254                           
   255  0065                     _tmr1_counter:
   256  0065                            ds      1
   257                           
   258  0066                     _time:
   259  0066                            ds      2
   260                           
   261                           psect	bssBANK1,class=BANK1,space=1
   262                           global __pbssBANK1
   263  00B4                     __pbssBANK1:
   264  00B4                     _hour_end:
   265  00B4                            ds      12
   266                           
   267                           psect	dataBANK1,class=BANK1,space=1
   268                           global __pdataBANK1
   269  00A0                     __pdataBANK1:
   270                           	file	"main.c"
   271  00A0                     rtc_setup@F797:
   272  00A0                            ds      20
   273                           
   274                           psect clrtext,class=CODE,delta=2
   275                           global clear_ram
   276                           ;	Called with FSR containing the base address, and
   277                           ;	W with the last address+1
   278  0502                     clear_ram:
   279  0502  0064               	clrwdt			;clear the watchdog before getting into this loop
   280  0503                     clrloop:
   281  0503  0180               	clrf	indf		;clear RAM location pointed to by FSR
   282  0504  0A84               	incf	fsr,f		;increment pointer
   283  0505  0604               	xorwf	fsr,w		;XOR with final address
   284  0506  1903               	btfsc	status,2	;have we reached the end yet?
   285  0507  3400               	retlw	0		;all done for this memory range, return
   286  0508  0604               	xorwf	fsr,w		;XOR again to restore value
   287  0509  2D03               	goto	clrloop		;do the next byte
   288                           
   289                           ; Clear objects allocated to BITCOMMON
   290                           psect cinit,class=CODE,delta=2
   291  02A5  01F7               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   292                           ; Clear objects allocated to COMMON
   293                           psect cinit,class=CODE,delta=2
   294  02A6  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   295                           ; Clear objects allocated to BANK0
   296                           psect cinit,class=CODE,delta=2
   297  02A7  1383               	bcf	status, 7	;select IRP bank0
   298  02A8  3045               	movlw	low(__pbssBANK0)
   299  02A9  0084               	movwf	fsr
   300  02AA  3068               	movlw	low((__pbssBANK0)+023h)
   301  02AB  2502               	fcall	clear_ram
   302                           ; Clear objects allocated to BANK1
   303                           psect cinit,class=CODE,delta=2
   304  02AC  30B4               	movlw	low(__pbssBANK1)
   305  02AD  0084               	movwf	fsr
   306  02AE  30C0               	movlw	low((__pbssBANK1)+0Ch)
   307  02AF  2502               	fcall	clear_ram
   308                           ; Initialize objects allocated to BANK1
   309                           	global __pidataBANK1
   310                           psect cinit,class=CODE,delta=2
   311  02B0  1683               	bsf	status, 5	;RP0=1, select bank1
   312  02B1  1303               	bcf	status, 6	;RP1=0, select bank1
   313  02B2  24CF               	fcall	__pidataBANK1+0		;fetch initializer
   314  02B3  00A0               	movwf	__pdataBANK1+0&07fh		
   315  02B4  24D0               	fcall	__pidataBANK1+1		;fetch initializer
   316  02B5  00A1               	movwf	__pdataBANK1+1&07fh		
   317  02B6  24D1               	fcall	__pidataBANK1+2		;fetch initializer
   318  02B7  00A2               	movwf	__pdataBANK1+2&07fh		
   319  02B8  24D2               	fcall	__pidataBANK1+3		;fetch initializer
   320  02B9  00A3               	movwf	__pdataBANK1+3&07fh		
   321  02BA  24D3               	fcall	__pidataBANK1+4		;fetch initializer
   322  02BB  00A4               	movwf	__pdataBANK1+4&07fh		
   323  02BC  24D4               	fcall	__pidataBANK1+5		;fetch initializer
   324  02BD  00A5               	movwf	__pdataBANK1+5&07fh		
   325  02BE  24D5               	fcall	__pidataBANK1+6		;fetch initializer
   326  02BF  00A6               	movwf	__pdataBANK1+6&07fh		
   327  02C0  24D6               	fcall	__pidataBANK1+7		;fetch initializer
   328  02C1  00A7               	movwf	__pdataBANK1+7&07fh		
   329  02C2  24D7               	fcall	__pidataBANK1+8		;fetch initializer
   330  02C3  00A8               	movwf	__pdataBANK1+8&07fh		
   331  02C4  24D8               	fcall	__pidataBANK1+9		;fetch initializer
   332  02C5  00A9               	movwf	__pdataBANK1+9&07fh		
   333  02C6  24D9               	fcall	__pidataBANK1+10		;fetch initializer
   334  02C7  00AA               	movwf	__pdataBANK1+10&07fh		
   335  02C8  24DA               	fcall	__pidataBANK1+11		;fetch initializer
   336  02C9  00AB               	movwf	__pdataBANK1+11&07fh		
   337  02CA  24DB               	fcall	__pidataBANK1+12		;fetch initializer
   338  02CB  00AC               	movwf	__pdataBANK1+12&07fh		
   339  02CC  24DC               	fcall	__pidataBANK1+13		;fetch initializer
   340  02CD  00AD               	movwf	__pdataBANK1+13&07fh		
   341  02CE  24DD               	fcall	__pidataBANK1+14		;fetch initializer
   342  02CF  00AE               	movwf	__pdataBANK1+14&07fh		
   343  02D0  24DE               	fcall	__pidataBANK1+15		;fetch initializer
   344  02D1  00AF               	movwf	__pdataBANK1+15&07fh		
   345  02D2  24DF               	fcall	__pidataBANK1+16		;fetch initializer
   346  02D3  00B0               	movwf	__pdataBANK1+16&07fh		
   347  02D4  24E0               	fcall	__pidataBANK1+17		;fetch initializer
   348  02D5  00B1               	movwf	__pdataBANK1+17&07fh		
   349  02D6  24E1               	fcall	__pidataBANK1+18		;fetch initializer
   350  02D7  00B2               	movwf	__pdataBANK1+18&07fh		
   351  02D8  24E2               	fcall	__pidataBANK1+19		;fetch initializer
   352  02D9  00B3               	movwf	__pdataBANK1+19&07fh		
   353                           psect cinit,class=CODE,delta=2
   354                           global end_of_initialization
   355                           
   356                           ;End of C runtime variable initialization code
   357                           
   358  02DA                     end_of_initialization:
   359  02DA  0183               clrf status
   360  02DB  2811               ljmp _main	;jump to C main() function
   361                           psect	cstackCOMMON,class=COMMON,space=1
   362                           global __pcstackCOMMON
   363  0070                     __pcstackCOMMON:
   364                           	global	?_bit_on
   365  0070                     ?_bit_on:	; 0 bytes @ 0x0
   366                           	global	?_bit_off
   367  0070                     ?_bit_off:	; 0 bytes @ 0x0
   368                           	global	?_shift_write
   369  0070                     ?_shift_write:	; 0 bytes @ 0x0
   370                           	global	?_hour_start_end_init
   371  0070                     ?_hour_start_end_init:	; 0 bytes @ 0x0
   372                           	global	?_show_clk
   373  0070                     ?_show_clk:	; 0 bytes @ 0x0
   374                           	global	?_next_segment
   375  0070                     ?_next_segment:	; 0 bytes @ 0x0
   376                           	global	?_time_next_minute
   377  0070                     ?_time_next_minute:	; 0 bytes @ 0x0
   378                           	global	?_segment_calc
   379  0070                     ?_segment_calc:	; 0 bytes @ 0x0
   380                           	global	?_next_minute
   381  0070                     ?_next_minute:	; 0 bytes @ 0x0
   382                           	global	?_sync
   383  0070                     ?_sync:	; 0 bytes @ 0x0
   384                           	global	??_sync
   385  0070                     ??_sync:	; 0 bytes @ 0x0
   386                           	global	?_what_time_is_now
   387  0070                     ?_what_time_is_now:	; 0 bytes @ 0x0
   388                           	global	?_set_it_faster
   389  0070                     ?_set_it_faster:	; 0 bytes @ 0x0
   390                           	global	?_application_reset
   391  0070                     ?_application_reset:	; 0 bytes @ 0x0
   392                           	global	?_init_normal
   393  0070                     ?_init_normal:	; 0 bytes @ 0x0
   394                           	global	?_init_setup
   395  0070                     ?_init_setup:	; 0 bytes @ 0x0
   396                           	global	?_init
   397  0070                     ?_init:	; 0 bytes @ 0x0
   398                           	global	?_interrupt_handler
   399  0070                     ?_interrupt_handler:	; 0 bytes @ 0x0
   400                           	global	?_main
   401  0070                     ?_main:	; 0 bytes @ 0x0
   402                           	global	?_i2c_write_bit
   403  0070                     ?_i2c_write_bit:	; 0 bytes @ 0x0
   404                           	global	?_sixty_start
   405  0070                     ?_sixty_start:	; 1 bytes @ 0x0
   406                           	global	?_sixty_stop
   407  0070                     ?_sixty_stop:	; 1 bytes @ 0x0
   408                           	global	?_rtc_setup
   409  0070                     ?_rtc_setup:	; 1 bytes @ 0x0
   410                           	global	?_i2c_check_ack
   411  0070                     ?_i2c_check_ack:	; 1 bytes @ 0x0
   412                           	global	?_i2c_write_byte
   413  0070                     ?_i2c_write_byte:	; 1 bytes @ 0x0
   414  0070                     	ds	3
   415                           	global	??_interrupt_handler
   416  0073                     ??_interrupt_handler:	; 0 bytes @ 0x3
   417  0073                     	ds	4
   418                           psect	cstackBANK0,class=BANK0,space=1
   419                           global __pcstackBANK0
   420  0020                     __pcstackBANK0:
   421                           	global	??_bit_on
   422  0020                     ??_bit_on:	; 0 bytes @ 0x0
   423                           	global	??_bit_off
   424  0020                     ??_bit_off:	; 0 bytes @ 0x0
   425                           	global	??_sixty_start
   426  0020                     ??_sixty_start:	; 0 bytes @ 0x0
   427                           	global	??_sixty_stop
   428  0020                     ??_sixty_stop:	; 0 bytes @ 0x0
   429                           	global	??_time_next_minute
   430  0020                     ??_time_next_minute:	; 0 bytes @ 0x0
   431                           	global	??_what_time_is_now
   432  0020                     ??_what_time_is_now:	; 0 bytes @ 0x0
   433                           	global	??_init_setup
   434  0020                     ??_init_setup:	; 0 bytes @ 0x0
   435                           	global	??_i2c_write_bit
   436  0020                     ??_i2c_write_bit:	; 0 bytes @ 0x0
   437                           	global	??_i2c_check_ack
   438  0020                     ??_i2c_check_ack:	; 0 bytes @ 0x0
   439                           	global	?___bmul
   440  0020                     ?___bmul:	; 1 bytes @ 0x0
   441                           	global	___bmul@multiplicand
   442  0020                     ___bmul@multiplicand:	; 1 bytes @ 0x0
   443  0020                     	ds	1
   444                           	global	??___bmul
   445  0021                     ??___bmul:	; 0 bytes @ 0x1
   446                           	global	bit_on@bt
   447  0021                     bit_on@bt:	; 1 bytes @ 0x1
   448                           	global	bit_off@bt
   449  0021                     bit_off@bt:	; 1 bytes @ 0x1
   450                           	global	i2c_write_bit@x
   451  0021                     i2c_write_bit@x:	; 1 bytes @ 0x1
   452                           	global	i2c_check_ack@tmp
   453  0021                     i2c_check_ack@tmp:	; 1 bytes @ 0x1
   454  0021                     	ds	1
   455                           	global	??_shift_write
   456  0022                     ??_shift_write:	; 0 bytes @ 0x2
   457                           	global	??_i2c_write_byte
   458  0022                     ??_i2c_write_byte:	; 0 bytes @ 0x2
   459                           	global	sixty_start@x
   460  0022                     sixty_start@x:	; 1 bytes @ 0x2
   461                           	global	sixty_stop@x
   462  0022                     sixty_stop@x:	; 1 bytes @ 0x2
   463                           	global	___bmul@product
   464  0022                     ___bmul@product:	; 1 bytes @ 0x2
   465  0022                     	ds	1
   466                           	global	i2c_write_byte@byte
   467  0023                     i2c_write_byte@byte:	; 1 bytes @ 0x3
   468                           	global	___bmul@multiplier
   469  0023                     ___bmul@multiplier:	; 1 bytes @ 0x3
   470  0023                     	ds	1
   471                           	global	??_hour_start_end_init
   472  0024                     ??_hour_start_end_init:	; 0 bytes @ 0x4
   473                           	global	??_segment_calc
   474  0024                     ??_segment_calc:	; 0 bytes @ 0x4
   475                           	global	i2c_write_byte@i
   476  0024                     i2c_write_byte@i:	; 1 bytes @ 0x4
   477                           	global	shift_write@i
   478  0024                     shift_write@i:	; 2 bytes @ 0x4
   479  0024                     	ds	1
   480                           	global	?_i2c_write
   481  0025                     ?_i2c_write:	; 1 bytes @ 0x5
   482                           	global	i2c_write@addr
   483  0025                     i2c_write@addr:	; 1 bytes @ 0x5
   484  0025                     	ds	1
   485                           	global	??_next_minute
   486  0026                     ??_next_minute:	; 0 bytes @ 0x6
   487                           	global	shift_write@data
   488  0026                     shift_write@data:	; 1 bytes @ 0x6
   489                           	global	hour_start_end_init@min
   490  0026                     hour_start_end_init@min:	; 1 bytes @ 0x6
   491                           	global	i2c_write@data
   492  0026                     i2c_write@data:	; 1 bytes @ 0x6
   493  0026                     	ds	1
   494                           	global	??_i2c_write
   495  0027                     ??_i2c_write:	; 0 bytes @ 0x7
   496                           	global	??_show_clk
   497  0027                     ??_show_clk:	; 0 bytes @ 0x7
   498                           	global	??_set_it_faster
   499  0027                     ??_set_it_faster:	; 0 bytes @ 0x7
   500                           	global	??_application_reset
   501  0027                     ??_application_reset:	; 0 bytes @ 0x7
   502                           	global	hour_start_end_init@i
   503  0027                     hour_start_end_init@i:	; 1 bytes @ 0x7
   504                           	global	set_it_faster@how_much
   505  0027                     set_it_faster@how_much:	; 1 bytes @ 0x7
   506  0027                     	ds	1
   507                           	global	??_next_segment
   508  0028                     ??_next_segment:	; 0 bytes @ 0x8
   509                           	global	??_init_normal
   510  0028                     ??_init_normal:	; 0 bytes @ 0x8
   511                           	global	i2c_write@dev
   512  0028                     i2c_write@dev:	; 1 bytes @ 0x8
   513  0028                     	ds	1
   514                           	global	??_rtc_setup
   515  0029                     ??_rtc_setup:	; 0 bytes @ 0x9
   516  0029                     	ds	4
   517                           	global	rtc_setup@table
   518  002D                     rtc_setup@table:	; 20 bytes @ 0xD
   519  002D                     	ds	20
   520                           	global	rtc_setup@rv
   521  0041                     rtc_setup@rv:	; 1 bytes @ 0x21
   522  0041                     	ds	1
   523                           	global	rtc_setup@i
   524  0042                     rtc_setup@i:	; 1 bytes @ 0x22
   525  0042                     	ds	1
   526                           	global	??_init
   527  0043                     ??_init:	; 0 bytes @ 0x23
   528                           	global	??_main
   529  0043                     ??_main:	; 0 bytes @ 0x23
   530  0043                     	ds	1
   531                           	global	main@i
   532  0044                     main@i:	; 1 bytes @ 0x24
   533  0044                     	ds	1
   534 ;;Data sizes: Strings 0, constant 0, data 20, bss 48, persistent 0 stack 0
   535 ;;Auto spaces:   Size  Autos    Used
   536 ;; COMMON          14      7       9
   537 ;; BANK0           80     37      72
   538 ;; BANK1           80      0      32
   539 ;; BANK2           80      0       0
   540                           
   541 ;;
   542 ;; Pointer list with targets:
   543                           
   544                           
   545                           
   546 ;;
   547 ;; Critical Paths under _main in COMMON
   548 ;;
   549 ;;   None.
   550 ;;
   551 ;; Critical Paths under _interrupt_handler in COMMON
   552 ;;
   553 ;;   _interrupt_handler->_sync
   554 ;;
   555 ;; Critical Paths under _main in BANK0
   556 ;;
   557 ;;   _init->_rtc_setup
   558 ;;   _init_normal->_set_it_faster
   559 ;;   _init_normal->_hour_start_end_init
   560 ;;   _rtc_setup->_i2c_write
   561 ;;   _next_segment->_show_clk
   562 ;;   _application_reset->_shift_write
   563 ;;   _i2c_write->_i2c_write_byte
   564 ;;   _set_it_faster->_shift_write
   565 ;;   _next_minute->_segment_calc
   566 ;;   _show_clk->_shift_write
   567 ;;   _i2c_write_byte->_i2c_write_bit
   568 ;;   _i2c_write_byte->_i2c_check_ack
   569 ;;   _segment_calc->___bmul
   570 ;;   _hour_start_end_init->___bmul
   571 ;;   _shift_write->_bit_off
   572 ;;   _shift_write->_bit_on
   573 ;;
   574 ;; Critical Paths under _interrupt_handler in BANK0
   575 ;;
   576 ;;   None.
   577 ;;
   578 ;; Critical Paths under _main in BANK1
   579 ;;
   580 ;;   None.
   581 ;;
   582 ;; Critical Paths under _interrupt_handler in BANK1
   583 ;;
   584 ;;   None.
   585 ;;
   586 ;; Critical Paths under _main in BANK2
   587 ;;
   588 ;;   None.
   589 ;;
   590 ;; Critical Paths under _interrupt_handler in BANK2
   591 ;;
   592 ;;   None.
   593                           
   594 ;;
   595 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   596 ;;
   597                           
   598 ;;
   599 ;;Call Graph Tables:
   600 ;;
   601 ;; ---------------------------------------------------------------------------------
   602 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   603 ;; ---------------------------------------------------------------------------------
   604 ;; (0) _main                                                 2     2      0    3017
   605 ;;                                             35 BANK0      2     2      0
   606 ;;                               _init
   607 ;;                  _application_reset
   608 ;;                             _bit_on
   609 ;;                       _next_segment
   610 ;;                        _next_minute
   611 ;; ---------------------------------------------------------------------------------
   612 ;; (1) _init                                                 0     0      0    1742
   613 ;;                      _set_it_faster
   614 ;;                          _rtc_setup
   615 ;;                         _init_setup
   616 ;;                        _init_normal
   617 ;; ---------------------------------------------------------------------------------
   618 ;; (2) _init_normal                                          1     1      0    1212
   619 ;;                                              8 BANK0      1     1      0
   620 ;;                   _what_time_is_now
   621 ;;                      _set_it_faster
   622 ;;                _hour_start_end_init
   623 ;;                        _sixty_start
   624 ;;                         _sixty_stop
   625 ;; ---------------------------------------------------------------------------------
   626 ;; (2) _rtc_setup                                           26    26      0     364
   627 ;;                                              9 BANK0     26    26      0
   628 ;;                          _i2c_write
   629 ;; ---------------------------------------------------------------------------------
   630 ;; (1) _next_segment                                         1     1      0     179
   631 ;;                                              8 BANK0      1     1      0
   632 ;;                             _bit_on
   633 ;;                            _bit_off
   634 ;;                           _show_clk
   635 ;; ---------------------------------------------------------------------------------
   636 ;; (1) _application_reset                                    0     0      0     603
   637 ;;                        _shift_write
   638 ;;                   _what_time_is_now
   639 ;;                       _segment_calc
   640 ;; ---------------------------------------------------------------------------------
   641 ;; (3) _i2c_write                                            4     2      2     203
   642 ;;                                              5 BANK0      4     2      2
   643 ;;                     _i2c_write_byte
   644 ;; ---------------------------------------------------------------------------------
   645 ;; (3) _set_it_faster                                        1     1      0     166
   646 ;;                                              7 BANK0      1     1      0
   647 ;;                        _shift_write
   648 ;; ---------------------------------------------------------------------------------
   649 ;; (1) _next_minute                                          0     0      0     468
   650 ;;                   _time_next_minute
   651 ;;                       _segment_calc
   652 ;; ---------------------------------------------------------------------------------
   653 ;; (2) _show_clk                                             1     1      0     135
   654 ;;                                              7 BANK0      1     1      0
   655 ;;                        _shift_write
   656 ;; ---------------------------------------------------------------------------------
   657 ;; (4) _i2c_write_byte                                       3     3      0     136
   658 ;;                                              2 BANK0      3     3      0
   659 ;;                      _i2c_write_bit
   660 ;;                      _i2c_check_ack
   661 ;; ---------------------------------------------------------------------------------
   662 ;; (2) _segment_calc                                         2     2      0     468
   663 ;;                                              4 BANK0      2     2      0
   664 ;;                        _sixty_start
   665 ;;                         _sixty_stop
   666 ;;                             ___bmul
   667 ;; ---------------------------------------------------------------------------------
   668 ;; (3) _hour_start_end_init                                  4     4      0     670
   669 ;;                                              4 BANK0      4     4      0
   670 ;;                             ___bmul
   671 ;;                        _sixty_start
   672 ;;                         _sixty_stop
   673 ;; ---------------------------------------------------------------------------------
   674 ;; (3) _shift_write                                          5     5      0     135
   675 ;;                                              2 BANK0      5     5      0
   676 ;;                            _bit_off
   677 ;;                             _bit_on
   678 ;; ---------------------------------------------------------------------------------
   679 ;; (3) ___bmul                                               4     3      1      92
   680 ;;                                              0 BANK0      4     3      1
   681 ;; ---------------------------------------------------------------------------------
   682 ;; (5) _i2c_check_ack                                        2     2      0      23
   683 ;;                                              0 BANK0      2     2      0
   684 ;; ---------------------------------------------------------------------------------
   685 ;; (5) _i2c_write_bit                                        2     2      0      23
   686 ;;                                              0 BANK0      2     2      0
   687 ;; ---------------------------------------------------------------------------------
   688 ;; (2) _init_setup                                           0     0      0       0
   689 ;; ---------------------------------------------------------------------------------
   690 ;; (2) _what_time_is_now                                     1     1      0       0
   691 ;;                                              0 BANK0      1     1      0
   692 ;; ---------------------------------------------------------------------------------
   693 ;; (2) _time_next_minute                                     1     1      0       0
   694 ;;                                              0 BANK0      1     1      0
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (3) _sixty_stop                                           3     3      0     177
   697 ;;                                              0 BANK0      3     3      0
   698 ;; ---------------------------------------------------------------------------------
   699 ;; (3) _sixty_start                                          3     3      0     199
   700 ;;                                              0 BANK0      3     3      0
   701 ;; ---------------------------------------------------------------------------------
   702 ;; (4) _bit_off                                              2     2      0      22
   703 ;;                                              0 BANK0      2     2      0
   704 ;; ---------------------------------------------------------------------------------
   705 ;; (4) _bit_on                                               2     2      0      22
   706 ;;                                              0 BANK0      2     2      0
   707 ;; ---------------------------------------------------------------------------------
   708 ;; Estimated maximum stack depth 5
   709 ;; ---------------------------------------------------------------------------------
   710 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   711 ;; ---------------------------------------------------------------------------------
   712 ;; (6) _interrupt_handler                                    4     4      0       0
   713 ;;                                              3 COMMON     4     4      0
   714 ;;                               _sync
   715 ;; ---------------------------------------------------------------------------------
   716 ;; (7) _sync                                                 3     3      0       0
   717 ;;                                              0 COMMON     3     3      0
   718 ;; ---------------------------------------------------------------------------------
   719 ;; Estimated maximum stack depth 7
   720 ;; ---------------------------------------------------------------------------------
   721                           
   722 ;; Call Graph Graphs:
   723                           
   724 ;; _main (ROOT)
   725 ;;   _init
   726 ;;     _set_it_faster
   727 ;;       _shift_write
   728 ;;         _bit_off
   729 ;;         _bit_on
   730 ;;     _rtc_setup
   731 ;;       _i2c_write
   732 ;;         _i2c_write_byte
   733 ;;           _i2c_write_bit
   734 ;;           _i2c_check_ack
   735 ;;     _init_setup
   736 ;;     _init_normal
   737 ;;       _what_time_is_now
   738 ;;       _set_it_faster
   739 ;;         _shift_write
   740 ;;           _bit_off
   741 ;;           _bit_on
   742 ;;       _hour_start_end_init
   743 ;;         ___bmul
   744 ;;         _sixty_start
   745 ;;         _sixty_stop
   746 ;;       _sixty_start
   747 ;;       _sixty_stop
   748 ;;   _application_reset
   749 ;;     _shift_write
   750 ;;       _bit_off
   751 ;;       _bit_on
   752 ;;     _what_time_is_now
   753 ;;     _segment_calc
   754 ;;       _sixty_start
   755 ;;       _sixty_stop
   756 ;;       ___bmul
   757 ;;   _bit_on
   758 ;;   _next_segment
   759 ;;     _bit_on
   760 ;;     _bit_off
   761 ;;     _show_clk
   762 ;;       _shift_write
   763 ;;         _bit_off
   764 ;;         _bit_on
   765 ;;   _next_minute
   766 ;;     _time_next_minute
   767 ;;     _segment_calc
   768 ;;       _sixty_start
   769 ;;       _sixty_stop
   770 ;;       ___bmul
   771 ;;
   772 ;; _interrupt_handler (ROOT)
   773 ;;   _sync
   774 ;;
   775                           
   776 ;; Address spaces:
   777                           
   778 ;;Name               Size   Autos  Total    Cost      Usage
   779 ;;SFR3                 0      0       0       4        0.0%
   780 ;;BITSFR3              0      0       0       4        0.0%
   781 ;;BANK2               50      0       0       7        0.0%
   782 ;;BITBANK2            50      0       0       6        0.0%
   783 ;;SFR2                 0      0       0       5        0.0%
   784 ;;BITSFR2              0      0       0       5        0.0%
   785 ;;SFR1                 0      0       0       2        0.0%
   786 ;;BITSFR1              0      0       0       2        0.0%
   787 ;;BANK1               50      0      20       5       40.0%
   788 ;;BITBANK1            50      0       0       4        0.0%
   789 ;;CODE                 0      0       0       0        0.0%
   790 ;;DATA                 0      0      7A      10        0.0%
   791 ;;ABS                  0      0      71       8        0.0%
   792 ;;NULL                 0      0       0       0        0.0%
   793 ;;STACK                0      0       9       2        0.0%
   794 ;;BANK0               50     25      48       3       90.0%
   795 ;;BITBANK0            50      0       0       9        0.0%
   796 ;;SFR0                 0      0       0       1        0.0%
   797 ;;BITSFR0              0      0       0       1        0.0%
   798 ;;COMMON               E      7       9       1       64.3%
   799 ;;BITCOMMON            E      0       1       0        7.1%
   800 ;;EEDATA             100      0       0       0        0.0%
   801                           
   802                           	global	_main
   803                           psect	maintext,global,class=CODE,delta=2
   804                           global __pmaintext
   805  0011                     __pmaintext:
   806                           
   807 ;; *************** function _main *****************
   808 ;; Defined at:
   809 ;;		line 591 in file "main.c"
   810 ;; Parameters:    Size  Location     Type
   811 ;;		None
   812 ;; Auto vars:     Size  Location     Type
   813 ;;  i               1   36[BANK0 ] unsigned char 
   814 ;; Return value:  Size  Location     Type
   815 ;;		None               void
   816 ;; Registers used:
   817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   818 ;; Tracked objects:
   819 ;;		On entry : 17F/0
   820 ;;		On exit  : 0/0
   821 ;;		Unchanged: 0/0
   822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   823 ;;      Params:         0       0       0       0
   824 ;;      Locals:         0       1       0       0
   825 ;;      Temps:          0       1       0       0
   826 ;;      Totals:         0       2       0       0
   827 ;;Total ram usage:        2 bytes
   828 ;; Hardware stack levels required when called:    7
   829 ;; This function calls:
   830 ;;		_init
   831 ;;		_application_reset
   832 ;;		_bit_on
   833 ;;		_next_segment
   834 ;;		_next_minute
   835 ;; This function is called by:
   836 ;;		Startup code after reset
   837 ;; This function uses a non-reentrant model
   838 ;;
   839                           psect	maintext
   840                           	file	"main.c"
   841                           	line	591
   842                           	global	__size_of_main
   843  0064                     	__size_of_main	equ	__end_of_main-_main
   844                           	
   845  0011                     _main:	
   846                           	opt	stack 1
   847                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   848                           	line	593
   849                           	
   850  0011                     l4128:	
   851                           ;main.c: 593: init();
   852  0011  2481               	fcall	_init
   853                           	line	595
   854                           	
   855  0012                     l4130:	
   856                           ;main.c: 595: application_reset();
   857  0012  249B               	fcall	_application_reset
   858                           	line	597
   859                           	
   860  0013                     l4132:	
   861                           ;main.c: 597: uns8 i = 0;
   862  0013  1283               	bcf	status, 5	;RP0=0, select bank0
   863  0014  1303               	bcf	status, 6	;RP1=0, select bank0
   864  0015  01C4               	clrf	(main@i)
   865                           	line	599
   866                           	
   867  0016                     l4134:	
   868                           ;main.c: 599: if (mode == 0) {
   869  0016  08DE               	movf	(_mode),f
   870  0017  1D03               	skipz
   871  0018  281A               	goto	u3601
   872  0019  281B               	goto	u3600
   873  001A                     u3601:
   874  001A  2869               	goto	l4172
   875  001B                     u3600:
   876                           	line	600
   877                           	
   878  001B                     l4136:	
   879                           ;main.c: 600: bit_on(0x02);
   880  001B  3002               	movlw	(02h)
   881  001C  24F8               	fcall	_bit_on
   882  001D  281E               	goto	l4138
   883                           	line	601
   884                           ;main.c: 601: while(1) {
   885                           	
   886  001E                     l620:	
   887                           	line	603
   888                           	
   889  001E                     l4138:	
   890                           ;main.c: 603: if (TMR0IF) {
   891  001E  1D0B               	btfss	(90/8),(90)&7
   892  001F  2821               	goto	u3611
   893  0020  2822               	goto	u3610
   894  0021                     u3611:
   895  0021  2840               	goto	l4154
   896  0022                     u3610:
   897                           	line	604
   898                           	
   899  0022                     l4140:	
   900                           ;main.c: 604: if (state == 2) {
   901  0022  1283               	bcf	status, 5	;RP0=0, select bank0
   902  0023  1303               	bcf	status, 6	;RP1=0, select bank0
   903  0024  0863               	movf	(_state),w
   904  0025  3A02               	xorlw	02h
   905  0026  1D03               	skipz
   906  0027  2829               	goto	u3621
   907  0028  282A               	goto	u3620
   908  0029                     u3621:
   909  0029  283E               	goto	l4152
   910  002A                     u3620:
   911                           	line	606
   912                           	
   913  002A                     l4142:	
   914                           ;main.c: 606: if (tmr0_counter == seg_ticks_h) {
   915  002A  0864               	movf	(_tmr0_counter),w
   916  002B  0661               	xorwf	(_seg_ticks_h),w
   917  002C  1D03               	skipz
   918  002D  282F               	goto	u3631
   919  002E  2830               	goto	u3630
   920  002F                     u3631:
   921  002F  2836               	goto	l4150
   922  0030                     u3630:
   923                           	line	607
   924                           	
   925  0030                     l4144:	
   926                           ;main.c: 607: tmr0_counter = 0;
   927  0030  01E4               	clrf	(_tmr0_counter)
   928                           	line	608
   929                           	
   930  0031                     l4146:	
   931                           ;main.c: 608: TMR0 = 256 - seg_ticks_l;
   932  0031  0362               	decf	(_seg_ticks_l),w
   933  0032  3AFF               	xorlw	0ffh
   934  0033  0081               	movwf	(1)
   935                           	line	609
   936                           	
   937  0034                     l4148:	
   938                           ;main.c: 609: next_segment();
   939  0034  239E               	fcall	_next_segment
   940                           	line	610
   941                           ;main.c: 610: } else {
   942  0035  283E               	goto	l4152
   943                           	
   944  0036                     l623:	
   945                           	line	611
   946                           	
   947  0036                     l4150:	
   948                           ;main.c: 611: tmr0_counter++;
   949  0036  3001               	movlw	(01h)
   950  0037  1283               	bcf	status, 5	;RP0=0, select bank0
   951  0038  1303               	bcf	status, 6	;RP1=0, select bank0
   952  0039  00C3               	movwf	(??_main+0)+0
   953  003A  0843               	movf	(??_main+0)+0,w
   954  003B  07E4               	addwf	(_tmr0_counter),f
   955  003C  283E               	goto	l4152
   956                           	line	612
   957                           	
   958  003D                     l624:	
   959  003D  283E               	goto	l4152
   960                           	line	613
   961                           	
   962  003E                     l622:	
   963                           	line	614
   964                           	
   965  003E                     l4152:	
   966                           ;main.c: 612: }
   967                           ;main.c: 613: }
   968                           ;main.c: 614: TMR0IF = 0;
   969  003E  110B               	bcf	(90/8),(90)&7
   970  003F  2840               	goto	l4154
   971                           	line	615
   972                           	
   973  0040                     l621:	
   974                           	line	619
   975                           	
   976  0040                     l4154:	
   977                           ;main.c: 615: }
   978                           ;main.c: 619: if (TMR1IF) {
   979  0040  1283               	bcf	status, 5	;RP0=0, select bank0
   980  0041  1303               	bcf	status, 6	;RP1=0, select bank0
   981  0042  1C0C               	btfss	(96/8),(96)&7
   982  0043  2845               	goto	u3641
   983  0044  2846               	goto	u3640
   984  0045                     u3641:
   985  0045  2856               	goto	l4164
   986  0046                     u3640:
   987                           	line	620
   988                           	
   989  0046                     l4156:	
   990                           ;main.c: 620: tmr1_counter++;
   991  0046  3001               	movlw	(01h)
   992  0047  00C3               	movwf	(??_main+0)+0
   993  0048  0843               	movf	(??_main+0)+0,w
   994  0049  07E5               	addwf	(_tmr1_counter),f
   995                           	line	623
   996                           	
   997  004A                     l4158:	
   998                           ;main.c: 623: if (tmr1_counter >= 40) {
   999  004A  3028               	movlw	(028h)
  1000  004B  0265               	subwf	(_tmr1_counter),w
  1001  004C  1C03               	skipc
  1002  004D  284F               	goto	u3651
  1003  004E  2850               	goto	u3650
  1004  004F                     u3651:
  1005  004F  2852               	goto	l4162
  1006  0050                     u3650:
  1007                           	line	624
  1008                           	
  1009  0050                     l4160:	
  1010                           ;main.c: 624: application_reset();
  1011  0050  249B               	fcall	_application_reset
  1012  0051  2852               	goto	l4162
  1013                           	line	625
  1014                           	
  1015  0052                     l626:	
  1016                           	line	626
  1017                           	
  1018  0052                     l4162:	
  1019                           ;main.c: 625: }
  1020                           ;main.c: 626: TMR1IF = 0;
  1021  0052  1283               	bcf	status, 5	;RP0=0, select bank0
  1022  0053  1303               	bcf	status, 6	;RP1=0, select bank0
  1023  0054  100C               	bcf	(96/8),(96)&7
  1024  0055  2856               	goto	l4164
  1025                           	line	627
  1026                           	
  1027  0056                     l625:	
  1028                           	line	631
  1029                           	
  1030  0056                     l4164:	
  1031                           ;main.c: 627: }
  1032                           ;main.c: 631: if (last_clk == 1 && RB3 == 0) {
  1033  0056  1C77               	btfss	(_last_clk/8),(_last_clk)&7
  1034  0057  2859               	goto	u3661
  1035  0058  285A               	goto	u3660
  1036  0059                     u3661:
  1037  0059  2860               	goto	l4170
  1038  005A                     u3660:
  1039                           	
  1040  005A                     l4166:	
  1041  005A  1986               	btfsc	(51/8),(51)&7
  1042  005B  285D               	goto	u3671
  1043  005C  285E               	goto	u3670
  1044  005D                     u3671:
  1045  005D  2860               	goto	l4170
  1046  005E                     u3670:
  1047                           	line	632
  1048                           	
  1049  005E                     l4168:	
  1050                           ;main.c: 632: next_minute();
  1051  005E  2514               	fcall	_next_minute
  1052  005F  2860               	goto	l4170
  1053                           	line	633
  1054                           	
  1055  0060                     l627:	
  1056                           	line	635
  1057                           	
  1058  0060                     l4170:	
  1059                           ;main.c: 633: }
  1060                           ;main.c: 635: last_clk = RB3;
  1061  0060  1077               	bcf	(_last_clk/8),(_last_clk)&7
  1062  0061  1283               	bcf	status, 5	;RP0=0, select bank0
  1063  0062  1303               	bcf	status, 6	;RP1=0, select bank0
  1064  0063  1D86               	btfss	(51/8),(51)&7
  1065  0064  2866               	goto	u3685
  1066  0065  1477               	bsf	(_last_clk/8),(_last_clk)&7
  1067  0066                     u3685:
  1068                           
  1069  0066  281E               	goto	l4138
  1070                           	line	638
  1071                           	
  1072  0067                     l628:	
  1073                           	line	601
  1074  0067  281E               	goto	l4138
  1075                           	
  1076  0068                     l629:	
  1077  0068  2869               	goto	l4172
  1078                           	line	639
  1079                           	
  1080  0069                     l619:	
  1081                           	line	642
  1082                           	
  1083  0069                     l4172:	
  1084                           ;main.c: 638: }
  1085                           ;main.c: 639: }
  1086                           ;main.c: 642: if (mode == 1) {
  1087  0069  1283               	bcf	status, 5	;RP0=0, select bank0
  1088  006A  1303               	bcf	status, 6	;RP1=0, select bank0
  1089  006B  085E               	movf	(_mode),w
  1090  006C  3A01               	xorlw	01h
  1091  006D  1D03               	skipz
  1092  006E  2870               	goto	u3691
  1093  006F  2871               	goto	u3690
  1094  0070                     u3691:
  1095  0070  2874               	goto	l634
  1096  0071                     u3690:
  1097  0071  2872               	goto	l632
  1098                           	line	643
  1099                           ;main.c: 643: while(1)
  1100                           	
  1101  0072                     l631:	
  1102                           	line	644
  1103                           ;main.c: 644: ;
  1104                           	
  1105  0072                     l632:	
  1106                           	line	643
  1107  0072  2872               	goto	l632
  1108                           	
  1109  0073                     l633:	
  1110  0073  2874               	goto	l634
  1111                           	line	646
  1112                           	
  1113  0074                     l630:	
  1114                           	line	647
  1115                           	
  1116  0074                     l634:	
  1117                           	global	start
  1118  0074  2810               	ljmp	start
  1119                           	opt stack 0
  1120                           GLOBAL	__end_of_main
  1121  0075                     	__end_of_main:
  1122 ;; =============== function _main ends ============
  1123                           
  1124                           	signat	_main,88
  1125                           	global	_init
  1126                           psect	text816,local,class=CODE,delta=2
  1127                           global __ptext816
  1128  0481                     __ptext816:
  1129                           
  1130 ;; *************** function _init *****************
  1131 ;; Defined at:
  1132 ;;		line 532 in file "main.c"
  1133 ;; Parameters:    Size  Location     Type
  1134 ;;		None
  1135 ;; Auto vars:     Size  Location     Type
  1136 ;;		None
  1137 ;; Return value:  Size  Location     Type
  1138 ;;		None               void
  1139 ;; Registers used:
  1140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1141 ;; Tracked objects:
  1142 ;;		On entry : 0/0
  1143 ;;		On exit  : 0/0
  1144 ;;		Unchanged: 0/0
  1145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1146 ;;      Params:         0       0       0       0
  1147 ;;      Locals:         0       0       0       0
  1148 ;;      Temps:          0       0       0       0
  1149 ;;      Totals:         0       0       0       0
  1150 ;;Total ram usage:        0 bytes
  1151 ;; Hardware stack levels used:    1
  1152 ;; Hardware stack levels required when called:    6
  1153 ;; This function calls:
  1154 ;;		_set_it_faster
  1155 ;;		_rtc_setup
  1156 ;;		_init_setup
  1157 ;;		_init_normal
  1158 ;; This function is called by:
  1159 ;;		_main
  1160 ;; This function uses a non-reentrant model
  1161 ;;
  1162                           psect	text816
  1163                           	file	"main.c"
  1164                           	line	532
  1165                           	global	__size_of_init
  1166  001A                     	__size_of_init	equ	__end_of_init-_init
  1167                           	
  1168  0481                     _init:	
  1169                           	opt	stack 1
  1170                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1171                           	line	533
  1172                           	
  1173  0481                     l4108:	
  1174                           ;main.c: 533: set_it_faster(0);
  1175  0481  3000               	movlw	(0)
  1176  0482  2446               	fcall	_set_it_faster
  1177                           	line	536
  1178                           	
  1179  0483                     l4110:	
  1180                           ;main.c: 536: TRISA = 0;
  1181  0483  1683               	bsf	status, 5	;RP0=1, select bank1
  1182  0484  1303               	bcf	status, 6	;RP1=0, select bank1
  1183  0485  0185               	clrf	(133)^080h	;volatile
  1184                           	line	537
  1185                           	
  1186  0486                     l4112:	
  1187                           ;main.c: 537: ADCON1 = 0;
  1188  0486  019F               	clrf	(159)^080h	;volatile
  1189                           	line	539
  1190                           	
  1191  0487                     l4114:	
  1192                           ;main.c: 539: PORTA = 0x00;
  1193  0487  1283               	bcf	status, 5	;RP0=0, select bank0
  1194  0488  1303               	bcf	status, 6	;RP1=0, select bank0
  1195  0489  0185               	clrf	(5)	;volatile
  1196                           	line	540
  1197                           	
  1198  048A                     l4116:	
  1199                           ;main.c: 540: a_latch = 0x00;
  1200  048A  01DD               	clrf	(_a_latch)
  1201                           	line	544
  1202                           	
  1203  048B                     l4118:	
  1204                           ;main.c: 544: TRISB = 0xFF;
  1205  048B  30FF               	movlw	(0FFh)
  1206  048C  1683               	bsf	status, 5	;RP0=1, select bank1
  1207  048D  1303               	bcf	status, 6	;RP1=0, select bank1
  1208  048E  0086               	movwf	(134)^080h	;volatile
  1209                           	line	546
  1210                           	
  1211  048F                     l4120:	
  1212                           ;main.c: 546: rtc_setup();
  1213  048F  2225               	fcall	_rtc_setup
  1214                           	line	547
  1215                           	
  1216  0490                     l4122:	
  1217                           ;main.c: 547: if (RB5 == 0)
  1218  0490  1283               	bcf	status, 5	;RP0=0, select bank0
  1219  0491  1303               	bcf	status, 6	;RP1=0, select bank0
  1220  0492  1A86               	btfsc	(53/8),(53)&7
  1221  0493  2C95               	goto	u3591
  1222  0494  2C96               	goto	u3590
  1223  0495                     u3591:
  1224  0495  2C98               	goto	l4126
  1225  0496                     u3590:
  1226                           	line	548
  1227                           	
  1228  0496                     l4124:	
  1229                           ;main.c: 548: init_setup();
  1230  0496  250A               	fcall	_init_setup
  1231  0497  2C9A               	goto	l605
  1232                           	line	549
  1233                           	
  1234  0498                     l603:	
  1235                           	line	550
  1236                           	
  1237  0498                     l4126:	
  1238                           ;main.c: 549: else
  1239                           ;main.c: 550: init_normal();
  1240  0498  23F4               	fcall	_init_normal
  1241  0499  2C9A               	goto	l605
  1242                           	
  1243  049A                     l604:	
  1244                           	line	551
  1245                           	
  1246  049A                     l605:	
  1247  049A  0008               	return
  1248                           	opt stack 0
  1249                           GLOBAL	__end_of_init
  1250  049B                     	__end_of_init:
  1251 ;; =============== function _init ends ============
  1252                           
  1253                           	signat	_init,88
  1254                           	global	_init_normal
  1255                           psect	text817,local,class=CODE,delta=2
  1256                           global __ptext817
  1257  03F4                     __ptext817:
  1258                           
  1259 ;; *************** function _init_normal *****************
  1260 ;; Defined at:
  1261 ;;		line 488 in file "main.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;		None
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;		None
  1266 ;; Return value:  Size  Location     Type
  1267 ;;		None               void
  1268 ;; Registers used:
  1269 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1270 ;; Tracked objects:
  1271 ;;		On entry : 0/0
  1272 ;;		On exit  : 0/0
  1273 ;;		Unchanged: 0/0
  1274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1275 ;;      Params:         0       0       0       0
  1276 ;;      Locals:         0       0       0       0
  1277 ;;      Temps:          0       1       0       0
  1278 ;;      Totals:         0       1       0       0
  1279 ;;Total ram usage:        1 bytes
  1280 ;; Hardware stack levels used:    1
  1281 ;; Hardware stack levels required when called:    5
  1282 ;; This function calls:
  1283 ;;		_what_time_is_now
  1284 ;;		_set_it_faster
  1285 ;;		_hour_start_end_init
  1286 ;;		_sixty_start
  1287 ;;		_sixty_stop
  1288 ;; This function is called by:
  1289 ;;		_init
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           psect	text817
  1293                           	file	"main.c"
  1294                           	line	488
  1295                           	global	__size_of_init_normal
  1296  002A                     	__size_of_init_normal	equ	__end_of_init_normal-_init_normal
  1297                           	
  1298  03F4                     _init_normal:	
  1299                           	opt	stack 1
  1300                           ; Regs used in _init_normal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1301                           	line	489
  1302                           	
  1303  03F4                     l4072:	
  1304                           ;main.c: 489: mode = 0;
  1305  03F4  1283               	bcf	status, 5	;RP0=0, select bank0
  1306  03F5  1303               	bcf	status, 6	;RP1=0, select bank0
  1307  03F6  01DE               	clrf	(_mode)
  1308                           	line	490
  1309                           	
  1310  03F7                     l4074:	
  1311                           ;main.c: 490: what_time_is_now();
  1312  03F7  24E3               	fcall	_what_time_is_now
  1313                           	line	491
  1314                           	
  1315  03F8                     l4076:	
  1316                           ;main.c: 491: set_it_faster(1);
  1317  03F8  3001               	movlw	(01h)
  1318  03F9  2446               	fcall	_set_it_faster
  1319                           	line	492
  1320                           	
  1321  03FA                     l4078:	
  1322                           ;main.c: 492: hour_start_end_init();
  1323  03FA  21DE               	fcall	_hour_start_end_init
  1324                           	line	494
  1325                           	
  1326  03FB                     l4080:	
  1327                           ;main.c: 494: red_start = sixty_start(45);
  1328  03FB  302D               	movlw	(02Dh)
  1329  03FC  2310               	fcall	_sixty_start
  1330  03FD  1283               	bcf	status, 5	;RP0=0, select bank0
  1331  03FE  1303               	bcf	status, 6	;RP1=0, select bank0
  1332  03FF  00A8               	movwf	(??_init_normal+0)+0
  1333  0400  0828               	movf	(??_init_normal+0)+0,w
  1334  0401  00DF               	movwf	(_red_start)
  1335                           	line	495
  1336                           	
  1337  0402                     l4082:	
  1338                           ;main.c: 495: red_stop = sixty_stop(15);
  1339  0402  300F               	movlw	(0Fh)
  1340  0403  23C9               	fcall	_sixty_stop
  1341  0404  1283               	bcf	status, 5	;RP0=0, select bank0
  1342  0405  1303               	bcf	status, 6	;RP1=0, select bank0
  1343  0406  00A8               	movwf	(??_init_normal+0)+0
  1344  0407  0828               	movf	(??_init_normal+0)+0,w
  1345  0408  00E0               	movwf	(_red_stop)
  1346                           	line	498
  1347                           	
  1348  0409                     l4084:	
  1349                           ;main.c: 498: TMR1IF = 0;
  1350  0409  100C               	bcf	(96/8),(96)&7
  1351                           	line	499
  1352                           	
  1353  040A                     l4086:	
  1354                           ;main.c: 499: TMR1IE = 0;
  1355  040A  1683               	bsf	status, 5	;RP0=1, select bank1
  1356  040B  1303               	bcf	status, 6	;RP1=0, select bank1
  1357  040C  100C               	bcf	(1120/8)^080h,(1120)&7
  1358                           	line	500
  1359                           	
  1360  040D                     l4088:	
  1361                           ;main.c: 500: T1CON = 0;
  1362  040D  1283               	bcf	status, 5	;RP0=0, select bank0
  1363  040E  1303               	bcf	status, 6	;RP1=0, select bank0
  1364  040F  0190               	clrf	(16)	;volatile
  1365                           	line	501
  1366                           	
  1367  0410                     l4090:	
  1368                           ;main.c: 501: TMR1ON = 1;
  1369  0410  1410               	bsf	(128/8),(128)&7
  1370                           	line	504
  1371                           	
  1372  0411                     l4092:	
  1373                           ;main.c: 504: TMR0IF = 0;
  1374  0411  110B               	bcf	(90/8),(90)&7
  1375                           	line	505
  1376                           	
  1377  0412                     l4094:	
  1378                           ;main.c: 505: TMR0IE = 0;
  1379  0412  128B               	bcf	(93/8),(93)&7
  1380                           	line	506
  1381                           	
  1382  0413                     l4096:	
  1383                           ;main.c: 506: T0CS = 0;
  1384  0413  1683               	bsf	status, 5	;RP0=1, select bank1
  1385  0414  1303               	bcf	status, 6	;RP1=0, select bank1
  1386  0415  1281               	bcf	(1037/8)^080h,(1037)&7
  1387                           	line	508
  1388                           	
  1389  0416                     l4098:	
  1390                           ;main.c: 508: state = 0;
  1391  0416  1283               	bcf	status, 5	;RP0=0, select bank0
  1392  0417  1303               	bcf	status, 6	;RP1=0, select bank0
  1393  0418  01E3               	clrf	(_state)
  1394                           	line	511
  1395                           	
  1396  0419                     l4100:	
  1397                           ;main.c: 511: RBIE = 1;
  1398  0419  158B               	bsf	(91/8),(91)&7
  1399                           	line	513
  1400                           	
  1401  041A                     l4102:	
  1402                           ;main.c: 513: INTE = 0;
  1403  041A  120B               	bcf	(92/8),(92)&7
  1404                           	line	515
  1405                           	
  1406  041B                     l4104:	
  1407                           ;main.c: 515: PEIE = 1;
  1408  041B  170B               	bsf	(94/8),(94)&7
  1409                           	line	516
  1410                           	
  1411  041C                     l4106:	
  1412                           ;main.c: 516: GIE = 1;
  1413  041C  178B               	bsf	(95/8),(95)&7
  1414                           	line	517
  1415                           	
  1416  041D                     l597:	
  1417  041D  0008               	return
  1418                           	opt stack 0
  1419                           GLOBAL	__end_of_init_normal
  1420  041E                     	__end_of_init_normal:
  1421 ;; =============== function _init_normal ends ============
  1422                           
  1423                           	signat	_init_normal,88
  1424                           	global	_rtc_setup
  1425                           psect	text818,local,class=CODE,delta=2
  1426                           global __ptext818
  1427  0225                     __ptext818:
  1428                           
  1429 ;; *************** function _rtc_setup *****************
  1430 ;; Defined at:
  1431 ;;		line 426 in file "main.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;		None
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  rv              1   33[BANK0 ] unsigned char 
  1436 ;;  table          20   13[BANK0 ] unsigned char [20]
  1437 ;;  i               1   34[BANK0 ] unsigned char 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      unsigned char 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1447 ;;      Params:         0       0       0       0
  1448 ;;      Locals:         0      22       0       0
  1449 ;;      Temps:          0       4       0       0
  1450 ;;      Totals:         0      26       0       0
  1451 ;;Total ram usage:       26 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    5
  1454 ;; This function calls:
  1455 ;;		_i2c_write
  1456 ;; This function is called by:
  1457 ;;		_init
  1458 ;; This function uses a non-reentrant model
  1459 ;;
  1460                           psect	text818
  1461                           	file	"main.c"
  1462                           	line	426
  1463                           	global	__size_of_rtc_setup
  1464  0046                     	__size_of_rtc_setup	equ	__end_of_rtc_setup-_rtc_setup
  1465                           	
  1466  0225                     _rtc_setup:	
  1467                           	opt	stack 1
  1468                           ; Regs used in _rtc_setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1469                           	line	442
  1470                           	
  1471  0225                     l3878:	
  1472                           ;main.c: 427: uns8 table[] = {
  1473                           ;main.c: 429: 0x00, 0x00,
  1474                           ;main.c: 430: 0x01, 0x11,
  1475                           ;main.c: 431: 0x0D, 0x83,
  1476                           ;main.c: 432: 0x0E, 0x80,
  1477                           ;main.c: 433: 0x0F, 0x01,
  1478                           ;main.c: 436: 0x09, 0x00,
  1479                           ;main.c: 437: 0x0A, 0x00,
  1480                           ;main.c: 438: 0x0B, 0x00,
  1481                           ;main.c: 439: 0x0C, 0x00,
  1482                           ;main.c: 441: 0xFF, 0xFF
  1483                           ;main.c: 442: };
  1484  0225  302D               	movlw	(rtc_setup@table)&0ffh
  1485  0226  0084               	movwf	fsr0
  1486  0227  30A0               	movlw	low(rtc_setup@F797)
  1487  0228  1283               	bcf	status, 5	;RP0=0, select bank0
  1488  0229  1303               	bcf	status, 6	;RP1=0, select bank0
  1489  022A  00A9               	movwf	(??_rtc_setup+0)+0
  1490  022B  0804               	movf	fsr0,w
  1491  022C  00AA               	movwf	((??_rtc_setup+0)+0+1)
  1492  022D  3014               	movlw	20
  1493  022E  00AB               	movwf	((??_rtc_setup+0)+0+2)
  1494  022F                     u3420:
  1495  022F  0829               	movf	(??_rtc_setup+0)+0,w
  1496  0230  0084               	movwf	fsr0
  1497  0231  1383               	bcf	status, 7	;select IRP bank1
  1498                           	
  1499  0232  0800               	movf	indf,w
  1500  0233  00AC               	movwf	((??_rtc_setup+0)+0+3)
  1501  0234  0AA9               	incf	(??_rtc_setup+0)+0,f
  1502  0235  082A               	movf	((??_rtc_setup+0)+0+1),w
  1503  0236  0084               	movwf	fsr0
  1504                           	
  1505  0237  082C               	movf	((??_rtc_setup+0)+0+3),w
  1506  0238  0080               	movwf	indf
  1507  0239  0AAA               	incf	((??_rtc_setup+0)+0+1),f
  1508  023A  0BAB               	decfsz	((??_rtc_setup+0)+0+2),f
  1509  023B  2A2F               	goto	u3420
  1510                           	line	444
  1511                           	
  1512  023C                     l3880:	
  1513                           ;main.c: 444: uns8 i=0;
  1514  023C  01C2               	clrf	(rtc_setup@i)
  1515                           	line	445
  1516                           ;main.c: 445: while (table[i] != 0xFF) {
  1517  023D  2A5F               	goto	l3890
  1518                           	
  1519  023E                     l587:	
  1520                           	line	447
  1521                           	
  1522  023E                     l3882:	
  1523                           ;main.c: 446: uns8 rv;
  1524                           ;main.c: 447: rv = i2c_write(0xA3, table[i], table[i+1]);
  1525  023E  0842               	movf	(rtc_setup@i),w
  1526  023F  3E2D               	addlw	rtc_setup@table&0ffh
  1527  0240  0084               	movwf	fsr0
  1528  0241  0800               	movf	indf,w
  1529  0242  00A9               	movwf	(??_rtc_setup+0)+0
  1530  0243  0829               	movf	(??_rtc_setup+0)+0,w
  1531  0244  00A5               	movwf	(?_i2c_write)
  1532  0245  0842               	movf	(rtc_setup@i),w
  1533  0246  3E01               	addlw	01h
  1534  0247  3E2D               	addlw	rtc_setup@table&0ffh
  1535  0248  0084               	movwf	fsr0
  1536  0249  0800               	movf	indf,w
  1537  024A  00AA               	movwf	(??_rtc_setup+1)+0
  1538  024B  082A               	movf	(??_rtc_setup+1)+0,w
  1539  024C  00A6               	movwf	0+(?_i2c_write)+01h
  1540  024D  30A3               	movlw	(0A3h)
  1541  024E  2134               	fcall	_i2c_write
  1542  024F  1283               	bcf	status, 5	;RP0=0, select bank0
  1543  0250  1303               	bcf	status, 6	;RP1=0, select bank0
  1544  0251  00AB               	movwf	(??_rtc_setup+2)+0
  1545  0252  082B               	movf	(??_rtc_setup+2)+0,w
  1546  0253  00C1               	movwf	(rtc_setup@rv)
  1547                           	line	448
  1548                           	
  1549  0254                     l3884:	
  1550                           ;main.c: 448: if (rv)
  1551  0254  0841               	movf	(rtc_setup@rv),w
  1552  0255  1D03               	skipz
  1553  0256  2A58               	goto	u3430
  1554  0257  2A5A               	goto	l3888
  1555  0258                     u3430:
  1556  0258  2A6A               	goto	l589
  1557                           	line	449
  1558                           	
  1559  0259                     l3886:	
  1560                           ;main.c: 449: return 0xFF;
  1561                           ;	Return value of _rtc_setup is never used
  1562  0259  2A6A               	goto	l589
  1563                           	
  1564  025A                     l588:	
  1565                           	line	450
  1566                           	
  1567  025A                     l3888:	
  1568                           ;main.c: 450: i += 2;
  1569  025A  3002               	movlw	(02h)
  1570  025B  00A9               	movwf	(??_rtc_setup+0)+0
  1571  025C  0829               	movf	(??_rtc_setup+0)+0,w
  1572  025D  07C2               	addwf	(rtc_setup@i),f
  1573  025E  2A5F               	goto	l3890
  1574                           	line	451
  1575                           	
  1576  025F                     l586:	
  1577                           	line	445
  1578                           	
  1579  025F                     l3890:	
  1580  025F  0842               	movf	(rtc_setup@i),w
  1581  0260  3E2D               	addlw	rtc_setup@table&0ffh
  1582  0261  0084               	movwf	fsr0
  1583  0262  1383               	bcf	status, 7	;select IRP bank0
  1584  0263  0800               	movf	indf,w
  1585  0264  3AFF               	xorlw	0FFh
  1586  0265  1D03               	skipz
  1587  0266  2A68               	goto	u3441
  1588  0267  2A69               	goto	u3440
  1589  0268                     u3441:
  1590  0268  2A3E               	goto	l3882
  1591  0269                     u3440:
  1592  0269  2A6A               	goto	l589
  1593                           	
  1594  026A                     l590:	
  1595                           	line	452
  1596                           	
  1597  026A                     l589:	
  1598  026A  0008               	return
  1599                           	opt stack 0
  1600                           GLOBAL	__end_of_rtc_setup
  1601  026B                     	__end_of_rtc_setup:
  1602 ;; =============== function _rtc_setup ends ============
  1603                           
  1604                           	signat	_rtc_setup,89
  1605                           	global	_next_segment
  1606                           psect	text819,local,class=CODE,delta=2
  1607                           global __ptext819
  1608  039E                     __ptext819:
  1609                           
  1610 ;; *************** function _next_segment *****************
  1611 ;; Defined at:
  1612 ;;		line 266 in file "main.c"
  1613 ;; Parameters:    Size  Location     Type
  1614 ;;		None
  1615 ;; Auto vars:     Size  Location     Type
  1616 ;;		None
  1617 ;; Return value:  Size  Location     Type
  1618 ;;		None               void
  1619 ;; Registers used:
  1620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1621 ;; Tracked objects:
  1622 ;;		On entry : 0/0
  1623 ;;		On exit  : 0/0
  1624 ;;		Unchanged: 0/0
  1625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1626 ;;      Params:         0       0       0       0
  1627 ;;      Locals:         0       0       0       0
  1628 ;;      Temps:          0       1       0       0
  1629 ;;      Totals:         0       1       0       0
  1630 ;;Total ram usage:        1 bytes
  1631 ;; Hardware stack levels used:    1
  1632 ;; Hardware stack levels required when called:    5
  1633 ;; This function calls:
  1634 ;;		_bit_on
  1635 ;;		_bit_off
  1636 ;;		_show_clk
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           psect	text819
  1642                           	file	"main.c"
  1643                           	line	266
  1644                           	global	__size_of_next_segment
  1645  002B                     	__size_of_next_segment	equ	__end_of_next_segment-_next_segment
  1646                           	
  1647  039E                     _next_segment:	
  1648                           	opt	stack 2
  1649                           ; Regs used in _next_segment: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1650                           	line	267
  1651                           	
  1652  039E                     l3856:	
  1653                           ;main.c: 267: GIE = 0;
  1654  039E  138B               	bcf	(95/8),(95)&7
  1655                           	line	269
  1656                           	
  1657  039F                     l3858:	
  1658                           ;main.c: 269: if (segment.raw >= 128) {
  1659  039F  3080               	movlw	(080h)
  1660  03A0  1283               	bcf	status, 5	;RP0=0, select bank0
  1661  03A1  1303               	bcf	status, 6	;RP1=0, select bank0
  1662  03A2  0251               	subwf	(_segment),w
  1663  03A3  1C03               	skipc
  1664  03A4  2BA6               	goto	u3391
  1665  03A5  2BA7               	goto	u3390
  1666  03A6                     u3391:
  1667  03A6  2BA9               	goto	l3862
  1668  03A7                     u3390:
  1669  03A7  2BC6               	goto	l3874
  1670                           	line	271
  1671                           	
  1672  03A8                     l3860:	
  1673                           ;main.c: 271: goto ns_end;
  1674  03A8  2BC6               	goto	l3874
  1675                           	line	272
  1676                           	
  1677  03A9                     l543:	
  1678                           	line	274
  1679                           	
  1680  03A9                     l3862:	
  1681                           ;main.c: 272: }
  1682                           ;main.c: 274: if (segment.raw == red_start)
  1683  03A9  0851               	movf	(_segment),w
  1684  03AA  065F               	xorwf	(_red_start),w
  1685  03AB  1D03               	skipz
  1686  03AC  2BAE               	goto	u3401
  1687  03AD  2BAF               	goto	u3400
  1688  03AE                     u3401:
  1689  03AE  2BB2               	goto	l3866
  1690  03AF                     u3400:
  1691                           	line	275
  1692                           	
  1693  03AF                     l3864:	
  1694                           ;main.c: 275: bit_on(0x02);
  1695  03AF  3002               	movlw	(02h)
  1696  03B0  24F8               	fcall	_bit_on
  1697  03B1  2BBE               	goto	l3870
  1698                           	line	276
  1699                           	
  1700  03B2                     l545:	
  1701                           	
  1702  03B2                     l3866:	
  1703                           ;main.c: 276: else if (segment.raw == red_stop)
  1704  03B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1705  03B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1706  03B4  0851               	movf	(_segment),w
  1707  03B5  0660               	xorwf	(_red_stop),w
  1708  03B6  1D03               	skipz
  1709  03B7  2BB9               	goto	u3411
  1710  03B8  2BBA               	goto	u3410
  1711  03B9                     u3411:
  1712  03B9  2BBE               	goto	l3870
  1713  03BA                     u3410:
  1714                           	line	277
  1715                           	
  1716  03BA                     l3868:	
  1717                           ;main.c: 277: bit_off(0x02);
  1718  03BA  3002               	movlw	(02h)
  1719  03BB  24EE               	fcall	_bit_off
  1720  03BC  2BBE               	goto	l3870
  1721                           	
  1722  03BD                     l547:	
  1723  03BD  2BBE               	goto	l3870
  1724                           	line	280
  1725                           	
  1726  03BE                     l546:	
  1727                           	
  1728  03BE                     l3870:	
  1729                           ;main.c: 280: show_clk();
  1730  03BE  20D7               	fcall	_show_clk
  1731                           	line	282
  1732                           	
  1733  03BF                     l3872:	
  1734                           ;main.c: 282: segment.raw++;
  1735  03BF  3001               	movlw	(01h)
  1736  03C0  1283               	bcf	status, 5	;RP0=0, select bank0
  1737  03C1  1303               	bcf	status, 6	;RP1=0, select bank0
  1738  03C2  00A8               	movwf	(??_next_segment+0)+0
  1739  03C3  0828               	movf	(??_next_segment+0)+0,w
  1740  03C4  07D1               	addwf	(_segment),f
  1741  03C5  2BC6               	goto	l3874
  1742                           	line	284
  1743                           ;main.c: 284: ns_end:
  1744                           	
  1745  03C6                     l544:	
  1746                           	line	285
  1747                           	
  1748  03C6                     l3874:	
  1749                           ;main.c: 285: GIE = 1;
  1750  03C6  178B               	bsf	(95/8),(95)&7
  1751  03C7  2BC8               	goto	l548
  1752                           	line	286
  1753                           	
  1754  03C8                     l3876:	
  1755                           	line	287
  1756                           ;main.c: 286: return;
  1757                           	
  1758  03C8                     l548:	
  1759  03C8  0008               	return
  1760                           	opt stack 0
  1761                           GLOBAL	__end_of_next_segment
  1762  03C9                     	__end_of_next_segment:
  1763 ;; =============== function _next_segment ends ============
  1764                           
  1765                           	signat	_next_segment,88
  1766                           	global	_application_reset
  1767                           psect	text820,local,class=CODE,delta=2
  1768                           global __ptext820
  1769  049B                     __ptext820:
  1770                           
  1771 ;; *************** function _application_reset *****************
  1772 ;; Defined at:
  1773 ;;		line 458 in file "main.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;		None               void
  1780 ;; Registers used:
  1781 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1787 ;;      Params:         0       0       0       0
  1788 ;;      Locals:         0       0       0       0
  1789 ;;      Temps:          0       0       0       0
  1790 ;;      Totals:         0       0       0       0
  1791 ;;Total ram usage:        0 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    4
  1794 ;; This function calls:
  1795 ;;		_shift_write
  1796 ;;		_what_time_is_now
  1797 ;;		_segment_calc
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           psect	text820
  1803                           	file	"main.c"
  1804                           	line	458
  1805                           	global	__size_of_application_reset
  1806  001A                     	__size_of_application_reset	equ	__end_of_application_reset-_application_reset
  1807                           	
  1808  049B                     _application_reset:	
  1809                           	opt	stack 3
  1810                           ; Regs used in _application_reset: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1811                           	line	459
  1812                           	
  1813  049B                     l4046:	
  1814                           ;main.c: 459: if (mode != 0)
  1815  049B  1283               	bcf	status, 5	;RP0=0, select bank0
  1816  049C  1303               	bcf	status, 6	;RP1=0, select bank0
  1817  049D  085E               	movf	(_mode),w
  1818  049E  1D03               	skipz
  1819  049F  2CA1               	goto	u3580
  1820  04A0  2CA3               	goto	l593
  1821  04A1                     u3580:
  1822  04A1  2CB4               	goto	l594
  1823                           	line	460
  1824                           	
  1825  04A2                     l4048:	
  1826                           ;main.c: 460: return;
  1827  04A2  2CB4               	goto	l594
  1828                           	
  1829  04A3                     l593:	
  1830                           	line	461
  1831                           ;main.c: 461: state = 0;
  1832  04A3  01E3               	clrf	(_state)
  1833                           	line	462
  1834                           	
  1835  04A4                     l4050:	
  1836                           ;main.c: 462: shift_write(0x5A);
  1837  04A4  305A               	movlw	(05Ah)
  1838  04A5  2190               	fcall	_shift_write
  1839                           	line	464
  1840                           	
  1841  04A6                     l4052:	
  1842                           ;main.c: 464: tmr1_counter = 0;
  1843  04A6  1283               	bcf	status, 5	;RP0=0, select bank0
  1844  04A7  1303               	bcf	status, 6	;RP1=0, select bank0
  1845  04A8  01E5               	clrf	(_tmr1_counter)
  1846                           	line	465
  1847                           	
  1848  04A9                     l4054:	
  1849                           ;main.c: 465: tmr0_counter = 0;
  1850  04A9  01E4               	clrf	(_tmr0_counter)
  1851                           	line	468
  1852                           	
  1853  04AA                     l4056:	
  1854                           ;main.c: 468: segment.show = 0;
  1855  04AA  01DC               	clrf	0+(_segment)+0Bh
  1856                           	line	469
  1857                           	
  1858  04AB                     l4058:	
  1859                           ;main.c: 469: what_time_is_now();
  1860  04AB  24E3               	fcall	_what_time_is_now
  1861                           	line	470
  1862                           	
  1863  04AC                     l4060:	
  1864                           ;main.c: 470: segment_calc();
  1865  04AC  2371               	fcall	_segment_calc
  1866                           	line	473
  1867                           	
  1868  04AD                     l4062:	
  1869                           ;main.c: 473: TMR0 = 0;
  1870  04AD  1283               	bcf	status, 5	;RP0=0, select bank0
  1871  04AE  1303               	bcf	status, 6	;RP1=0, select bank0
  1872  04AF  0181               	clrf	(1)	;volatile
  1873                           	line	474
  1874                           	
  1875  04B0                     l4064:	
  1876                           ;main.c: 474: TMR1L = 0;
  1877  04B0  018E               	clrf	(14)	;volatile
  1878                           	line	475
  1879                           	
  1880  04B1                     l4066:	
  1881                           ;main.c: 475: TMR1H = 0;
  1882  04B1  018F               	clrf	(15)	;volatile
  1883                           	line	478
  1884                           	
  1885  04B2                     l4068:	
  1886                           ;main.c: 478: TMR0IF = 0;
  1887  04B2  110B               	bcf	(90/8),(90)&7
  1888                           	line	479
  1889                           	
  1890  04B3                     l4070:	
  1891                           ;main.c: 479: TMR1IF = 0;
  1892  04B3  100C               	bcf	(96/8),(96)&7
  1893                           	line	480
  1894                           	
  1895  04B4                     l594:	
  1896  04B4  0008               	return
  1897                           	opt stack 0
  1898                           GLOBAL	__end_of_application_reset
  1899  04B5                     	__end_of_application_reset:
  1900 ;; =============== function _application_reset ends ============
  1901                           
  1902                           	signat	_application_reset,88
  1903                           	global	_i2c_write
  1904                           psect	text821,local,class=CODE,delta=2
  1905                           global __ptext821
  1906  0134                     __ptext821:
  1907                           
  1908 ;; *************** function _i2c_write *****************
  1909 ;; Defined at:
  1910 ;;		line 81 in file "i2c.c"
  1911 ;; Parameters:    Size  Location     Type
  1912 ;;  dev             1    wreg     unsigned char 
  1913 ;;  addr            1    5[BANK0 ] unsigned char 
  1914 ;;  data            1    6[BANK0 ] unsigned char 
  1915 ;; Auto vars:     Size  Location     Type
  1916 ;;  dev             1    8[BANK0 ] unsigned char 
  1917 ;; Return value:  Size  Location     Type
  1918 ;;                  1    wreg      unsigned char 
  1919 ;; Registers used:
  1920 ;;		wreg, status,2, status,0, pclath, cstack
  1921 ;; Tracked objects:
  1922 ;;		On entry : 0/0
  1923 ;;		On exit  : 0/0
  1924 ;;		Unchanged: 0/0
  1925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1926 ;;      Params:         0       2       0       0
  1927 ;;      Locals:         0       1       0       0
  1928 ;;      Temps:          0       1       0       0
  1929 ;;      Totals:         0       4       0       0
  1930 ;;Total ram usage:        4 bytes
  1931 ;; Hardware stack levels used:    1
  1932 ;; Hardware stack levels required when called:    4
  1933 ;; This function calls:
  1934 ;;		_i2c_write_byte
  1935 ;; This function is called by:
  1936 ;;		_rtc_setup
  1937 ;; This function uses a non-reentrant model
  1938 ;;
  1939                           psect	text821
  1940                           	file	"i2c.c"
  1941                           	line	81
  1942                           	global	__size_of_i2c_write
  1943  005C                     	__size_of_i2c_write	equ	__end_of_i2c_write-_i2c_write
  1944                           	
  1945  0134                     _i2c_write:	
  1946                           	opt	stack 1
  1947                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  1948                           ;i2c_write@dev stored from wreg
  1949                           	line	87
  1950  0134  1283               	bcf	status, 5	;RP0=0, select bank0
  1951  0135  1303               	bcf	status, 6	;RP1=0, select bank0
  1952  0136  00A8               	movwf	(i2c_write@dev)
  1953                           	
  1954  0137                     l3790:	
  1955                           ;i2c.c: 87: dev &= 0xFE;
  1956  0137  30FE               	movlw	(0FEh)
  1957  0138  00A7               	movwf	(??_i2c_write+0)+0
  1958  0139  0827               	movf	(??_i2c_write+0)+0,w
  1959  013A  05A8               	andwf	(i2c_write@dev),f
  1960  013B  293D               	goto	l3792
  1961                           	line	88
  1962                           ;i2c.c: 88: do {do {asm("nop"); TRISB4 = 1; } while(0); do {asm("nop"); RB1 = 0; TRISB1 
                                 = 0; } while(0); do {asm("nop"); RB4 = 0; TRISB4 = 0; } while(0);} while(0);
  1963                           	
  1964  013C                     l1132:	
  1965  013C  293D               	goto	l3792
  1966                           	
  1967  013D                     l1133:	
  1968                           	
  1969  013D                     l3792:	
  1970                           # 88 "i2c.c"
  1971  013D  0000               nop ;#
  1972                           psect	text821
  1973                           	
  1974  013E                     l3794:	
  1975  013E  1683               	bsf	status, 5	;RP0=1, select bank1
  1976  013F  1303               	bcf	status, 6	;RP1=0, select bank1
  1977  0140  1606               	bsf	(1076/8)^080h,(1076)&7
  1978  0141  2943               	goto	l3796
  1979                           	
  1980  0142                     l1134:	
  1981  0142  2943               	goto	l3796
  1982                           	
  1983  0143                     l1135:	
  1984                           	
  1985  0143                     l3796:	
  1986                           # 88 "i2c.c"
  1987  0143  0000               nop ;#
  1988                           psect	text821
  1989                           	
  1990  0144                     l3798:	
  1991  0144  1283               	bcf	status, 5	;RP0=0, select bank0
  1992  0145  1303               	bcf	status, 6	;RP1=0, select bank0
  1993  0146  1086               	bcf	(49/8),(49)&7
  1994                           	
  1995  0147                     l3800:	
  1996  0147  1683               	bsf	status, 5	;RP0=1, select bank1
  1997  0148  1303               	bcf	status, 6	;RP1=0, select bank1
  1998  0149  1086               	bcf	(1073/8)^080h,(1073)&7
  1999  014A  294C               	goto	l3802
  2000                           	
  2001  014B                     l1136:	
  2002  014B  294C               	goto	l3802
  2003                           	
  2004  014C                     l1137:	
  2005                           	
  2006  014C                     l3802:	
  2007                           # 88 "i2c.c"
  2008  014C  0000               nop ;#
  2009                           psect	text821
  2010                           	
  2011  014D                     l3804:	
  2012  014D  1283               	bcf	status, 5	;RP0=0, select bank0
  2013  014E  1303               	bcf	status, 6	;RP1=0, select bank0
  2014  014F  1206               	bcf	(52/8),(52)&7
  2015                           	
  2016  0150                     l3806:	
  2017  0150  1683               	bsf	status, 5	;RP0=1, select bank1
  2018  0151  1303               	bcf	status, 6	;RP1=0, select bank1
  2019  0152  1206               	bcf	(1076/8)^080h,(1076)&7
  2020  0153  2955               	goto	l3808
  2021                           	
  2022  0154                     l1138:	
  2023  0154  2955               	goto	l3808
  2024                           	
  2025  0155                     l1139:	
  2026                           	line	90
  2027                           	
  2028  0155                     l3808:	
  2029                           ;i2c.c: 90: if (i2c_write_byte(dev))
  2030  0155  1283               	bcf	status, 5	;RP0=0, select bank0
  2031  0156  1303               	bcf	status, 6	;RP1=0, select bank0
  2032  0157  0828               	movf	(i2c_write@dev),w
  2033  0158  22DC               	fcall	_i2c_write_byte
  2034  0159  3A00               	xorlw	0
  2035  015A  1903               	skipnz
  2036  015B  295D               	goto	u3351
  2037  015C  295E               	goto	u3350
  2038  015D                     u3351:
  2039  015D  2961               	goto	l3814
  2040  015E                     u3350:
  2041                           	line	91
  2042                           	
  2043  015E                     l3810:	
  2044                           ;i2c.c: 91: return 0xFF;
  2045  015E  30FF               	movlw	(0FFh)
  2046  015F  298F               	goto	l1141
  2047                           	
  2048  0160                     l3812:	
  2049  0160  298F               	goto	l1141
  2050                           	
  2051  0161                     l1140:	
  2052                           	line	92
  2053                           	
  2054  0161                     l3814:	
  2055                           ;i2c.c: 92: if (i2c_write_byte(addr))
  2056  0161  1283               	bcf	status, 5	;RP0=0, select bank0
  2057  0162  1303               	bcf	status, 6	;RP1=0, select bank0
  2058  0163  0825               	movf	(i2c_write@addr),w
  2059  0164  22DC               	fcall	_i2c_write_byte
  2060  0165  3A00               	xorlw	0
  2061  0166  1903               	skipnz
  2062  0167  2969               	goto	u3361
  2063  0168  296A               	goto	u3360
  2064  0169                     u3361:
  2065  0169  296D               	goto	l3820
  2066  016A                     u3360:
  2067                           	line	93
  2068                           	
  2069  016A                     l3816:	
  2070                           ;i2c.c: 93: return 0xFF;
  2071  016A  30FF               	movlw	(0FFh)
  2072  016B  298F               	goto	l1141
  2073                           	
  2074  016C                     l3818:	
  2075  016C  298F               	goto	l1141
  2076                           	
  2077  016D                     l1142:	
  2078                           	line	94
  2079                           	
  2080  016D                     l3820:	
  2081                           ;i2c.c: 94: if (i2c_write_byte(data))
  2082  016D  1283               	bcf	status, 5	;RP0=0, select bank0
  2083  016E  1303               	bcf	status, 6	;RP1=0, select bank0
  2084  016F  0826               	movf	(i2c_write@data),w
  2085  0170  22DC               	fcall	_i2c_write_byte
  2086  0171  3A00               	xorlw	0
  2087  0172  1903               	skipnz
  2088  0173  2975               	goto	u3371
  2089  0174  2976               	goto	u3370
  2090  0175                     u3371:
  2091  0175  297A               	goto	l1145
  2092  0176                     u3370:
  2093                           	line	95
  2094                           	
  2095  0176                     l3822:	
  2096                           ;i2c.c: 95: return 0xFF;
  2097  0176  30FF               	movlw	(0FFh)
  2098  0177  298F               	goto	l1141
  2099                           	
  2100  0178                     l3824:	
  2101  0178  298F               	goto	l1141
  2102                           	
  2103  0179                     l1143:	
  2104  0179  297A               	goto	l1145
  2105                           	line	96
  2106                           ;i2c.c: 96: do {do {asm("nop"); RB1 = 0; TRISB1 = 0; } while(0); do {asm("nop"); TRISB4 
                                 = 1; } while(0); do {asm("nop"); TRISB1 = 1; } while(0);} while(0);
  2107                           	
  2108  017A                     l1144:	
  2109                           	
  2110  017A                     l1145:	
  2111                           # 96 "i2c.c"
  2112  017A  0000               nop ;#
  2113                           psect	text821
  2114  017B  1283               	bcf	status, 5	;RP0=0, select bank0
  2115  017C  1303               	bcf	status, 6	;RP1=0, select bank0
  2116  017D  1086               	bcf	(49/8),(49)&7
  2117  017E  1683               	bsf	status, 5	;RP0=1, select bank1
  2118  017F  1303               	bcf	status, 6	;RP1=0, select bank1
  2119  0180  1086               	bcf	(1073/8)^080h,(1073)&7
  2120  0181  2982               	goto	l1147
  2121                           	
  2122  0182                     l1146:	
  2123                           	
  2124  0182                     l1147:	
  2125                           # 96 "i2c.c"
  2126  0182  0000               nop ;#
  2127                           psect	text821
  2128  0183  1683               	bsf	status, 5	;RP0=1, select bank1
  2129  0184  1303               	bcf	status, 6	;RP1=0, select bank1
  2130  0185  1606               	bsf	(1076/8)^080h,(1076)&7
  2131  0186  2987               	goto	l1149
  2132                           	
  2133  0187                     l1148:	
  2134                           	
  2135  0187                     l1149:	
  2136                           # 96 "i2c.c"
  2137  0187  0000               nop ;#
  2138                           psect	text821
  2139  0188  1683               	bsf	status, 5	;RP0=1, select bank1
  2140  0189  1303               	bcf	status, 6	;RP1=0, select bank1
  2141  018A  1486               	bsf	(1073/8)^080h,(1073)&7
  2142  018B  298D               	goto	l3826
  2143                           	
  2144  018C                     l1150:	
  2145  018C  298D               	goto	l3826
  2146                           	
  2147  018D                     l1151:	
  2148                           	line	97
  2149                           	
  2150  018D                     l3826:	
  2151                           ;i2c.c: 97: return 0;
  2152  018D  3000               	movlw	(0)
  2153  018E  298F               	goto	l1141
  2154                           	
  2155  018F                     l3828:	
  2156                           	line	98
  2157                           	
  2158  018F                     l1141:	
  2159  018F  0008               	return
  2160                           	opt stack 0
  2161                           GLOBAL	__end_of_i2c_write
  2162  0190                     	__end_of_i2c_write:
  2163 ;; =============== function _i2c_write ends ============
  2164                           
  2165                           	signat	_i2c_write,12409
  2166                           	global	_set_it_faster
  2167                           psect	text822,local,class=CODE,delta=2
  2168                           global __ptext822
  2169  0446                     __ptext822:
  2170                           
  2171 ;; *************** function _set_it_faster *****************
  2172 ;; Defined at:
  2173 ;;		line 402 in file "main.c"
  2174 ;; Parameters:    Size  Location     Type
  2175 ;;  how_much        1    wreg     unsigned char 
  2176 ;; Auto vars:     Size  Location     Type
  2177 ;;  how_much        1    7[BANK0 ] unsigned char 
  2178 ;; Return value:  Size  Location     Type
  2179 ;;		None               void
  2180 ;; Registers used:
  2181 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2187 ;;      Params:         0       0       0       0
  2188 ;;      Locals:         0       1       0       0
  2189 ;;      Temps:          0       0       0       0
  2190 ;;      Totals:         0       1       0       0
  2191 ;;Total ram usage:        1 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    4
  2194 ;; This function calls:
  2195 ;;		_shift_write
  2196 ;; This function is called by:
  2197 ;;		_init_normal
  2198 ;;		_init
  2199 ;; This function uses a non-reentrant model
  2200 ;;
  2201                           psect	text822
  2202                           	file	"main.c"
  2203                           	line	402
  2204                           	global	__size_of_set_it_faster
  2205  001E                     	__size_of_set_it_faster	equ	__end_of_set_it_faster-_set_it_faster
  2206                           	
  2207  0446                     _set_it_faster:	
  2208                           	opt	stack 1
  2209                           ; Regs used in _set_it_faster: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2210                           ;set_it_faster@how_much stored from wreg
  2211  0446  1283               	bcf	status, 5	;RP0=0, select bank0
  2212  0447  1303               	bcf	status, 6	;RP1=0, select bank0
  2213  0448  00A7               	movwf	(set_it_faster@how_much)
  2214                           	line	403
  2215                           	
  2216  0449                     l4038:	
  2217                           ;main.c: 403: shift_write(0x05);
  2218  0449  3005               	movlw	(05h)
  2219  044A  2190               	fcall	_shift_write
  2220                           	line	405
  2221                           	
  2222  044B                     l4040:	
  2223                           ;main.c: 405: if (how_much == 0)
  2224  044B  1283               	bcf	status, 5	;RP0=0, select bank0
  2225  044C  1303               	bcf	status, 6	;RP1=0, select bank0
  2226  044D  08A7               	movf	(set_it_faster@how_much),f
  2227  044E  1D03               	skipz
  2228  044F  2C51               	goto	u3561
  2229  0450  2C52               	goto	u3560
  2230  0451                     u3561:
  2231  0451  2C56               	goto	l576
  2232  0452                     u3560:
  2233                           	line	406
  2234                           	
  2235  0452                     l4042:	
  2236                           ;main.c: 406: OSCCONbits.IRCF2 = 0;
  2237  0452  1683               	bsf	status, 5	;RP0=1, select bank1
  2238  0453  1303               	bcf	status, 6	;RP1=0, select bank1
  2239  0454  130F               	bcf	(143)^080h,6	;volatile
  2240  0455  2C59               	goto	l577
  2241                           	line	407
  2242                           	
  2243  0456                     l576:	
  2244                           	line	408
  2245                           ;main.c: 407: else
  2246                           ;main.c: 408: OSCCONbits.IRCF2 = 1;
  2247  0456  1683               	bsf	status, 5	;RP0=1, select bank1
  2248  0457  1303               	bcf	status, 6	;RP1=0, select bank1
  2249  0458  170F               	bsf	(143)^080h,6	;volatile
  2250                           	
  2251  0459                     l577:	
  2252                           	line	410
  2253                           ;main.c: 410: OSCCONbits.IRCF1 = 1;
  2254  0459  168F               	bsf	(143)^080h,5	;volatile
  2255                           	line	411
  2256                           ;main.c: 411: OSCCONbits.IRCF0 = 1;
  2257  045A  160F               	bsf	(143)^080h,4	;volatile
  2258                           	line	413
  2259                           ;main.c: 413: while(!IOFS) {
  2260  045B  2C5C               	goto	l578
  2261                           	
  2262  045C                     l579:	
  2263                           	line	415
  2264                           ;main.c: 414: ;
  2265                           	
  2266  045C                     l578:	
  2267                           	line	413
  2268  045C  1D0F               	btfss	(1146/8)^080h,(1146)&7
  2269  045D  2C5F               	goto	u3571
  2270  045E  2C60               	goto	u3570
  2271  045F                     u3571:
  2272  045F  2C5C               	goto	l578
  2273  0460                     u3570:
  2274  0460  2C61               	goto	l4044
  2275                           	
  2276  0461                     l580:	
  2277                           	line	416
  2278                           	
  2279  0461                     l4044:	
  2280                           ;main.c: 415: }
  2281                           ;main.c: 416: shift_write(0x02);
  2282  0461  3002               	movlw	(02h)
  2283  0462  2190               	fcall	_shift_write
  2284                           	line	417
  2285                           	
  2286  0463                     l581:	
  2287  0463  0008               	return
  2288                           	opt stack 0
  2289                           GLOBAL	__end_of_set_it_faster
  2290  0464                     	__end_of_set_it_faster:
  2291 ;; =============== function _set_it_faster ends ============
  2292                           
  2293                           	signat	_set_it_faster,4216
  2294                           	global	_next_minute
  2295                           psect	text823,local,class=CODE,delta=2
  2296                           global __ptext823
  2297  0514                     __ptext823:
  2298                           
  2299 ;; *************** function _next_minute *****************
  2300 ;; Defined at:
  2301 ;;		line 323 in file "main.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;		None               void
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0, pclath, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 0/0
  2312 ;;		On exit  : 0/0
  2313 ;;		Unchanged: 0/0
  2314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2315 ;;      Params:         0       0       0       0
  2316 ;;      Locals:         0       0       0       0
  2317 ;;      Temps:          0       0       0       0
  2318 ;;      Totals:         0       0       0       0
  2319 ;;Total ram usage:        0 bytes
  2320 ;; Hardware stack levels used:    1
  2321 ;; Hardware stack levels required when called:    4
  2322 ;; This function calls:
  2323 ;;		_time_next_minute
  2324 ;;		_segment_calc
  2325 ;; This function is called by:
  2326 ;;		_main
  2327 ;; This function uses a non-reentrant model
  2328 ;;
  2329                           psect	text823
  2330                           	file	"main.c"
  2331                           	line	323
  2332                           	global	__size_of_next_minute
  2333  0003                     	__size_of_next_minute	equ	__end_of_next_minute-_next_minute
  2334                           	
  2335  0514                     _next_minute:	
  2336                           	opt	stack 3
  2337                           ; Regs used in _next_minute: [wreg+status,2+status,0+pclath+cstack]
  2338                           	line	325
  2339                           	
  2340  0514                     l4036:	
  2341                           ;main.c: 325: time_next_minute();
  2342  0514  2464               	fcall	_time_next_minute
  2343                           	line	327
  2344                           ;main.c: 327: segment_calc();
  2345  0515  2371               	fcall	_segment_calc
  2346                           	line	328
  2347                           	
  2348  0516                     l559:	
  2349  0516  0008               	return
  2350                           	opt stack 0
  2351                           GLOBAL	__end_of_next_minute
  2352  0517                     	__end_of_next_minute:
  2353 ;; =============== function _next_minute ends ============
  2354                           
  2355                           	signat	_next_minute,88
  2356                           	global	_show_clk
  2357                           psect	text824,local,class=CODE,delta=2
  2358                           global __ptext824
  2359  00D7                     __ptext824:
  2360                           
  2361 ;; *************** function _show_clk *****************
  2362 ;; Defined at:
  2363 ;;		line 226 in file "main.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;		None
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;		None
  2368 ;; Return value:  Size  Location     Type
  2369 ;;		None               void
  2370 ;; Registers used:
  2371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2372 ;; Tracked objects:
  2373 ;;		On entry : 0/0
  2374 ;;		On exit  : 0/0
  2375 ;;		Unchanged: 0/0
  2376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2377 ;;      Params:         0       0       0       0
  2378 ;;      Locals:         0       0       0       0
  2379 ;;      Temps:          0       1       0       0
  2380 ;;      Totals:         0       1       0       0
  2381 ;;Total ram usage:        1 bytes
  2382 ;; Hardware stack levels used:    1
  2383 ;; Hardware stack levels required when called:    4
  2384 ;; This function calls:
  2385 ;;		_shift_write
  2386 ;; This function is called by:
  2387 ;;		_next_segment
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           psect	text824
  2391                           	file	"main.c"
  2392                           	line	226
  2393                           	global	__size_of_show_clk
  2394  005D                     	__size_of_show_clk	equ	__end_of_show_clk-_show_clk
  2395                           	
  2396  00D7                     _show_clk:	
  2397                           	opt	stack 2
  2398                           ; Regs used in _show_clk: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2399                           	line	228
  2400                           	
  2401  00D7                     l3740:	
  2402                           ;main.c: 228: if (segment.raw == 0 && segment.flags != 0) {
  2403  00D7  1283               	bcf	status, 5	;RP0=0, select bank0
  2404  00D8  1303               	bcf	status, 6	;RP1=0, select bank0
  2405  00D9  08D1               	movf	(_segment),f
  2406  00DA  1D03               	skipz
  2407  00DB  28DD               	goto	u3271
  2408  00DC  28DE               	goto	u3270
  2409  00DD                     u3271:
  2410  00DD  28F0               	goto	l3748
  2411  00DE                     u3270:
  2412                           	
  2413  00DE                     l3742:	
  2414  00DE  085B               	movf	0+(_segment)+0Ah,w
  2415  00DF  1D03               	skipz
  2416  00E0  28E2               	goto	u3280
  2417  00E1  28F0               	goto	l3748
  2418  00E2                     u3280:
  2419                           	line	229
  2420                           	
  2421  00E2                     l3744:	
  2422                           ;main.c: 229: segment.flags = 0;
  2423  00E2  01DB               	clrf	0+(_segment)+0Ah
  2424                           	line	230
  2425                           	
  2426  00E3                     l3746:	
  2427                           ;main.c: 230: segment.hour = segment.hour_next;
  2428  00E3  085A               	movf	1+(_segment)+08h,w
  2429  00E4  01D6               	clrf	1+(_segment)+04h
  2430  00E5  07D6               	addwf	1+(_segment)+04h
  2431  00E6  0859               	movf	0+(_segment)+08h,w
  2432  00E7  01D5               	clrf	0+(_segment)+04h
  2433  00E8  07D5               	addwf	0+(_segment)+04h
  2434                           
  2435                           	line	231
  2436                           ;main.c: 231: segment.min = segment.min_next;
  2437  00E9  0858               	movf	1+(_segment)+06h,w
  2438  00EA  01D4               	clrf	1+(_segment)+02h
  2439  00EB  07D4               	addwf	1+(_segment)+02h
  2440  00EC  0857               	movf	0+(_segment)+06h,w
  2441  00ED  01D3               	clrf	0+(_segment)+02h
  2442  00EE  07D3               	addwf	0+(_segment)+02h
  2443                           
  2444  00EF  28F0               	goto	l3748
  2445                           	line	232
  2446                           	
  2447  00F0                     l527:	
  2448                           	line	234
  2449                           	
  2450  00F0                     l3748:	
  2451                           ;main.c: 232: }
  2452                           ;main.c: 234: if (segment.raw == segment.min.start) {
  2453  00F0  0853               	movf	0+(_segment)+02h,w
  2454  00F1  0651               	xorwf	(_segment),w
  2455  00F2  1D03               	skipz
  2456  00F3  28F5               	goto	u3291
  2457  00F4  28F6               	goto	u3290
  2458  00F5                     u3291:
  2459  00F5  28F8               	goto	l3752
  2460  00F6                     u3290:
  2461                           	line	235
  2462                           	
  2463  00F6                     l3750:	
  2464                           ;main.c: 235: segment.show |= 0x02;
  2465  00F6  14DC               	bsf	0+(_segment)+0Bh+(1/8),(1)&7
  2466                           	line	236
  2467                           ;main.c: 236: } else if (segment.raw == segment.min.stop ) {
  2468  00F7  2904               	goto	l3756
  2469                           	
  2470  00F8                     l528:	
  2471                           	
  2472  00F8                     l3752:	
  2473  00F8  0854               	movf	0+(_segment)+03h,w
  2474  00F9  0651               	xorwf	(_segment),w
  2475  00FA  1D03               	skipz
  2476  00FB  28FD               	goto	u3301
  2477  00FC  28FE               	goto	u3300
  2478  00FD                     u3301:
  2479  00FD  2904               	goto	l3756
  2480  00FE                     u3300:
  2481                           	line	237
  2482                           	
  2483  00FE                     l3754:	
  2484                           ;main.c: 237: segment.show &=~0x02;
  2485  00FE  30FD               	movlw	(0FDh)
  2486  00FF  00A7               	movwf	(??_show_clk+0)+0
  2487  0100  0827               	movf	(??_show_clk+0)+0,w
  2488  0101  05DC               	andwf	0+(_segment)+0Bh,f
  2489  0102  2904               	goto	l3756
  2490                           	line	238
  2491                           	
  2492  0103                     l530:	
  2493  0103  2904               	goto	l3756
  2494                           	line	241
  2495                           	
  2496  0104                     l529:	
  2497                           	
  2498  0104                     l3756:	
  2499                           ;main.c: 238: }
  2500                           ;main.c: 241: if (segment.raw == segment.hour.start) {
  2501  0104  0855               	movf	0+(_segment)+04h,w
  2502  0105  0651               	xorwf	(_segment),w
  2503  0106  1D03               	skipz
  2504  0107  2909               	goto	u3311
  2505  0108  290A               	goto	u3310
  2506  0109                     u3311:
  2507  0109  290C               	goto	l3760
  2508  010A                     u3310:
  2509                           	line	242
  2510                           	
  2511  010A                     l3758:	
  2512                           ;main.c: 242: segment.show |= 0x01;
  2513  010A  145C               	bsf	0+(_segment)+0Bh+(0/8),(0)&7
  2514                           	line	243
  2515                           ;main.c: 243: } else if (segment.raw == segment.hour.stop ) {
  2516  010B  2926               	goto	l3774
  2517                           	
  2518  010C                     l531:	
  2519                           	
  2520  010C                     l3760:	
  2521  010C  0856               	movf	0+(_segment)+05h,w
  2522  010D  0651               	xorwf	(_segment),w
  2523  010E  1D03               	skipz
  2524  010F  2911               	goto	u3321
  2525  0110  2912               	goto	u3320
  2526  0111                     u3321:
  2527  0111  2926               	goto	l3774
  2528  0112                     u3320:
  2529                           	line	244
  2530                           	
  2531  0112                     l3762:	
  2532                           ;main.c: 244: segment.show &=~0x01;
  2533  0112  30FE               	movlw	(0FEh)
  2534  0113  00A7               	movwf	(??_show_clk+0)+0
  2535  0114  0827               	movf	(??_show_clk+0)+0,w
  2536  0115  05DC               	andwf	0+(_segment)+0Bh,f
  2537  0116  2926               	goto	l3774
  2538                           	line	245
  2539                           	
  2540  0117                     l533:	
  2541  0117  2926               	goto	l3774
  2542                           	line	247
  2543                           	
  2544  0118                     l532:	
  2545                           ;main.c: 245: }
  2546                           ;main.c: 247: switch (segment.show) {
  2547  0118  2926               	goto	l3774
  2548                           	line	248
  2549                           ;main.c: 248: case 0:
  2550                           	
  2551  0119                     l535:	
  2552                           	line	249
  2553                           	
  2554  0119                     l3764:	
  2555                           ;main.c: 249: shift_write(0x00);
  2556  0119  3000               	movlw	(0)
  2557  011A  2190               	fcall	_shift_write
  2558                           	line	250
  2559                           ;main.c: 250: break;
  2560  011B  2933               	goto	l540
  2561                           	line	251
  2562                           ;main.c: 251: case 0x02:
  2563                           	
  2564  011C                     l537:	
  2565                           	line	252
  2566                           	
  2567  011C                     l3766:	
  2568                           ;main.c: 252: shift_write(0x1F);
  2569  011C  301F               	movlw	(01Fh)
  2570  011D  2190               	fcall	_shift_write
  2571                           	line	253
  2572                           ;main.c: 253: break;
  2573  011E  2933               	goto	l540
  2574                           	line	254
  2575                           ;main.c: 254: case 0x01:
  2576                           	
  2577  011F                     l538:	
  2578                           	line	255
  2579                           	
  2580  011F                     l3768:	
  2581                           ;main.c: 255: shift_write(0xF0);
  2582  011F  30F0               	movlw	(0F0h)
  2583  0120  2190               	fcall	_shift_write
  2584                           	line	256
  2585                           ;main.c: 256: break;
  2586  0121  2933               	goto	l540
  2587                           	line	257
  2588                           ;main.c: 257: case 0x01 | 0x02:
  2589                           	
  2590  0122                     l539:	
  2591                           	line	258
  2592                           	
  2593  0122                     l3770:	
  2594                           ;main.c: 258: shift_write(0xFF);
  2595  0122  30FF               	movlw	(0FFh)
  2596  0123  2190               	fcall	_shift_write
  2597                           	line	259
  2598                           ;main.c: 259: break;
  2599  0124  2933               	goto	l540
  2600                           	line	260
  2601                           	
  2602  0125                     l3772:	
  2603                           ;main.c: 260: }
  2604  0125  2933               	goto	l540
  2605                           	line	247
  2606                           	
  2607  0126                     l534:	
  2608                           	
  2609  0126                     l3774:	
  2610  0126  1283               	bcf	status, 5	;RP0=0, select bank0
  2611  0127  1303               	bcf	status, 6	;RP1=0, select bank0
  2612  0128  085C               	movf	0+(_segment)+0Bh,w
  2613                           	; Switch size 1, requested type "space"
  2614                           ; Number of cases is 4, Range of values is 0 to 3
  2615                           ; switch strategies available:
  2616                           ; Name         Instructions Cycles
  2617                           ; direct_byte           10     6 (fixed)
  2618                           ; simple_byte           13     7 (average)
  2619                           ; jumptable            260     6 (fixed)
  2620                           ; rangetable             8     6 (fixed)
  2621                           ; spacedrange           14     9 (fixed)
  2622                           ; locatedrange           4     3 (fixed)
  2623                           ;	Chosen strategy is direct_byte
  2624                           
  2625  0129  0084               	movwf fsr
  2626  012A  3004               	movlw	4
  2627  012B  0204               	subwf	fsr,w
  2628  012C  1803               skipnc
  2629  012D  2933               goto l540
  2630  012E  3005               movlw high(S4214)
  2631  012F  008A               movwf pclath
  2632  0130  3010               	movlw low(S4214)
  2633  0131  0704               	addwf fsr,w
  2634  0132  0082               	movwf pc
  2635                           psect	swtext1,local,class=CONST,delta=2
  2636                           global __pswtext1
  2637  0510                     __pswtext1:
  2638  0510                     S4214:
  2639  0510  2919               	ljmp	l3764
  2640  0511  291F               	ljmp	l3768
  2641  0512  291C               	ljmp	l3766
  2642  0513  2922               	ljmp	l3770
  2643                           psect	text824
  2644                           
  2645                           	line	260
  2646                           	
  2647  0133                     l536:	
  2648                           	line	261
  2649                           	
  2650  0133                     l540:	
  2651  0133  0008               	return
  2652                           	opt stack 0
  2653                           GLOBAL	__end_of_show_clk
  2654  0134                     	__end_of_show_clk:
  2655 ;; =============== function _show_clk ends ============
  2656                           
  2657                           	signat	_show_clk,88
  2658                           	global	_i2c_write_byte
  2659                           psect	text825,local,class=CODE,delta=2
  2660                           global __ptext825
  2661  02DC                     __ptext825:
  2662                           
  2663 ;; *************** function _i2c_write_byte *****************
  2664 ;; Defined at:
  2665 ;;		line 60 in file "i2c.c"
  2666 ;; Parameters:    Size  Location     Type
  2667 ;;  byte            1    wreg     unsigned char 
  2668 ;; Auto vars:     Size  Location     Type
  2669 ;;  byte            1    3[BANK0 ] unsigned char 
  2670 ;;  i               1    4[BANK0 ] unsigned char 
  2671 ;; Return value:  Size  Location     Type
  2672 ;;                  1    wreg      unsigned char 
  2673 ;; Registers used:
  2674 ;;		wreg, status,2, status,0, pclath, cstack
  2675 ;; Tracked objects:
  2676 ;;		On entry : 0/0
  2677 ;;		On exit  : 0/0
  2678 ;;		Unchanged: 0/0
  2679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2680 ;;      Params:         0       0       0       0
  2681 ;;      Locals:         0       2       0       0
  2682 ;;      Temps:          0       1       0       0
  2683 ;;      Totals:         0       3       0       0
  2684 ;;Total ram usage:        3 bytes
  2685 ;; Hardware stack levels used:    1
  2686 ;; Hardware stack levels required when called:    3
  2687 ;; This function calls:
  2688 ;;		_i2c_write_bit
  2689 ;;		_i2c_check_ack
  2690 ;; This function is called by:
  2691 ;;		_i2c_write
  2692 ;;		_i2c_read
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           psect	text825
  2696                           	file	"i2c.c"
  2697                           	line	60
  2698                           	global	__size_of_i2c_write_byte
  2699  0034                     	__size_of_i2c_write_byte	equ	__end_of_i2c_write_byte-_i2c_write_byte
  2700                           	
  2701  02DC                     _i2c_write_byte:	
  2702                           	opt	stack 1
  2703                           ; Regs used in _i2c_write_byte: [wreg+status,2+status,0+pclath+cstack]
  2704                           ;i2c_write_byte@byte stored from wreg
  2705                           	line	64
  2706  02DC  1283               	bcf	status, 5	;RP0=0, select bank0
  2707  02DD  1303               	bcf	status, 6	;RP1=0, select bank0
  2708  02DE  00A3               	movwf	(i2c_write_byte@byte)
  2709                           	
  2710  02DF                     l3718:	
  2711                           ;i2c.c: 63: uns8 i;
  2712                           ;i2c.c: 64: for (i=0; i<8; i++) {
  2713  02DF  01A4               	clrf	(i2c_write_byte@i)
  2714                           	
  2715  02E0                     l3720:	
  2716  02E0  3008               	movlw	(08h)
  2717  02E1  0224               	subwf	(i2c_write_byte@i),w
  2718  02E2  1C03               	skipc
  2719  02E3  2AE5               	goto	u3231
  2720  02E4  2AE6               	goto	u3230
  2721  02E5                     u3231:
  2722  02E5  2AE8               	goto	l3724
  2723  02E6                     u3230:
  2724  02E6  2B04               	goto	l3730
  2725                           	
  2726  02E7                     l3722:	
  2727  02E7  2B04               	goto	l3730
  2728                           	
  2729  02E8                     l1123:	
  2730                           	line	66
  2731                           	
  2732  02E8                     l3724:	
  2733                           ;i2c.c: 66: i2c_write_bit((byte >> (7-i)) & 0x01);
  2734  02E8  0823               	movf	(i2c_write_byte@byte),w
  2735  02E9  00A2               	movwf	(??_i2c_write_byte+0)+0
  2736  02EA  0324               	decf	(i2c_write_byte@i),w
  2737  02EB  3AFF               	xorlw	0ffh
  2738  02EC  3E07               	addlw	07h
  2739  02ED  3E01               	addlw	1
  2740  02EE  2AF1               	goto	u3244
  2741  02EF                     u3245:
  2742  02EF  1003               	clrc
  2743  02F0  0CA2               	rrf	(??_i2c_write_byte+0)+0,f
  2744  02F1                     u3244:
  2745  02F1  3EFF               	addlw	-1
  2746  02F2  1D03               	skipz
  2747  02F3  2AEF               	goto	u3245
  2748  02F4  0822               	movf	0+(??_i2c_write_byte+0)+0,w
  2749  02F5  3901               	andlw	01h
  2750  02F6  241E               	fcall	_i2c_write_bit
  2751                           	line	64
  2752                           	
  2753  02F7                     l3726:	
  2754  02F7  3001               	movlw	(01h)
  2755  02F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2756  02F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2757  02FA  00A2               	movwf	(??_i2c_write_byte+0)+0
  2758  02FB  0822               	movf	(??_i2c_write_byte+0)+0,w
  2759  02FC  07A4               	addwf	(i2c_write_byte@i),f
  2760                           	
  2761  02FD                     l3728:	
  2762  02FD  3008               	movlw	(08h)
  2763  02FE  0224               	subwf	(i2c_write_byte@i),w
  2764  02FF  1C03               	skipc
  2765  0300  2B02               	goto	u3251
  2766  0301  2B03               	goto	u3250
  2767  0302                     u3251:
  2768  0302  2AE8               	goto	l3724
  2769  0303                     u3250:
  2770  0303  2B04               	goto	l3730
  2771                           	
  2772  0304                     l1124:	
  2773                           	line	68
  2774                           	
  2775  0304                     l3730:	
  2776                           ;i2c.c: 67: }
  2777                           ;i2c.c: 68: if (i2c_check_ack())
  2778  0304  226B               	fcall	_i2c_check_ack
  2779  0305  3A00               	xorlw	0
  2780  0306  1903               	skipnz
  2781  0307  2B09               	goto	u3261
  2782  0308  2B0A               	goto	u3260
  2783  0309                     u3261:
  2784  0309  2B0D               	goto	l3736
  2785  030A                     u3260:
  2786                           	line	69
  2787                           	
  2788  030A                     l3732:	
  2789                           ;i2c.c: 69: return 0xFF;
  2790  030A  30FF               	movlw	(0FFh)
  2791  030B  2B0F               	goto	l1126
  2792                           	
  2793  030C                     l3734:	
  2794  030C  2B0F               	goto	l1126
  2795                           	
  2796  030D                     l1125:	
  2797                           	line	71
  2798                           	
  2799  030D                     l3736:	
  2800                           ;i2c.c: 71: return 0;
  2801  030D  3000               	movlw	(0)
  2802  030E  2B0F               	goto	l1126
  2803                           	
  2804  030F                     l3738:	
  2805                           	line	72
  2806                           	
  2807  030F                     l1126:	
  2808  030F  0008               	return
  2809                           	opt stack 0
  2810                           GLOBAL	__end_of_i2c_write_byte
  2811  0310                     	__end_of_i2c_write_byte:
  2812 ;; =============== function _i2c_write_byte ends ============
  2813                           
  2814                           	signat	_i2c_write_byte,4217
  2815                           	global	_segment_calc
  2816                           psect	text826,local,class=CODE,delta=2
  2817                           global __ptext826
  2818  0371                     __ptext826:
  2819                           
  2820 ;; *************** function _segment_calc *****************
  2821 ;; Defined at:
  2822 ;;		line 311 in file "main.c"
  2823 ;; Parameters:    Size  Location     Type
  2824 ;;		None
  2825 ;; Auto vars:     Size  Location     Type
  2826 ;;		None
  2827 ;; Return value:  Size  Location     Type
  2828 ;;		None               void
  2829 ;; Registers used:
  2830 ;;		wreg, status,2, status,0, pclath, cstack
  2831 ;; Tracked objects:
  2832 ;;		On entry : 0/0
  2833 ;;		On exit  : 0/0
  2834 ;;		Unchanged: 0/0
  2835 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2836 ;;      Params:         0       0       0       0
  2837 ;;      Locals:         0       0       0       0
  2838 ;;      Temps:          0       2       0       0
  2839 ;;      Totals:         0       2       0       0
  2840 ;;Total ram usage:        2 bytes
  2841 ;; Hardware stack levels used:    1
  2842 ;; Hardware stack levels required when called:    3
  2843 ;; This function calls:
  2844 ;;		_sixty_start
  2845 ;;		_sixty_stop
  2846 ;;		___bmul
  2847 ;; This function is called by:
  2848 ;;		_next_minute
  2849 ;;		_application_reset
  2850 ;; This function uses a non-reentrant model
  2851 ;;
  2852                           psect	text826
  2853                           	file	"main.c"
  2854                           	line	311
  2855                           	global	__size_of_segment_calc
  2856  002D                     	__size_of_segment_calc	equ	__end_of_segment_calc-_segment_calc
  2857                           	
  2858  0371                     _segment_calc:	
  2859                           	opt	stack 3
  2860                           ; Regs used in _segment_calc: [wreg+status,2+status,0+pclath+cstack]
  2861                           	line	312
  2862                           	
  2863  0371                     l3714:	
  2864                           ;main.c: 312: segment.min_next.start = sixty_start(time.min);
  2865  0371  1283               	bcf	status, 5	;RP0=0, select bank0
  2866  0372  1303               	bcf	status, 6	;RP1=0, select bank0
  2867  0373  0866               	movf	(_time),w
  2868  0374  2310               	fcall	_sixty_start
  2869  0375  1283               	bcf	status, 5	;RP0=0, select bank0
  2870  0376  1303               	bcf	status, 6	;RP1=0, select bank0
  2871  0377  00A4               	movwf	(??_segment_calc+0)+0
  2872  0378  0824               	movf	(??_segment_calc+0)+0,w
  2873  0379  00D7               	movwf	0+(_segment)+06h
  2874                           	line	313
  2875                           ;main.c: 313: segment.min_next.stop = sixty_stop(time.min);
  2876  037A  0866               	movf	(_time),w
  2877  037B  23C9               	fcall	_sixty_stop
  2878  037C  1283               	bcf	status, 5	;RP0=0, select bank0
  2879  037D  1303               	bcf	status, 6	;RP1=0, select bank0
  2880  037E  00A4               	movwf	(??_segment_calc+0)+0
  2881  037F  0824               	movf	(??_segment_calc+0)+0,w
  2882  0380  00D8               	movwf	0+(_segment)+07h
  2883                           	line	315
  2884                           ;main.c: 315: segment.hour_next.start = sixty_start(time.hrs * 12);
  2885  0381  300C               	movlw	(0Ch)
  2886  0382  00A4               	movwf	(??_segment_calc+0)+0
  2887  0383  0824               	movf	(??_segment_calc+0)+0,w
  2888  0384  00A0               	movwf	(?___bmul)
  2889  0385  0867               	movf	0+(_time)+01h,w
  2890  0386  24B5               	fcall	___bmul
  2891  0387  2310               	fcall	_sixty_start
  2892  0388  1283               	bcf	status, 5	;RP0=0, select bank0
  2893  0389  1303               	bcf	status, 6	;RP1=0, select bank0
  2894  038A  00A5               	movwf	(??_segment_calc+1)+0
  2895  038B  0825               	movf	(??_segment_calc+1)+0,w
  2896  038C  00D9               	movwf	0+(_segment)+08h
  2897                           	line	316
  2898                           ;main.c: 316: segment.hour_next.stop = sixty_stop(time.hrs * 12);
  2899  038D  300C               	movlw	(0Ch)
  2900  038E  00A4               	movwf	(??_segment_calc+0)+0
  2901  038F  0824               	movf	(??_segment_calc+0)+0,w
  2902  0390  00A0               	movwf	(?___bmul)
  2903  0391  0867               	movf	0+(_time)+01h,w
  2904  0392  24B5               	fcall	___bmul
  2905  0393  23C9               	fcall	_sixty_stop
  2906  0394  1283               	bcf	status, 5	;RP0=0, select bank0
  2907  0395  1303               	bcf	status, 6	;RP1=0, select bank0
  2908  0396  00A5               	movwf	(??_segment_calc+1)+0
  2909  0397  0825               	movf	(??_segment_calc+1)+0,w
  2910  0398  00DA               	movwf	0+(_segment)+09h
  2911                           	line	318
  2912                           	
  2913  0399                     l3716:	
  2914                           ;main.c: 318: segment.flags = 0x02 | 0x01;
  2915  0399  3003               	movlw	(03h)
  2916  039A  00A4               	movwf	(??_segment_calc+0)+0
  2917  039B  0824               	movf	(??_segment_calc+0)+0,w
  2918  039C  00DB               	movwf	0+(_segment)+0Ah
  2919                           	line	320
  2920                           	
  2921  039D                     l556:	
  2922  039D  0008               	return
  2923                           	opt stack 0
  2924                           GLOBAL	__end_of_segment_calc
  2925  039E                     	__end_of_segment_calc:
  2926 ;; =============== function _segment_calc ends ============
  2927                           
  2928                           	signat	_segment_calc,88
  2929                           	global	_hour_start_end_init
  2930                           psect	text827,local,class=CODE,delta=2
  2931                           global __ptext827
  2932  01DE                     __ptext827:
  2933                           
  2934 ;; *************** function _hour_start_end_init *****************
  2935 ;; Defined at:
  2936 ;;		line 200 in file "main.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  min             1    6[BANK0 ] unsigned char 
  2941 ;;  i               1    7[BANK0 ] unsigned char 
  2942 ;; Return value:  Size  Location     Type
  2943 ;;		None               void
  2944 ;; Registers used:
  2945 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2946 ;; Tracked objects:
  2947 ;;		On entry : 0/0
  2948 ;;		On exit  : 0/0
  2949 ;;		Unchanged: 0/0
  2950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2951 ;;      Params:         0       0       0       0
  2952 ;;      Locals:         0       2       0       0
  2953 ;;      Temps:          0       2       0       0
  2954 ;;      Totals:         0       4       0       0
  2955 ;;Total ram usage:        4 bytes
  2956 ;; Hardware stack levels used:    1
  2957 ;; Hardware stack levels required when called:    3
  2958 ;; This function calls:
  2959 ;;		___bmul
  2960 ;;		_sixty_start
  2961 ;;		_sixty_stop
  2962 ;; This function is called by:
  2963 ;;		_init_normal
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           psect	text827
  2967                           	file	"main.c"
  2968                           	line	200
  2969                           	global	__size_of_hour_start_end_init
  2970  0047                     	__size_of_hour_start_end_init	equ	__end_of_hour_start_end_init-_hour_start_end_init
  2971                           	
  2972  01DE                     _hour_start_end_init:	
  2973                           	opt	stack 2
  2974                           ; Regs used in _hour_start_end_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2975                           	line	202
  2976                           	
  2977  01DE                     l3696:	
  2978                           ;main.c: 201: uns8 i;
  2979                           ;main.c: 202: for (i=0; i<12; i++) {
  2980  01DE  1283               	bcf	status, 5	;RP0=0, select bank0
  2981  01DF  1303               	bcf	status, 6	;RP1=0, select bank0
  2982  01E0  01A7               	clrf	(hour_start_end_init@i)
  2983                           	
  2984  01E1                     l3698:	
  2985  01E1  300C               	movlw	(0Ch)
  2986  01E2  0227               	subwf	(hour_start_end_init@i),w
  2987  01E3  1C03               	skipc
  2988  01E4  29E6               	goto	u3201
  2989  01E5  29E7               	goto	u3200
  2990  01E6                     u3201:
  2991  01E6  29E9               	goto	l3702
  2992  01E7                     u3200:
  2993  01E7  2A24               	goto	l517
  2994                           	
  2995  01E8                     l3700:	
  2996  01E8  2A24               	goto	l517
  2997                           	
  2998  01E9                     l515:	
  2999                           	line	204
  3000                           	
  3001  01E9                     l3702:	
  3002                           ;main.c: 203: uns8 min;
  3003                           ;main.c: 204: min = i << 2 + i;
  3004  01E9  0827               	movf	(hour_start_end_init@i),w
  3005  01EA  00A4               	movwf	(??_hour_start_end_init+0)+0
  3006  01EB  0827               	movf	(hour_start_end_init@i),w
  3007  01EC  3E02               	addlw	02h
  3008  01ED  3E01               	addlw	1
  3009  01EE  29F1               	goto	u3214
  3010  01EF                     u3215:
  3011  01EF  1003               	clrc
  3012  01F0  0DA4               	rlf	(??_hour_start_end_init+0)+0,f
  3013  01F1                     u3214:
  3014  01F1  3EFF               	addlw	-1
  3015  01F2  1D03               	skipz
  3016  01F3  29EF               	goto	u3215
  3017  01F4  0824               	movf	0+(??_hour_start_end_init+0)+0,w
  3018  01F5  00A5               	movwf	(??_hour_start_end_init+1)+0
  3019  01F6  0825               	movf	(??_hour_start_end_init+1)+0,w
  3020  01F7  00A6               	movwf	(hour_start_end_init@min)
  3021                           	line	205
  3022                           	
  3023  01F8                     l3704:	
  3024                           ;main.c: 205: min = i*5;
  3025  01F8  3005               	movlw	(05h)
  3026  01F9  00A4               	movwf	(??_hour_start_end_init+0)+0
  3027  01FA  0824               	movf	(??_hour_start_end_init+0)+0,w
  3028  01FB  00A0               	movwf	(?___bmul)
  3029  01FC  0827               	movf	(hour_start_end_init@i),w
  3030  01FD  24B5               	fcall	___bmul
  3031  01FE  1283               	bcf	status, 5	;RP0=0, select bank0
  3032  01FF  1303               	bcf	status, 6	;RP1=0, select bank0
  3033  0200  00A5               	movwf	(??_hour_start_end_init+1)+0
  3034  0201  0825               	movf	(??_hour_start_end_init+1)+0,w
  3035  0202  00A6               	movwf	(hour_start_end_init@min)
  3036                           	line	206
  3037                           	
  3038  0203                     l3706:	
  3039                           ;main.c: 206: hour_start[i] = sixty_start(min);
  3040  0203  0826               	movf	(hour_start_end_init@min),w
  3041  0204  2310               	fcall	_sixty_start
  3042  0205  1283               	bcf	status, 5	;RP0=0, select bank0
  3043  0206  1303               	bcf	status, 6	;RP1=0, select bank0
  3044  0207  00A4               	movwf	(??_hour_start_end_init+0)+0
  3045  0208  0827               	movf	(hour_start_end_init@i),w
  3046  0209  3E45               	addlw	_hour_start&0ffh
  3047  020A  0084               	movwf	fsr0
  3048  020B  0824               	movf	(??_hour_start_end_init+0)+0,w
  3049  020C  1383               	bcf	status, 7	;select IRP bank0
  3050  020D  0080               	movwf	indf
  3051                           	line	207
  3052                           	
  3053  020E                     l3708:	
  3054                           ;main.c: 207: hour_end[i] = sixty_stop(min);
  3055  020E  0826               	movf	(hour_start_end_init@min),w
  3056  020F  23C9               	fcall	_sixty_stop
  3057  0210  1283               	bcf	status, 5	;RP0=0, select bank0
  3058  0211  1303               	bcf	status, 6	;RP1=0, select bank0
  3059  0212  00A4               	movwf	(??_hour_start_end_init+0)+0
  3060  0213  0827               	movf	(hour_start_end_init@i),w
  3061  0214  3EB4               	addlw	_hour_end&0ffh
  3062  0215  0084               	movwf	fsr0
  3063  0216  0824               	movf	(??_hour_start_end_init+0)+0,w
  3064  0217  1383               	bcf	status, 7	;select IRP bank1
  3065  0218  0080               	movwf	indf
  3066                           	line	202
  3067                           	
  3068  0219                     l3710:	
  3069  0219  3001               	movlw	(01h)
  3070  021A  00A4               	movwf	(??_hour_start_end_init+0)+0
  3071  021B  0824               	movf	(??_hour_start_end_init+0)+0,w
  3072  021C  07A7               	addwf	(hour_start_end_init@i),f
  3073                           	
  3074  021D                     l3712:	
  3075  021D  300C               	movlw	(0Ch)
  3076  021E  0227               	subwf	(hour_start_end_init@i),w
  3077  021F  1C03               	skipc
  3078  0220  2A22               	goto	u3221
  3079  0221  2A23               	goto	u3220
  3080  0222                     u3221:
  3081  0222  29E9               	goto	l3702
  3082  0223                     u3220:
  3083  0223  2A24               	goto	l517
  3084                           	
  3085  0224                     l516:	
  3086                           	line	209
  3087                           	
  3088  0224                     l517:	
  3089  0224  0008               	return
  3090                           	opt stack 0
  3091                           GLOBAL	__end_of_hour_start_end_init
  3092  0225                     	__end_of_hour_start_end_init:
  3093 ;; =============== function _hour_start_end_init ends ============
  3094                           
  3095                           	signat	_hour_start_end_init,88
  3096                           	global	_shift_write
  3097                           psect	text828,local,class=CODE,delta=2
  3098                           global __ptext828
  3099  0190                     __ptext828:
  3100                           
  3101 ;; *************** function _shift_write *****************
  3102 ;; Defined at:
  3103 ;;		line 40 in file "main.c"
  3104 ;; Parameters:    Size  Location     Type
  3105 ;;  data            1    wreg     unsigned char 
  3106 ;; Auto vars:     Size  Location     Type
  3107 ;;  data            1    6[BANK0 ] unsigned char 
  3108 ;;  i               2    4[BANK0 ] int 
  3109 ;; Return value:  Size  Location     Type
  3110 ;;		None               void
  3111 ;; Registers used:
  3112 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3113 ;; Tracked objects:
  3114 ;;		On entry : 0/0
  3115 ;;		On exit  : 0/0
  3116 ;;		Unchanged: 0/0
  3117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3118 ;;      Params:         0       0       0       0
  3119 ;;      Locals:         0       3       0       0
  3120 ;;      Temps:          0       2       0       0
  3121 ;;      Totals:         0       5       0       0
  3122 ;;Total ram usage:        5 bytes
  3123 ;; Hardware stack levels used:    1
  3124 ;; Hardware stack levels required when called:    3
  3125 ;; This function calls:
  3126 ;;		_bit_off
  3127 ;;		_bit_on
  3128 ;; This function is called by:
  3129 ;;		_show_clk
  3130 ;;		_set_it_faster
  3131 ;;		_application_reset
  3132 ;; This function uses a non-reentrant model
  3133 ;;
  3134                           psect	text828
  3135                           	file	"main.c"
  3136                           	line	40
  3137                           	global	__size_of_shift_write
  3138  004E                     	__size_of_shift_write	equ	__end_of_shift_write-_shift_write
  3139                           	
  3140  0190                     _shift_write:	
  3141                           	opt	stack 2
  3142                           ; Regs used in _shift_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3143                           ;shift_write@data stored from wreg
  3144                           	line	43
  3145  0190  1283               	bcf	status, 5	;RP0=0, select bank0
  3146  0191  1303               	bcf	status, 6	;RP1=0, select bank0
  3147  0192  00A6               	movwf	(shift_write@data)
  3148                           	
  3149  0193                     l3672:	
  3150                           ;main.c: 41: int i;
  3151                           ;main.c: 43: bit_off(0x08);
  3152  0193  3008               	movlw	(08h)
  3153  0194  24EE               	fcall	_bit_off
  3154                           	line	44
  3155                           ;main.c: 44: bit_off(0x10);
  3156  0195  3010               	movlw	(010h)
  3157  0196  24EE               	fcall	_bit_off
  3158                           	line	45
  3159                           	
  3160  0197                     l3674:	
  3161                           ;main.c: 45: for (i=0; i<8; i++) {
  3162  0197  1283               	bcf	status, 5	;RP0=0, select bank0
  3163  0198  1303               	bcf	status, 6	;RP1=0, select bank0
  3164  0199  01A4               	clrf	(shift_write@i)
  3165  019A  01A5               	clrf	(shift_write@i+1)
  3166                           	
  3167  019B                     l3676:	
  3168  019B  0825               	movf	(shift_write@i+1),w
  3169  019C  3A80               	xorlw	80h
  3170  019D  00FF               	movwf	btemp+1
  3171  019E  3080               	movlw	(high(08h))^80h
  3172  019F  027F               	subwf	btemp+1,w
  3173  01A0  1D03               	skipz
  3174  01A1  29A4               	goto	u3175
  3175  01A2  3008               	movlw	low(08h)
  3176  01A3  0224               	subwf	(shift_write@i),w
  3177  01A4                     u3175:
  3178                           
  3179  01A4  1C03               	skipc
  3180  01A5  29A7               	goto	u3171
  3181  01A6  29A8               	goto	u3170
  3182  01A7                     u3171:
  3183  01A7  29AA               	goto	l483
  3184  01A8                     u3170:
  3185  01A8  29D8               	goto	l3692
  3186                           	
  3187  01A9                     l3678:	
  3188  01A9  29D8               	goto	l3692
  3189                           	
  3190  01AA                     l483:	
  3191                           	line	46
  3192                           ;main.c: 46: if ((data & 0x01) != 0) {
  3193  01AA  1283               	bcf	status, 5	;RP0=0, select bank0
  3194  01AB  1303               	bcf	status, 6	;RP1=0, select bank0
  3195  01AC  1C26               	btfss	(shift_write@data),(0)&7
  3196  01AD  29AF               	goto	u3181
  3197  01AE  29B0               	goto	u3180
  3198  01AF                     u3181:
  3199  01AF  29B3               	goto	l3682
  3200  01B0                     u3180:
  3201                           	line	47
  3202                           	
  3203  01B0                     l3680:	
  3204                           ;main.c: 47: bit_on(0x04);
  3205  01B0  3004               	movlw	(04h)
  3206  01B1  24F8               	fcall	_bit_on
  3207                           	line	48
  3208                           ;main.c: 48: } else {
  3209  01B2  29B5               	goto	l486
  3210                           	
  3211  01B3                     l485:	
  3212                           	line	49
  3213                           	
  3214  01B3                     l3682:	
  3215                           ;main.c: 49: bit_off(0x04);
  3216  01B3  3004               	movlw	(04h)
  3217  01B4  24EE               	fcall	_bit_off
  3218                           	line	50
  3219                           	
  3220  01B5                     l486:	
  3221                           	line	52
  3222                           ;main.c: 50: }
  3223                           ;main.c: 52: bit_on(0x10);
  3224  01B5  3010               	movlw	(010h)
  3225  01B6  24F8               	fcall	_bit_on
  3226                           	line	54
  3227                           	
  3228  01B7                     l3684:	
  3229                           ;main.c: 54: data = data >> 1;
  3230  01B7  1283               	bcf	status, 5	;RP0=0, select bank0
  3231  01B8  1303               	bcf	status, 6	;RP1=0, select bank0
  3232  01B9  0826               	movf	(shift_write@data),w
  3233  01BA  00A2               	movwf	(??_shift_write+0)+0
  3234  01BB  1003               	clrc
  3235  01BC  0C22               	rrf	(??_shift_write+0)+0,w
  3236  01BD  00A3               	movwf	(??_shift_write+1)+0
  3237  01BE  0823               	movf	(??_shift_write+1)+0,w
  3238  01BF  00A6               	movwf	(shift_write@data)
  3239                           	line	55
  3240                           	
  3241  01C0                     l3686:	
  3242                           ;main.c: 55: bit_off(0x10);
  3243  01C0  3010               	movlw	(010h)
  3244  01C1  24EE               	fcall	_bit_off
  3245                           	line	45
  3246                           	
  3247  01C2                     l3688:	
  3248  01C2  3001               	movlw	low(01h)
  3249  01C3  1283               	bcf	status, 5	;RP0=0, select bank0
  3250  01C4  1303               	bcf	status, 6	;RP1=0, select bank0
  3251  01C5  07A4               	addwf	(shift_write@i),f
  3252  01C6  1803               	skipnc
  3253  01C7  0AA5               	incf	(shift_write@i+1),f
  3254  01C8  3000               	movlw	high(01h)
  3255  01C9  07A5               	addwf	(shift_write@i+1),f
  3256                           	
  3257  01CA                     l3690:	
  3258  01CA  0825               	movf	(shift_write@i+1),w
  3259  01CB  3A80               	xorlw	80h
  3260  01CC  00FF               	movwf	btemp+1
  3261  01CD  3080               	movlw	(high(08h))^80h
  3262  01CE  027F               	subwf	btemp+1,w
  3263  01CF  1D03               	skipz
  3264  01D0  29D3               	goto	u3195
  3265  01D1  3008               	movlw	low(08h)
  3266  01D2  0224               	subwf	(shift_write@i),w
  3267  01D3                     u3195:
  3268                           
  3269  01D3  1C03               	skipc
  3270  01D4  29D6               	goto	u3191
  3271  01D5  29D7               	goto	u3190
  3272  01D6                     u3191:
  3273  01D6  29AA               	goto	l483
  3274  01D7                     u3190:
  3275  01D7  29D8               	goto	l3692
  3276                           	
  3277  01D8                     l484:	
  3278                           	line	58
  3279                           	
  3280  01D8                     l3692:	
  3281                           ;main.c: 57: }
  3282                           ;main.c: 58: bit_on(0x08);
  3283  01D8  3008               	movlw	(08h)
  3284  01D9  24F8               	fcall	_bit_on
  3285                           	line	59
  3286                           	
  3287  01DA                     l3694:	
  3288                           # 59 "main.c"
  3289  01DA  0000               nop ;#
  3290                           psect	text828
  3291                           	line	60
  3292                           ;main.c: 60: bit_off(0x08);
  3293  01DB  3008               	movlw	(08h)
  3294  01DC  24EE               	fcall	_bit_off
  3295                           	line	62
  3296                           	
  3297  01DD                     l487:	
  3298  01DD  0008               	return
  3299                           	opt stack 0
  3300                           GLOBAL	__end_of_shift_write
  3301  01DE                     	__end_of_shift_write:
  3302 ;; =============== function _shift_write ends ============
  3303                           
  3304                           	signat	_shift_write,4216
  3305                           	global	___bmul
  3306                           psect	text829,local,class=CODE,delta=2
  3307                           global __ptext829
  3308  04B5                     __ptext829:
  3309                           
  3310 ;; *************** function ___bmul *****************
  3311 ;; Defined at:
  3312 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  3313 ;; Parameters:    Size  Location     Type
  3314 ;;  multiplier      1    wreg     unsigned char 
  3315 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  3316 ;; Auto vars:     Size  Location     Type
  3317 ;;  multiplier      1    3[BANK0 ] unsigned char 
  3318 ;;  product         1    2[BANK0 ] unsigned char 
  3319 ;; Return value:  Size  Location     Type
  3320 ;;                  1    wreg      unsigned char 
  3321 ;; Registers used:
  3322 ;;		wreg, status,2, status,0
  3323 ;; Tracked objects:
  3324 ;;		On entry : 0/0
  3325 ;;		On exit  : 0/0
  3326 ;;		Unchanged: 0/0
  3327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3328 ;;      Params:         0       1       0       0
  3329 ;;      Locals:         0       2       0       0
  3330 ;;      Temps:          0       1       0       0
  3331 ;;      Totals:         0       4       0       0
  3332 ;;Total ram usage:        4 bytes
  3333 ;; Hardware stack levels used:    1
  3334 ;; Hardware stack levels required when called:    2
  3335 ;; This function calls:
  3336 ;;		Nothing
  3337 ;; This function is called by:
  3338 ;;		_hour_start_end_init
  3339 ;;		_segment_calc
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           psect	text829
  3343                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  3344                           	line	3
  3345                           	global	__size_of___bmul
  3346  001A                     	__size_of___bmul	equ	__end_of___bmul-___bmul
  3347                           	
  3348  04B5                     ___bmul:	
  3349                           	opt	stack 3
  3350                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3351                           ;___bmul@multiplier stored from wreg
  3352  04B5  1283               	bcf	status, 5	;RP0=0, select bank0
  3353  04B6  1303               	bcf	status, 6	;RP1=0, select bank0
  3354  04B7  00A3               	movwf	(___bmul@multiplier)
  3355                           	line	4
  3356                           	
  3357  04B8                     l3658:	
  3358  04B8  01A2               	clrf	(___bmul@product)
  3359                           	line	6
  3360                           	
  3361  04B9                     l1632:	
  3362                           	line	7
  3363  04B9  1C23               	btfss	(___bmul@multiplier),(0)&7
  3364  04BA  2CBC               	goto	u3151
  3365  04BB  2CBD               	goto	u3150
  3366  04BC                     u3151:
  3367  04BC  2CC2               	goto	l3662
  3368  04BD                     u3150:
  3369                           	line	8
  3370                           	
  3371  04BD                     l3660:	
  3372  04BD  0820               	movf	(___bmul@multiplicand),w
  3373  04BE  00A1               	movwf	(??___bmul+0)+0
  3374  04BF  0821               	movf	(??___bmul+0)+0,w
  3375  04C0  07A2               	addwf	(___bmul@product),f
  3376  04C1  2CC2               	goto	l3662
  3377                           	
  3378  04C2                     l1633:	
  3379                           	line	9
  3380                           	
  3381  04C2                     l3662:	
  3382  04C2  1003               	clrc
  3383  04C3  0DA0               	rlf	(___bmul@multiplicand),f
  3384                           
  3385                           	line	10
  3386                           	
  3387  04C4                     l3664:	
  3388  04C4  1003               	clrc
  3389  04C5  0CA3               	rrf	(___bmul@multiplier),f
  3390                           
  3391                           	line	11
  3392                           	
  3393  04C6                     l3666:	
  3394  04C6  08A3               	movf	(___bmul@multiplier),f
  3395  04C7  1D03               	skipz
  3396  04C8  2CCA               	goto	u3161
  3397  04C9  2CCB               	goto	u3160
  3398  04CA                     u3161:
  3399  04CA  2CB9               	goto	l1632
  3400  04CB                     u3160:
  3401  04CB  2CCC               	goto	l3668
  3402                           	
  3403  04CC                     l1634:	
  3404                           	line	12
  3405                           	
  3406  04CC                     l3668:	
  3407  04CC  0822               	movf	(___bmul@product),w
  3408  04CD  2CCE               	goto	l1635
  3409                           	
  3410  04CE                     l3670:	
  3411                           	line	13
  3412                           	
  3413  04CE                     l1635:	
  3414  04CE  0008               	return
  3415                           	opt stack 0
  3416                           GLOBAL	__end_of___bmul
  3417  04CF                     	__end_of___bmul:
  3418 ;; =============== function ___bmul ends ============
  3419                           
  3420                           	signat	___bmul,8313
  3421                           	global	_i2c_check_ack
  3422                           psect	text830,local,class=CODE,delta=2
  3423                           global __ptext830
  3424  026B                     __ptext830:
  3425                           
  3426 ;; *************** function _i2c_check_ack *****************
  3427 ;; Defined at:
  3428 ;;		line 38 in file "i2c.c"
  3429 ;; Parameters:    Size  Location     Type
  3430 ;;		None
  3431 ;; Auto vars:     Size  Location     Type
  3432 ;;  tmp             1    1[BANK0 ] unsigned char 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      unsigned char 
  3435 ;; Registers used:
  3436 ;;		wreg
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3442 ;;      Params:         0       0       0       0
  3443 ;;      Locals:         0       1       0       0
  3444 ;;      Temps:          0       1       0       0
  3445 ;;      Totals:         0       2       0       0
  3446 ;;Total ram usage:        2 bytes
  3447 ;; Hardware stack levels used:    1
  3448 ;; Hardware stack levels required when called:    2
  3449 ;; This function calls:
  3450 ;;		Nothing
  3451 ;; This function is called by:
  3452 ;;		_i2c_write_byte
  3453 ;; This function uses a non-reentrant model
  3454 ;;
  3455                           psect	text830
  3456                           	file	"i2c.c"
  3457                           	line	38
  3458                           	global	__size_of_i2c_check_ack
  3459  003A                     	__size_of_i2c_check_ack	equ	__end_of_i2c_check_ack-_i2c_check_ack
  3460                           	
  3461  026B                     _i2c_check_ack:	
  3462                           	opt	stack 1
  3463                           ; Regs used in _i2c_check_ack: [wreg]
  3464                           	line	40
  3465                           ;i2c.c: 39: uns8 tmp;
  3466                           ;i2c.c: 40: do {asm("nop"); TRISB1 = 1; } while(0);
  3467                           	
  3468  026B                     l1105:	
  3469                           # 40 "i2c.c"
  3470  026B  0000               nop ;#
  3471                           psect	text830
  3472  026C  1683               	bsf	status, 5	;RP0=1, select bank1
  3473  026D  1303               	bcf	status, 6	;RP1=0, select bank1
  3474  026E  1486               	bsf	(1073/8)^080h,(1073)&7
  3475  026F  2A70               	goto	l1107
  3476                           	
  3477  0270                     l1106:	
  3478                           	line	41
  3479                           ;i2c.c: 41: do {asm("nop"); TRISB4 = 1; } while(0);
  3480                           	
  3481  0270                     l1107:	
  3482                           # 41 "i2c.c"
  3483  0270  0000               nop ;#
  3484                           psect	text830
  3485  0271  1683               	bsf	status, 5	;RP0=1, select bank1
  3486  0272  1303               	bcf	status, 6	;RP1=0, select bank1
  3487  0273  1606               	bsf	(1076/8)^080h,(1076)&7
  3488  0274  2A75               	goto	l3630
  3489                           	
  3490  0275                     l1108:	
  3491                           	line	42
  3492                           	
  3493  0275                     l3630:	
  3494                           ;i2c.c: 42: tmp = (RB1);
  3495  0275  3000               	movlw	0
  3496  0276  1283               	bcf	status, 5	;RP0=0, select bank0
  3497  0277  1303               	bcf	status, 6	;RP1=0, select bank0
  3498  0278  1886               	btfsc	(49/8),(49)&7
  3499  0279  3001               	movlw	1
  3500  027A  00A0               	movwf	(??_i2c_check_ack+0)+0
  3501  027B  0820               	movf	(??_i2c_check_ack+0)+0,w
  3502  027C  00A1               	movwf	(i2c_check_ack@tmp)
  3503  027D  2A7E               	goto	l3632
  3504                           	line	43
  3505                           ;i2c.c: 43: do {asm("nop"); RB4 = 0; TRISB4 = 0; } while(0);
  3506                           	
  3507  027E                     l1109:	
  3508                           	
  3509  027E                     l3632:	
  3510                           # 43 "i2c.c"
  3511  027E  0000               nop ;#
  3512                           psect	text830
  3513                           	
  3514  027F                     l3634:	
  3515  027F  1283               	bcf	status, 5	;RP0=0, select bank0
  3516  0280  1303               	bcf	status, 6	;RP1=0, select bank0
  3517  0281  1206               	bcf	(52/8),(52)&7
  3518                           	
  3519  0282                     l3636:	
  3520  0282  1683               	bsf	status, 5	;RP0=1, select bank1
  3521  0283  1303               	bcf	status, 6	;RP1=0, select bank1
  3522  0284  1206               	bcf	(1076/8)^080h,(1076)&7
  3523                           ;i2c.c: 45: if (1 && tmp != 0) {
  3524                           	
  3525  0285                     l1110:	
  3526                           	line	45
  3527  0285  1283               	bcf	status, 5	;RP0=0, select bank0
  3528  0286  1303               	bcf	status, 6	;RP1=0, select bank0
  3529  0287  0821               	movf	(i2c_check_ack@tmp),w
  3530  0288  1D03               	skipz
  3531  0289  2A8B               	goto	u3120
  3532  028A  2AA2               	goto	l3642
  3533  028B                     u3120:
  3534  028B  2A8C               	goto	l1113
  3535                           	line	46
  3536                           ;i2c.c: 46: do {do {asm("nop"); RB1 = 0; TRISB1 = 0; } while(0); do {asm("nop"); TRISB4 
                                 = 1; } while(0); do {asm("nop"); TRISB1 = 1; } while(0);} while(0);
  3537                           	
  3538  028C                     l1112:	
  3539                           	
  3540  028C                     l1113:	
  3541                           # 46 "i2c.c"
  3542  028C  0000               nop ;#
  3543                           psect	text830
  3544  028D  1283               	bcf	status, 5	;RP0=0, select bank0
  3545  028E  1303               	bcf	status, 6	;RP1=0, select bank0
  3546  028F  1086               	bcf	(49/8),(49)&7
  3547  0290  1683               	bsf	status, 5	;RP0=1, select bank1
  3548  0291  1303               	bcf	status, 6	;RP1=0, select bank1
  3549  0292  1086               	bcf	(1073/8)^080h,(1073)&7
  3550  0293  2A94               	goto	l1115
  3551                           	
  3552  0294                     l1114:	
  3553                           	
  3554  0294                     l1115:	
  3555                           # 46 "i2c.c"
  3556  0294  0000               nop ;#
  3557                           psect	text830
  3558  0295  1683               	bsf	status, 5	;RP0=1, select bank1
  3559  0296  1303               	bcf	status, 6	;RP1=0, select bank1
  3560  0297  1606               	bsf	(1076/8)^080h,(1076)&7
  3561  0298  2A99               	goto	l1117
  3562                           	
  3563  0299                     l1116:	
  3564                           	
  3565  0299                     l1117:	
  3566                           # 46 "i2c.c"
  3567  0299  0000               nop ;#
  3568                           psect	text830
  3569  029A  1683               	bsf	status, 5	;RP0=1, select bank1
  3570  029B  1303               	bcf	status, 6	;RP1=0, select bank1
  3571  029C  1486               	bsf	(1073/8)^080h,(1073)&7
  3572  029D  2A9F               	goto	l3638
  3573                           	
  3574  029E                     l1118:	
  3575  029E  2A9F               	goto	l3638
  3576                           	
  3577  029F                     l1119:	
  3578                           	line	47
  3579                           	
  3580  029F                     l3638:	
  3581                           ;i2c.c: 47: return 0xFF;
  3582  029F  30FF               	movlw	(0FFh)
  3583  02A0  2AA4               	goto	l1120
  3584                           	
  3585  02A1                     l3640:	
  3586  02A1  2AA4               	goto	l1120
  3587                           	line	48
  3588                           	
  3589  02A2                     l1111:	
  3590                           	line	49
  3591                           	
  3592  02A2                     l3642:	
  3593                           ;i2c.c: 48: }
  3594                           ;i2c.c: 49: return 0;
  3595  02A2  3000               	movlw	(0)
  3596  02A3  2AA4               	goto	l1120
  3597                           	
  3598  02A4                     l3644:	
  3599                           	line	50
  3600                           	
  3601  02A4                     l1120:	
  3602  02A4  0008               	return
  3603                           	opt stack 0
  3604                           GLOBAL	__end_of_i2c_check_ack
  3605  02A5                     	__end_of_i2c_check_ack:
  3606 ;; =============== function _i2c_check_ack ends ============
  3607                           
  3608                           	signat	_i2c_check_ack,89
  3609                           	global	_i2c_write_bit
  3610                           psect	text831,local,class=CODE,delta=2
  3611                           global __ptext831
  3612  041E                     __ptext831:
  3613                           
  3614 ;; *************** function _i2c_write_bit *****************
  3615 ;; Defined at:
  3616 ;;		line 11 in file "i2c.c"
  3617 ;; Parameters:    Size  Location     Type
  3618 ;;  x               1    wreg     unsigned char 
  3619 ;; Auto vars:     Size  Location     Type
  3620 ;;  x               1    1[BANK0 ] unsigned char 
  3621 ;; Return value:  Size  Location     Type
  3622 ;;		None               void
  3623 ;; Registers used:
  3624 ;;		wreg, status,2, status,0
  3625 ;; Tracked objects:
  3626 ;;		On entry : 0/0
  3627 ;;		On exit  : 0/0
  3628 ;;		Unchanged: 0/0
  3629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3630 ;;      Params:         0       0       0       0
  3631 ;;      Locals:         0       1       0       0
  3632 ;;      Temps:          0       1       0       0
  3633 ;;      Totals:         0       2       0       0
  3634 ;;Total ram usage:        2 bytes
  3635 ;; Hardware stack levels used:    1
  3636 ;; Hardware stack levels required when called:    2
  3637 ;; This function calls:
  3638 ;;		Nothing
  3639 ;; This function is called by:
  3640 ;;		_i2c_write_byte
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           psect	text831
  3644                           	file	"i2c.c"
  3645                           	line	11
  3646                           	global	__size_of_i2c_write_bit
  3647  0028                     	__size_of_i2c_write_bit	equ	__end_of_i2c_write_bit-_i2c_write_bit
  3648                           	
  3649  041E                     _i2c_write_bit:	
  3650                           	opt	stack 1
  3651                           ; Regs used in _i2c_write_bit: [wreg+status,2+status,0]
  3652                           ;i2c_write_bit@x stored from wreg
  3653  041E  1283               	bcf	status, 5	;RP0=0, select bank0
  3654  041F  1303               	bcf	status, 6	;RP1=0, select bank0
  3655  0420  00A1               	movwf	(i2c_write_bit@x)
  3656                           	line	12
  3657                           	
  3658  0421                     l3628:	
  3659                           ;i2c.c: 12: x &= 0x01;
  3660  0421  3001               	movlw	(01h)
  3661  0422  00A0               	movwf	(??_i2c_write_bit+0)+0
  3662  0423  0820               	movf	(??_i2c_write_bit+0)+0,w
  3663  0424  05A1               	andwf	(i2c_write_bit@x),f
  3664                           	line	13
  3665                           ;i2c.c: 13: if (x)
  3666  0425  0821               	movf	(i2c_write_bit@x),w
  3667  0426  1D03               	skipz
  3668  0427  2C29               	goto	u3110
  3669  0428  2C2F               	goto	l1085
  3670  0429                     u3110:
  3671                           	line	14
  3672                           ;i2c.c: 14: do {asm("nop"); TRISB1 = 1; } while(0);
  3673                           	
  3674  0429                     l1082:	
  3675                           # 14 "i2c.c"
  3676  0429  0000               nop ;#
  3677                           psect	text831
  3678  042A  1683               	bsf	status, 5	;RP0=1, select bank1
  3679  042B  1303               	bcf	status, 6	;RP1=0, select bank1
  3680  042C  1486               	bsf	(1073/8)^080h,(1073)&7
  3681  042D  2C38               	goto	l1087
  3682                           	
  3683  042E                     l1083:	
  3684  042E  2C38               	goto	l1087
  3685                           	line	15
  3686                           	
  3687  042F                     l1081:	
  3688                           	line	16
  3689                           ;i2c.c: 15: else
  3690                           ;i2c.c: 16: do {asm("nop"); RB1 = 0; TRISB1 = 0; } while(0);
  3691                           	
  3692  042F                     l1085:	
  3693                           # 16 "i2c.c"
  3694  042F  0000               nop ;#
  3695                           psect	text831
  3696  0430  1283               	bcf	status, 5	;RP0=0, select bank0
  3697  0431  1303               	bcf	status, 6	;RP1=0, select bank0
  3698  0432  1086               	bcf	(49/8),(49)&7
  3699  0433  1683               	bsf	status, 5	;RP0=1, select bank1
  3700  0434  1303               	bcf	status, 6	;RP1=0, select bank1
  3701  0435  1086               	bcf	(1073/8)^080h,(1073)&7
  3702  0436  2C38               	goto	l1087
  3703                           	
  3704  0437                     l1086:	
  3705  0437  2C38               	goto	l1087
  3706                           	
  3707  0438                     l1084:	
  3708                           	line	17
  3709                           ;i2c.c: 17: do {asm("nop"); TRISB4 = 1; } while(0);
  3710                           	
  3711  0438                     l1087:	
  3712                           # 17 "i2c.c"
  3713  0438  0000               nop ;#
  3714                           psect	text831
  3715  0439  1683               	bsf	status, 5	;RP0=1, select bank1
  3716  043A  1303               	bcf	status, 6	;RP1=0, select bank1
  3717  043B  1606               	bsf	(1076/8)^080h,(1076)&7
  3718  043C  2C3D               	goto	l1089
  3719                           	
  3720  043D                     l1088:	
  3721                           	line	19
  3722                           ;i2c.c: 19: do {asm("nop"); RB4 = 0; TRISB4 = 0; } while(0);
  3723                           	
  3724  043D                     l1089:	
  3725                           # 19 "i2c.c"
  3726  043D  0000               nop ;#
  3727                           psect	text831
  3728  043E  1283               	bcf	status, 5	;RP0=0, select bank0
  3729  043F  1303               	bcf	status, 6	;RP1=0, select bank0
  3730  0440  1206               	bcf	(52/8),(52)&7
  3731  0441  1683               	bsf	status, 5	;RP0=1, select bank1
  3732  0442  1303               	bcf	status, 6	;RP1=0, select bank1
  3733  0443  1206               	bcf	(1076/8)^080h,(1076)&7
  3734  0444  2C45               	goto	l1091
  3735                           	
  3736  0445                     l1090:	
  3737                           	line	20
  3738                           	
  3739  0445                     l1091:	
  3740  0445  0008               	return
  3741                           	opt stack 0
  3742                           GLOBAL	__end_of_i2c_write_bit
  3743  0446                     	__end_of_i2c_write_bit:
  3744 ;; =============== function _i2c_write_bit ends ============
  3745                           
  3746                           	signat	_i2c_write_bit,4216
  3747                           	global	_init_setup
  3748                           psect	text832,local,class=CODE,delta=2
  3749                           global __ptext832
  3750  050A                     __ptext832:
  3751                           
  3752 ;; *************** function _init_setup *****************
  3753 ;; Defined at:
  3754 ;;		line 525 in file "main.c"
  3755 ;; Parameters:    Size  Location     Type
  3756 ;;		None
  3757 ;; Auto vars:     Size  Location     Type
  3758 ;;		None
  3759 ;; Return value:  Size  Location     Type
  3760 ;;		None               void
  3761 ;; Registers used:
  3762 ;;		status,2, status,0
  3763 ;; Tracked objects:
  3764 ;;		On entry : 0/0
  3765 ;;		On exit  : 0/0
  3766 ;;		Unchanged: 0/0
  3767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3768 ;;      Params:         0       0       0       0
  3769 ;;      Locals:         0       0       0       0
  3770 ;;      Temps:          0       0       0       0
  3771 ;;      Totals:         0       0       0       0
  3772 ;;Total ram usage:        0 bytes
  3773 ;; Hardware stack levels used:    1
  3774 ;; Hardware stack levels required when called:    2
  3775 ;; This function calls:
  3776 ;;		Nothing
  3777 ;; This function is called by:
  3778 ;;		_init
  3779 ;; This function uses a non-reentrant model
  3780 ;;
  3781                           psect	text832
  3782                           	file	"main.c"
  3783                           	line	525
  3784                           	global	__size_of_init_setup
  3785  0006                     	__size_of_init_setup	equ	__end_of_init_setup-_init_setup
  3786                           	
  3787  050A                     _init_setup:	
  3788                           	opt	stack 4
  3789                           ; Regs used in _init_setup: [status]
  3790                           	line	526
  3791                           	
  3792  050A                     l4034:	
  3793                           ;main.c: 526: mode = 1;
  3794  050A  1283               	bcf	status, 5	;RP0=0, select bank0
  3795  050B  1303               	bcf	status, 6	;RP1=0, select bank0
  3796  050C  01DE               	clrf	(_mode)
  3797  050D  1403               	bsf	status,0
  3798  050E  0DDE               	rlf	(_mode),f
  3799                           	line	528
  3800                           	
  3801  050F                     l600:	
  3802  050F  0008               	return
  3803                           	opt stack 0
  3804                           GLOBAL	__end_of_init_setup
  3805  0510                     	__end_of_init_setup:
  3806 ;; =============== function _init_setup ends ============
  3807                           
  3808                           	signat	_init_setup,88
  3809                           	global	_what_time_is_now
  3810                           psect	text833,local,class=CODE,delta=2
  3811                           global __ptext833
  3812  04E3                     __ptext833:
  3813                           
  3814 ;; *************** function _what_time_is_now *****************
  3815 ;; Defined at:
  3816 ;;		line 383 in file "main.c"
  3817 ;; Parameters:    Size  Location     Type
  3818 ;;		None
  3819 ;; Auto vars:     Size  Location     Type
  3820 ;;		None
  3821 ;; Return value:  Size  Location     Type
  3822 ;;		None               void
  3823 ;; Registers used:
  3824 ;;		wreg
  3825 ;; Tracked objects:
  3826 ;;		On entry : 0/0
  3827 ;;		On exit  : 0/0
  3828 ;;		Unchanged: 0/0
  3829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3830 ;;      Params:         0       0       0       0
  3831 ;;      Locals:         0       0       0       0
  3832 ;;      Temps:          0       1       0       0
  3833 ;;      Totals:         0       1       0       0
  3834 ;;Total ram usage:        1 bytes
  3835 ;; Hardware stack levels used:    1
  3836 ;; Hardware stack levels required when called:    2
  3837 ;; This function calls:
  3838 ;;		Nothing
  3839 ;; This function is called by:
  3840 ;;		_application_reset
  3841 ;;		_init_normal
  3842 ;; This function uses a non-reentrant model
  3843 ;;
  3844                           psect	text833
  3845                           	file	"main.c"
  3846                           	line	383
  3847                           	global	__size_of_what_time_is_now
  3848  000B                     	__size_of_what_time_is_now	equ	__end_of_what_time_is_now-_what_time_is_now
  3849                           	
  3850  04E3                     _what_time_is_now:	
  3851                           	opt	stack 4
  3852                           ; Regs used in _what_time_is_now: [wreg]
  3853                           	line	384
  3854                           	
  3855  04E3                     l3610:	
  3856                           ;main.c: 384: time.hrs = 3;
  3857  04E3  3003               	movlw	(03h)
  3858  04E4  1283               	bcf	status, 5	;RP0=0, select bank0
  3859  04E5  1303               	bcf	status, 6	;RP1=0, select bank0
  3860  04E6  00A0               	movwf	(??_what_time_is_now+0)+0
  3861  04E7  0820               	movf	(??_what_time_is_now+0)+0,w
  3862  04E8  00E7               	movwf	0+(_time)+01h
  3863                           	line	385
  3864                           ;main.c: 385: time.min = 25;
  3865  04E9  3019               	movlw	(019h)
  3866  04EA  00A0               	movwf	(??_what_time_is_now+0)+0
  3867  04EB  0820               	movf	(??_what_time_is_now+0)+0,w
  3868  04EC  00E6               	movwf	(_time)
  3869                           	line	390
  3870                           	
  3871  04ED                     l573:	
  3872  04ED  0008               	return
  3873                           	opt stack 0
  3874                           GLOBAL	__end_of_what_time_is_now
  3875  04EE                     	__end_of_what_time_is_now:
  3876 ;; =============== function _what_time_is_now ends ============
  3877                           
  3878                           	signat	_what_time_is_now,88
  3879                           	global	_time_next_minute
  3880                           psect	text834,local,class=CODE,delta=2
  3881                           global __ptext834
  3882  0464                     __ptext834:
  3883                           
  3884 ;; *************** function _time_next_minute *****************
  3885 ;; Defined at:
  3886 ;;		line 292 in file "main.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;		None
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;		None
  3891 ;; Return value:  Size  Location     Type
  3892 ;;		None               void
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3900 ;;      Params:         0       0       0       0
  3901 ;;      Locals:         0       0       0       0
  3902 ;;      Temps:          0       1       0       0
  3903 ;;      Totals:         0       1       0       0
  3904 ;;Total ram usage:        1 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    2
  3907 ;; This function calls:
  3908 ;;		Nothing
  3909 ;; This function is called by:
  3910 ;;		_next_minute
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           psect	text834
  3914                           	file	"main.c"
  3915                           	line	292
  3916                           	global	__size_of_time_next_minute
  3917  001D                     	__size_of_time_next_minute	equ	__end_of_time_next_minute-_time_next_minute
  3918                           	
  3919  0464                     _time_next_minute:	
  3920                           	opt	stack 4
  3921                           ; Regs used in _time_next_minute: [wreg+status,2+status,0]
  3922                           	line	294
  3923                           	
  3924  0464                     l3556:	
  3925                           ;main.c: 294: time.min++;
  3926  0464  3001               	movlw	(01h)
  3927  0465  1283               	bcf	status, 5	;RP0=0, select bank0
  3928  0466  1303               	bcf	status, 6	;RP1=0, select bank0
  3929  0467  00A0               	movwf	(??_time_next_minute+0)+0
  3930  0468  0820               	movf	(??_time_next_minute+0)+0,w
  3931  0469  07E6               	addwf	(_time),f
  3932                           	line	295
  3933                           	
  3934  046A                     l3558:	
  3935                           ;main.c: 295: if (time.min < 60)
  3936  046A  303C               	movlw	(03Ch)
  3937  046B  0266               	subwf	(_time),w
  3938  046C  1803               	skipnc
  3939  046D  2C6F               	goto	u2981
  3940  046E  2C70               	goto	u2980
  3941  046F                     u2981:
  3942  046F  2C72               	goto	l551
  3943  0470                     u2980:
  3944  0470  2C80               	goto	l552
  3945                           	line	296
  3946                           	
  3947  0471                     l3560:	
  3948                           ;main.c: 296: return;
  3949  0471  2C80               	goto	l552
  3950                           	
  3951  0472                     l551:	
  3952                           	line	298
  3953                           ;main.c: 298: time.min = 0;
  3954  0472  01E6               	clrf	(_time)
  3955                           	line	299
  3956                           	
  3957  0473                     l3562:	
  3958                           ;main.c: 299: time.hrs++;
  3959  0473  3001               	movlw	(01h)
  3960  0474  00A0               	movwf	(??_time_next_minute+0)+0
  3961  0475  0820               	movf	(??_time_next_minute+0)+0,w
  3962  0476  07E7               	addwf	0+(_time)+01h,f
  3963                           	line	300
  3964                           	
  3965  0477                     l3564:	
  3966                           ;main.c: 300: if (time.hrs < 12)
  3967  0477  300C               	movlw	(0Ch)
  3968  0478  0267               	subwf	0+(_time)+01h,w
  3969  0479  1803               	skipnc
  3970  047A  2C7C               	goto	u2991
  3971  047B  2C7D               	goto	u2990
  3972  047C                     u2991:
  3973  047C  2C7F               	goto	l553
  3974  047D                     u2990:
  3975  047D  2C80               	goto	l552
  3976                           	line	301
  3977                           	
  3978  047E                     l3566:	
  3979                           ;main.c: 301: return;
  3980  047E  2C80               	goto	l552
  3981                           	
  3982  047F                     l553:	
  3983                           	line	302
  3984                           ;main.c: 302: time.hrs = 0;
  3985  047F  01E7               	clrf	0+(_time)+01h
  3986                           	line	303
  3987                           	
  3988  0480                     l552:	
  3989  0480  0008               	return
  3990                           	opt stack 0
  3991                           GLOBAL	__end_of_time_next_minute
  3992  0481                     	__end_of_time_next_minute:
  3993 ;; =============== function _time_next_minute ends ============
  3994                           
  3995                           	signat	_time_next_minute,88
  3996                           	global	_sixty_stop
  3997                           psect	text835,local,class=CODE,delta=2
  3998                           global __ptext835
  3999  03C9                     __ptext835:
  4000                           
  4001 ;; *************** function _sixty_stop *****************
  4002 ;; Defined at:
  4003 ;;		line 183 in file "main.c"
  4004 ;; Parameters:    Size  Location     Type
  4005 ;;  x               1    wreg     unsigned char 
  4006 ;; Auto vars:     Size  Location     Type
  4007 ;;  x               1    2[BANK0 ] unsigned char 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      unsigned char 
  4010 ;; Registers used:
  4011 ;;		wreg, status,2, status,0
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4017 ;;      Params:         0       0       0       0
  4018 ;;      Locals:         0       1       0       0
  4019 ;;      Temps:          0       2       0       0
  4020 ;;      Totals:         0       3       0       0
  4021 ;;Total ram usage:        3 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    2
  4024 ;; This function calls:
  4025 ;;		Nothing
  4026 ;; This function is called by:
  4027 ;;		_hour_start_end_init
  4028 ;;		_segment_calc
  4029 ;;		_init_normal
  4030 ;; This function uses a non-reentrant model
  4031 ;;
  4032                           psect	text835
  4033                           	file	"main.c"
  4034                           	line	183
  4035                           	global	__size_of_sixty_stop
  4036  002B                     	__size_of_sixty_stop	equ	__end_of_sixty_stop-_sixty_stop
  4037                           	
  4038  03C9                     _sixty_stop:	
  4039                           	opt	stack 3
  4040                           ; Regs used in _sixty_stop: [wreg+status,2+status,0]
  4041                           ;sixty_stop@x stored from wreg
  4042  03C9  1283               	bcf	status, 5	;RP0=0, select bank0
  4043  03CA  1303               	bcf	status, 6	;RP1=0, select bank0
  4044  03CB  00A2               	movwf	(sixty_stop@x)
  4045                           	line	184
  4046                           	
  4047  03CC                     l3518:	
  4048                           ;main.c: 184: x = x << 1;
  4049  03CC  0822               	movf	(sixty_stop@x),w
  4050  03CD  00A0               	movwf	(??_sixty_stop+0)+0
  4051  03CE  0720               	addwf	(??_sixty_stop+0)+0,w
  4052  03CF  00A1               	movwf	(??_sixty_stop+1)+0
  4053  03D0  0821               	movf	(??_sixty_stop+1)+0,w
  4054  03D1  00A2               	movwf	(sixty_stop@x)
  4055                           	line	185
  4056                           	
  4057  03D2                     l3520:	
  4058                           ;main.c: 185: if (x < 30)
  4059  03D2  301E               	movlw	(01Eh)
  4060  03D3  0222               	subwf	(sixty_stop@x),w
  4061  03D4  1803               	skipnc
  4062  03D5  2BD7               	goto	u2921
  4063  03D6  2BD8               	goto	u2920
  4064  03D7                     u2921:
  4065  03D7  2BDC               	goto	l3526
  4066  03D8                     u2920:
  4067                           	line	186
  4068                           	
  4069  03D8                     l3522:	
  4070                           ;main.c: 186: return x+2;
  4071  03D8  0822               	movf	(sixty_stop@x),w
  4072  03D9  3E02               	addlw	02h
  4073  03DA  2BF3               	goto	l510
  4074                           	
  4075  03DB                     l3524:	
  4076  03DB  2BF3               	goto	l510
  4077                           	
  4078  03DC                     l509:	
  4079                           	line	187
  4080                           	
  4081  03DC                     l3526:	
  4082                           ;main.c: 187: if (x < 60)
  4083  03DC  303C               	movlw	(03Ch)
  4084  03DD  0222               	subwf	(sixty_stop@x),w
  4085  03DE  1803               	skipnc
  4086  03DF  2BE1               	goto	u2931
  4087  03E0  2BE2               	goto	u2930
  4088  03E1                     u2931:
  4089  03E1  2BE6               	goto	l3532
  4090  03E2                     u2930:
  4091                           	line	188
  4092                           	
  4093  03E2                     l3528:	
  4094                           ;main.c: 188: return x+4;
  4095  03E2  0822               	movf	(sixty_stop@x),w
  4096  03E3  3E04               	addlw	04h
  4097  03E4  2BF3               	goto	l510
  4098                           	
  4099  03E5                     l3530:	
  4100  03E5  2BF3               	goto	l510
  4101                           	
  4102  03E6                     l511:	
  4103                           	line	189
  4104                           	
  4105  03E6                     l3532:	
  4106                           ;main.c: 189: if (x < 90)
  4107  03E6  305A               	movlw	(05Ah)
  4108  03E7  0222               	subwf	(sixty_stop@x),w
  4109  03E8  1803               	skipnc
  4110  03E9  2BEB               	goto	u2941
  4111  03EA  2BEC               	goto	u2940
  4112  03EB                     u2941:
  4113  03EB  2BF0               	goto	l3538
  4114  03EC                     u2940:
  4115                           	line	190
  4116                           	
  4117  03EC                     l3534:	
  4118                           ;main.c: 190: return x+6;
  4119  03EC  0822               	movf	(sixty_stop@x),w
  4120  03ED  3E06               	addlw	06h
  4121  03EE  2BF3               	goto	l510
  4122                           	
  4123  03EF                     l3536:	
  4124  03EF  2BF3               	goto	l510
  4125                           	
  4126  03F0                     l512:	
  4127                           	line	192
  4128                           	
  4129  03F0                     l3538:	
  4130                           ;main.c: 192: return x+8;
  4131  03F0  0822               	movf	(sixty_stop@x),w
  4132  03F1  3E08               	addlw	08h
  4133  03F2  2BF3               	goto	l510
  4134                           	
  4135  03F3                     l3540:	
  4136                           	line	193
  4137                           	
  4138  03F3                     l510:	
  4139  03F3  0008               	return
  4140                           	opt stack 0
  4141                           GLOBAL	__end_of_sixty_stop
  4142  03F4                     	__end_of_sixty_stop:
  4143 ;; =============== function _sixty_stop ends ============
  4144                           
  4145                           	signat	_sixty_stop,4217
  4146                           	global	_sixty_start
  4147                           psect	text836,local,class=CODE,delta=2
  4148                           global __ptext836
  4149  0310                     __ptext836:
  4150                           
  4151 ;; *************** function _sixty_start *****************
  4152 ;; Defined at:
  4153 ;;		line 162 in file "main.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;  x               1    wreg     unsigned char 
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  x               1    2[BANK0 ] unsigned char 
  4158 ;; Return value:  Size  Location     Type
  4159 ;;                  1    wreg      unsigned char 
  4160 ;; Registers used:
  4161 ;;		wreg, status,2, status,0
  4162 ;; Tracked objects:
  4163 ;;		On entry : 0/0
  4164 ;;		On exit  : 0/0
  4165 ;;		Unchanged: 0/0
  4166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4167 ;;      Params:         0       0       0       0
  4168 ;;      Locals:         0       1       0       0
  4169 ;;      Temps:          0       2       0       0
  4170 ;;      Totals:         0       3       0       0
  4171 ;;Total ram usage:        3 bytes
  4172 ;; Hardware stack levels used:    1
  4173 ;; Hardware stack levels required when called:    2
  4174 ;; This function calls:
  4175 ;;		Nothing
  4176 ;; This function is called by:
  4177 ;;		_hour_start_end_init
  4178 ;;		_segment_calc
  4179 ;;		_init_normal
  4180 ;; This function uses a non-reentrant model
  4181 ;;
  4182                           psect	text836
  4183                           	file	"main.c"
  4184                           	line	162
  4185                           	global	__size_of_sixty_start
  4186  0033                     	__size_of_sixty_start	equ	__end_of_sixty_start-_sixty_start
  4187                           	
  4188  0310                     _sixty_start:	
  4189                           	opt	stack 3
  4190                           ; Regs used in _sixty_start: [wreg+status,2+status,0]
  4191                           ;sixty_start@x stored from wreg
  4192                           	line	164
  4193  0310  1283               	bcf	status, 5	;RP0=0, select bank0
  4194  0311  1303               	bcf	status, 6	;RP1=0, select bank0
  4195  0312  00A2               	movwf	(sixty_start@x)
  4196                           	
  4197  0313                     l3488:	
  4198                           ;main.c: 164: x = x << 1;
  4199  0313  0822               	movf	(sixty_start@x),w
  4200  0314  00A0               	movwf	(??_sixty_start+0)+0
  4201  0315  0720               	addwf	(??_sixty_start+0)+0,w
  4202  0316  00A1               	movwf	(??_sixty_start+1)+0
  4203  0317  0821               	movf	(??_sixty_start+1)+0,w
  4204  0318  00A2               	movwf	(sixty_start@x)
  4205                           	line	165
  4206                           	
  4207  0319                     l3490:	
  4208                           ;main.c: 165: if (x == 0)
  4209  0319  08A2               	movf	(sixty_start@x),f
  4210  031A  1D03               	skipz
  4211  031B  2B1D               	goto	u2881
  4212  031C  2B1E               	goto	u2880
  4213  031D                     u2881:
  4214  031D  2B21               	goto	l3496
  4215  031E                     u2880:
  4216                           	line	166
  4217                           	
  4218  031E                     l3492:	
  4219                           ;main.c: 166: return 127;
  4220  031E  307F               	movlw	(07Fh)
  4221  031F  2B42               	goto	l503
  4222                           	
  4223  0320                     l3494:	
  4224  0320  2B42               	goto	l503
  4225                           	
  4226  0321                     l502:	
  4227                           	line	167
  4228                           	
  4229  0321                     l3496:	
  4230                           ;main.c: 167: if (x <= 30)
  4231  0321  301F               	movlw	(01Fh)
  4232  0322  0222               	subwf	(sixty_start@x),w
  4233  0323  1803               	skipnc
  4234  0324  2B26               	goto	u2891
  4235  0325  2B27               	goto	u2890
  4236  0326                     u2891:
  4237  0326  2B2B               	goto	l3502
  4238  0327                     u2890:
  4239                           	line	168
  4240                           	
  4241  0327                     l3498:	
  4242                           ;main.c: 168: return x+1;
  4243  0327  0822               	movf	(sixty_start@x),w
  4244  0328  3E01               	addlw	01h
  4245  0329  2B42               	goto	l503
  4246                           	
  4247  032A                     l3500:	
  4248  032A  2B42               	goto	l503
  4249                           	
  4250  032B                     l504:	
  4251                           	line	169
  4252                           	
  4253  032B                     l3502:	
  4254                           ;main.c: 169: if (x <= 60)
  4255  032B  303D               	movlw	(03Dh)
  4256  032C  0222               	subwf	(sixty_start@x),w
  4257  032D  1803               	skipnc
  4258  032E  2B30               	goto	u2901
  4259  032F  2B31               	goto	u2900
  4260  0330                     u2901:
  4261  0330  2B35               	goto	l3508
  4262  0331                     u2900:
  4263                           	line	170
  4264                           	
  4265  0331                     l3504:	
  4266                           ;main.c: 170: return x+3;
  4267  0331  0822               	movf	(sixty_start@x),w
  4268  0332  3E03               	addlw	03h
  4269  0333  2B42               	goto	l503
  4270                           	
  4271  0334                     l3506:	
  4272  0334  2B42               	goto	l503
  4273                           	
  4274  0335                     l505:	
  4275                           	line	171
  4276                           	
  4277  0335                     l3508:	
  4278                           ;main.c: 171: if (x <= 90)
  4279  0335  305B               	movlw	(05Bh)
  4280  0336  0222               	subwf	(sixty_start@x),w
  4281  0337  1803               	skipnc
  4282  0338  2B3A               	goto	u2911
  4283  0339  2B3B               	goto	u2910
  4284  033A                     u2911:
  4285  033A  2B3F               	goto	l3514
  4286  033B                     u2910:
  4287                           	line	172
  4288                           	
  4289  033B                     l3510:	
  4290                           ;main.c: 172: return x+5;
  4291  033B  0822               	movf	(sixty_start@x),w
  4292  033C  3E05               	addlw	05h
  4293  033D  2B42               	goto	l503
  4294                           	
  4295  033E                     l3512:	
  4296  033E  2B42               	goto	l503
  4297                           	
  4298  033F                     l506:	
  4299                           	line	174
  4300                           	
  4301  033F                     l3514:	
  4302                           ;main.c: 174: return x + 7;
  4303  033F  0822               	movf	(sixty_start@x),w
  4304  0340  3E07               	addlw	07h
  4305  0341  2B42               	goto	l503
  4306                           	
  4307  0342                     l3516:	
  4308                           	line	175
  4309                           	
  4310  0342                     l503:	
  4311  0342  0008               	return
  4312                           	opt stack 0
  4313                           GLOBAL	__end_of_sixty_start
  4314  0343                     	__end_of_sixty_start:
  4315 ;; =============== function _sixty_start ends ============
  4316                           
  4317                           	signat	_sixty_start,4217
  4318                           	global	_bit_off
  4319                           psect	text837,local,class=CODE,delta=2
  4320                           global __ptext837
  4321  04EE                     __ptext837:
  4322                           
  4323 ;; *************** function _bit_off *****************
  4324 ;; Defined at:
  4325 ;;		line 29 in file "main.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  bt              1    wreg     unsigned char 
  4328 ;; Auto vars:     Size  Location     Type
  4329 ;;  bt              1    1[BANK0 ] unsigned char 
  4330 ;; Return value:  Size  Location     Type
  4331 ;;		None               void
  4332 ;; Registers used:
  4333 ;;		wreg, status,2, status,0
  4334 ;; Tracked objects:
  4335 ;;		On entry : 0/0
  4336 ;;		On exit  : 0/0
  4337 ;;		Unchanged: 0/0
  4338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4339 ;;      Params:         0       0       0       0
  4340 ;;      Locals:         0       1       0       0
  4341 ;;      Temps:          0       1       0       0
  4342 ;;      Totals:         0       2       0       0
  4343 ;;Total ram usage:        2 bytes
  4344 ;; Hardware stack levels used:    1
  4345 ;; Hardware stack levels required when called:    2
  4346 ;; This function calls:
  4347 ;;		Nothing
  4348 ;; This function is called by:
  4349 ;;		_shift_write
  4350 ;;		_next_segment
  4351 ;;		_show_face
  4352 ;; This function uses a non-reentrant model
  4353 ;;
  4354                           psect	text837
  4355                           	file	"main.c"
  4356                           	line	29
  4357                           	global	__size_of_bit_off
  4358  000A                     	__size_of_bit_off	equ	__end_of_bit_off-_bit_off
  4359                           	
  4360  04EE                     _bit_off:	
  4361                           	opt	stack 2
  4362                           ; Regs used in _bit_off: [wreg+status,2+status,0]
  4363                           ;bit_off@bt stored from wreg
  4364  04EE  1283               	bcf	status, 5	;RP0=0, select bank0
  4365  04EF  1303               	bcf	status, 6	;RP1=0, select bank0
  4366  04F0  00A1               	movwf	(bit_off@bt)
  4367                           	line	30
  4368                           	
  4369  04F1                     l3484:	
  4370                           ;main.c: 30: a_latch &= ~bt;
  4371  04F1  0921               	comf	(bit_off@bt),w
  4372  04F2  00A0               	movwf	(??_bit_off+0)+0
  4373  04F3  0820               	movf	(??_bit_off+0)+0,w
  4374  04F4  05DD               	andwf	(_a_latch),f
  4375                           	line	31
  4376                           	
  4377  04F5                     l3486:	
  4378                           ;main.c: 31: PORTA = a_latch;
  4379  04F5  085D               	movf	(_a_latch),w
  4380  04F6  0085               	movwf	(5)	;volatile
  4381                           	line	32
  4382                           	
  4383  04F7                     l480:	
  4384  04F7  0008               	return
  4385                           	opt stack 0
  4386                           GLOBAL	__end_of_bit_off
  4387  04F8                     	__end_of_bit_off:
  4388 ;; =============== function _bit_off ends ============
  4389                           
  4390                           	signat	_bit_off,4216
  4391                           	global	_bit_on
  4392                           psect	text838,local,class=CODE,delta=2
  4393                           global __ptext838
  4394  04F8                     __ptext838:
  4395                           
  4396 ;; *************** function _bit_on *****************
  4397 ;; Defined at:
  4398 ;;		line 23 in file "main.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;  bt              1    wreg     unsigned char 
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  bt              1    1[BANK0 ] unsigned char 
  4403 ;; Return value:  Size  Location     Type
  4404 ;;		None               void
  4405 ;; Registers used:
  4406 ;;		wreg, status,2, status,0
  4407 ;; Tracked objects:
  4408 ;;		On entry : 0/0
  4409 ;;		On exit  : 0/0
  4410 ;;		Unchanged: 0/0
  4411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4412 ;;      Params:         0       0       0       0
  4413 ;;      Locals:         0       1       0       0
  4414 ;;      Temps:          0       1       0       0
  4415 ;;      Totals:         0       2       0       0
  4416 ;;Total ram usage:        2 bytes
  4417 ;; Hardware stack levels used:    1
  4418 ;; Hardware stack levels required when called:    2
  4419 ;; This function calls:
  4420 ;;		Nothing
  4421 ;; This function is called by:
  4422 ;;		_shift_write
  4423 ;;		_next_segment
  4424 ;;		_main
  4425 ;;		_show_face
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           psect	text838
  4429                           	file	"main.c"
  4430                           	line	23
  4431                           	global	__size_of_bit_on
  4432  000A                     	__size_of_bit_on	equ	__end_of_bit_on-_bit_on
  4433                           	
  4434  04F8                     _bit_on:	
  4435                           	opt	stack 2
  4436                           ; Regs used in _bit_on: [wreg+status,2+status,0]
  4437                           ;bit_on@bt stored from wreg
  4438  04F8  1283               	bcf	status, 5	;RP0=0, select bank0
  4439  04F9  1303               	bcf	status, 6	;RP1=0, select bank0
  4440  04FA  00A1               	movwf	(bit_on@bt)
  4441                           	line	24
  4442                           	
  4443  04FB                     l3480:	
  4444                           ;main.c: 24: a_latch |= bt;
  4445  04FB  0821               	movf	(bit_on@bt),w
  4446  04FC  00A0               	movwf	(??_bit_on+0)+0
  4447  04FD  0820               	movf	(??_bit_on+0)+0,w
  4448  04FE  04DD               	iorwf	(_a_latch),f
  4449                           	line	25
  4450                           	
  4451  04FF                     l3482:	
  4452                           ;main.c: 25: PORTA = a_latch;
  4453  04FF  085D               	movf	(_a_latch),w
  4454  0500  0085               	movwf	(5)	;volatile
  4455                           	line	26
  4456                           	
  4457  0501                     l477:	
  4458  0501  0008               	return
  4459                           	opt stack 0
  4460                           GLOBAL	__end_of_bit_on
  4461  0502                     	__end_of_bit_on:
  4462 ;; =============== function _bit_on ends ============
  4463                           
  4464                           	signat	_bit_on,4216
  4465                           	global	_interrupt_handler
  4466                           psect	text839,local,class=CODE,delta=2
  4467                           global __ptext839
  4468  0343                     __ptext839:
  4469                           
  4470 ;; *************** function _interrupt_handler *****************
  4471 ;; Defined at:
  4472 ;;		line 559 in file "main.c"
  4473 ;; Parameters:    Size  Location     Type
  4474 ;;		None
  4475 ;; Auto vars:     Size  Location     Type
  4476 ;;		None
  4477 ;; Return value:  Size  Location     Type
  4478 ;;		None               void
  4479 ;; Registers used:
  4480 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4486 ;;      Params:         0       0       0       0
  4487 ;;      Locals:         0       0       0       0
  4488 ;;      Temps:          4       0       0       0
  4489 ;;      Totals:         4       0       0       0
  4490 ;;Total ram usage:        4 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; Hardware stack levels required when called:    1
  4493 ;; This function calls:
  4494 ;;		_sync
  4495 ;; This function is called by:
  4496 ;;		Interrupt level 1
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           psect	text839
  4500                           	file	"main.c"
  4501                           	line	559
  4502                           	global	__size_of_interrupt_handler
  4503  002E                     	__size_of_interrupt_handler	equ	__end_of_interrupt_handler-_interrupt_handler
  4504                           	
  4505  0343                     _interrupt_handler:	
  4506                           	opt	stack 1
  4507                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4508                           psect	intentry,class=CODE,delta=2
  4509                           global __pintentry
  4510  0004                     __pintentry:
  4511                           global interrupt_function
  4512  0004                     interrupt_function:
  4513                           	global saved_w
  4514  007E                     	saved_w	set	btemp+0
  4515  0004  00FE               	movwf	saved_w
  4516  0005  0E03               	swapf	status,w
  4517  0006  00F3               	movwf	(??_interrupt_handler+0)
  4518  0007  0804               	movf	fsr0,w
  4519  0008  00F4               	movwf	(??_interrupt_handler+1)
  4520  0009  080A               	movf	pclath,w
  4521  000A  00F5               	movwf	(??_interrupt_handler+2)
  4522  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  4523  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  4524  000D  087F               	movf	btemp+1,w
  4525  000E  00F6               	movwf	(??_interrupt_handler+3)
  4526  000F  2B43               	ljmp	_interrupt_handler
  4527                           psect	text839
  4528                           	line	561
  4529                           	
  4530  0343                     i1l3614:	
  4531                           ;main.c: 561: if (mode == 0) {
  4532  0343  08DE               	movf	(_mode),f
  4533  0344  1D03               	skipz
  4534  0345  2B47               	goto	u306_21
  4535  0346  2B48               	goto	u306_20
  4536  0347                     u306_21:
  4537  0347  2B64               	goto	i1l616
  4538  0348                     u306_20:
  4539                           	line	566
  4540                           	
  4541  0348                     i1l3616:	
  4542                           ;main.c: 565: static char c=0;
  4543                           ;main.c: 566: if (RBIF) {
  4544  0348  1C0B               	btfss	(88/8),(88)&7
  4545  0349  2B4B               	goto	u307_21
  4546  034A  2B4C               	goto	u307_20
  4547  034B                     u307_21:
  4548  034B  2B5D               	goto	i1l611
  4549  034C                     u307_20:
  4550                           	line	568
  4551                           	
  4552  034C                     i1l3618:	
  4553                           ;main.c: 568: if (RB7 == 1) {
  4554  034C  1F86               	btfss	(55/8),(55)&7
  4555  034D  2B4F               	goto	u308_21
  4556  034E  2B50               	goto	u308_20
  4557  034F                     u308_21:
  4558  034F  2B5C               	goto	i1l612
  4559  0350                     u308_20:
  4560                           	line	570
  4561                           	
  4562  0350                     i1l3620:	
  4563                           ;main.c: 570: if(c == 0){
  4564  0350  08F8               	movf	(interrupt_handler@c),f
  4565  0351  1D03               	skipz
  4566  0352  2B54               	goto	u309_21
  4567  0353  2B55               	goto	u309_20
  4568  0354                     u309_21:
  4569  0354  2B5A               	goto	i1l613
  4570  0355                     u309_20:
  4571                           	line	571
  4572                           	
  4573  0355                     i1l3622:	
  4574                           ;main.c: 571: sync();
  4575  0355  2075               	fcall	_sync
  4576                           	line	572
  4577                           	
  4578  0356                     i1l3624:	
  4579                           ;main.c: 572: c = 1;
  4580  0356  01F8               	clrf	(interrupt_handler@c)
  4581  0357  1403               	bsf	status,0
  4582  0358  0DF8               	rlf	(interrupt_handler@c),f
  4583                           	line	573
  4584                           ;main.c: 573: } else {
  4585  0359  2B5C               	goto	i1l612
  4586                           	
  4587  035A                     i1l613:	
  4588                           	line	574
  4589                           ;main.c: 574: c = 0;
  4590  035A  01F8               	clrf	(interrupt_handler@c)
  4591  035B  2B5C               	goto	i1l612
  4592                           	line	575
  4593                           	
  4594  035C                     i1l614:	
  4595                           	line	576
  4596                           	
  4597  035C                     i1l612:	
  4598                           	line	577
  4599                           ;main.c: 575: }
  4600                           ;main.c: 576: }
  4601                           ;main.c: 577: RBIF = 0;
  4602  035C  100B               	bcf	(88/8),(88)&7
  4603                           	line	578
  4604                           	
  4605  035D                     i1l611:	
  4606                           	line	579
  4607                           ;main.c: 578: }
  4608                           ;main.c: 579: if (INTF) {
  4609  035D  1C8B               	btfss	(89/8),(89)&7
  4610  035E  2B60               	goto	u310_21
  4611  035F  2B61               	goto	u310_20
  4612  0360                     u310_21:
  4613  0360  2B64               	goto	i1l616
  4614  0361                     u310_20:
  4615                           	line	584
  4616                           	
  4617  0361                     i1l3626:	
  4618                           ;main.c: 584: INTF = 0;
  4619  0361  108B               	bcf	(89/8),(89)&7
  4620  0362  2B64               	goto	i1l616
  4621                           	line	585
  4622                           	
  4623  0363                     i1l615:	
  4624  0363  2B64               	goto	i1l616
  4625                           	line	586
  4626                           	
  4627  0364                     i1l608:	
  4628                           	line	587
  4629                           	
  4630  0364                     i1l616:	
  4631  0364  0876               	movf	(??_interrupt_handler+3),w
  4632  0365  1283               	bcf	status, 5	;RP0=0, select bank0
  4633  0366  1303               	bcf	status, 6	;RP1=0, select bank0
  4634  0367  00FF               	movwf	btemp+1
  4635  0368  0875               	movf	(??_interrupt_handler+2),w
  4636  0369  008A               	movwf	pclath
  4637  036A  0874               	movf	(??_interrupt_handler+1),w
  4638  036B  0084               	movwf	fsr0
  4639  036C  0E73               	swapf	(??_interrupt_handler+0)^0FFFFFF80h,w
  4640  036D  0083               	movwf	status
  4641  036E  0EFE               	swapf	saved_w,f
  4642  036F  0E7E               	swapf	saved_w,w
  4643  0370  0009               	retfie
  4644                           	opt stack 0
  4645                           GLOBAL	__end_of_interrupt_handler
  4646  0371                     	__end_of_interrupt_handler:
  4647 ;; =============== function _interrupt_handler ends ============
  4648                           
  4649                           	signat	_interrupt_handler,88
  4650                           	global	_sync
  4651                           psect	text840,local,class=CODE,delta=2
  4652                           global __ptext840
  4653  0075                     __ptext840:
  4654                           
  4655 ;; *************** function _sync *****************
  4656 ;; Defined at:
  4657 ;;		line 331 in file "main.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;		None               void
  4664 ;; Registers used:
  4665 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4671 ;;      Params:         0       0       0       0
  4672 ;;      Locals:         0       0       0       0
  4673 ;;      Temps:          3       0       0       0
  4674 ;;      Totals:         3       0       0       0
  4675 ;;Total ram usage:        3 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; This function calls:
  4678 ;;		Nothing
  4679 ;; This function is called by:
  4680 ;;		_interrupt_handler
  4681 ;; This function uses a non-reentrant model
  4682 ;;
  4683                           psect	text840
  4684                           	file	"main.c"
  4685                           	line	331
  4686                           	global	__size_of_sync
  4687  0062                     	__size_of_sync	equ	__end_of_sync-_sync
  4688                           	
  4689  0075                     _sync:	
  4690                           	opt	stack 1
  4691                           ; Regs used in _sync: [wreg-fsr0h+status,2+status,0]
  4692                           	line	332
  4693                           	
  4694  0075                     i1l3568:	
  4695                           ;main.c: 332: TMR1ON = 0;
  4696  0075  1283               	bcf	status, 5	;RP0=0, select bank0
  4697  0076  1303               	bcf	status, 6	;RP1=0, select bank0
  4698  0077  1010               	bcf	(128/8),(128)&7
  4699                           	line	334
  4700                           ;main.c: 334: switch (state) {
  4701  0078  28BF               	goto	i1l3598
  4702                           	line	335
  4703                           ;main.c: 335: case 0:
  4704                           	
  4705  0079                     i1l563:	
  4706                           	line	337
  4707                           	
  4708  0079                     i1l3570:	
  4709                           ;main.c: 337: TMR1H = 0;
  4710  0079  018F               	clrf	(15)	;volatile
  4711                           	line	338
  4712                           ;main.c: 338: TMR1L = 0;
  4713  007A  018E               	clrf	(14)	;volatile
  4714                           	line	339
  4715                           	
  4716  007B                     i1l3572:	
  4717                           ;main.c: 339: tmr1_counter = 0;
  4718  007B  01E5               	clrf	(_tmr1_counter)
  4719                           	line	340
  4720                           	
  4721  007C                     i1l3574:	
  4722                           ;main.c: 340: TMR1IF = 0;
  4723  007C  100C               	bcf	(96/8),(96)&7
  4724                           	line	341
  4725                           	
  4726  007D                     i1l3576:	
  4727                           ;main.c: 341: TMR1ON = 1;
  4728  007D  1410               	bsf	(128/8),(128)&7
  4729                           	line	342
  4730                           ;main.c: 342: break;
  4731  007E  28CA               	goto	i1l3600
  4732                           	line	344
  4733                           ;main.c: 344: case 1:
  4734                           	
  4735  007F                     i1l565:	
  4736                           	line	345
  4737                           	
  4738  007F                     i1l566:	
  4739                           	line	347
  4740                           ;main.c: 345: case 2:
  4741                           ;main.c: 347: if (TMR1IF == 1)
  4742  007F  1C0C               	btfss	(96/8),(96)&7
  4743  0080  2882               	goto	u300_21
  4744  0081  2883               	goto	u300_20
  4745  0082                     u300_21:
  4746  0082  2887               	goto	i1l567
  4747  0083                     u300_20:
  4748                           	line	348
  4749                           	
  4750  0083                     i1l3578:	
  4751                           ;main.c: 348: tmr1_counter++;
  4752  0083  3001               	movlw	(01h)
  4753  0084  00F0               	movwf	(??_sync+0)+0
  4754  0085  0870               	movf	(??_sync+0)+0,w
  4755  0086  07E5               	addwf	(_tmr1_counter),f
  4756                           	
  4757  0087                     i1l567:	
  4758                           	line	350
  4759                           ;main.c: 350: seg_ticks_l = (TMR1L >> 7) | ((TMR1H << 1) & 0xFF);
  4760  0087  080F               	movf	(15),w	;volatile
  4761  0088  00F0               	movwf	(??_sync+0)+0
  4762  0089  3001               	movlw	01h
  4763  008A                     u301_25:
  4764  008A  1003               	clrc
  4765  008B  0DF0               	rlf	(??_sync+0)+0,f
  4766  008C  3EFF               	addlw	-1
  4767  008D  1D03               	skipz
  4768  008E  288A               	goto	u301_25
  4769  008F  080E               	movf	(14),w	;volatile
  4770  0090  00F1               	movwf	(??_sync+1)+0
  4771  0091  3007               	movlw	07h
  4772  0092                     u302_25:
  4773  0092  1003               	clrc
  4774  0093  0CF1               	rrf	(??_sync+1)+0,f
  4775  0094  3EFF               	addlw	-1
  4776  0095  1D03               	skipz
  4777  0096  2892               	goto	u302_25
  4778  0097  0871               	movf	0+(??_sync+1)+0,w
  4779  0098  0470               	iorwf	0+(??_sync+0)+0,w
  4780  0099  00F2               	movwf	(??_sync+2)+0
  4781  009A  0872               	movf	(??_sync+2)+0,w
  4782  009B  00E2               	movwf	(_seg_ticks_l)
  4783                           	line	351
  4784                           ;main.c: 351: seg_ticks_h = (TMR1H >> 7) | ((tmr1_counter << 1) & 0xFF);
  4785  009C  0865               	movf	(_tmr1_counter),w
  4786  009D  00F0               	movwf	(??_sync+0)+0
  4787  009E  3001               	movlw	01h
  4788  009F                     u303_25:
  4789  009F  1003               	clrc
  4790  00A0  0DF0               	rlf	(??_sync+0)+0,f
  4791  00A1  3EFF               	addlw	-1
  4792  00A2  1D03               	skipz
  4793  00A3  289F               	goto	u303_25
  4794  00A4  080F               	movf	(15),w	;volatile
  4795  00A5  00F1               	movwf	(??_sync+1)+0
  4796  00A6  3007               	movlw	07h
  4797  00A7                     u304_25:
  4798  00A7  1003               	clrc
  4799  00A8  0CF1               	rrf	(??_sync+1)+0,f
  4800  00A9  3EFF               	addlw	-1
  4801  00AA  1D03               	skipz
  4802  00AB  28A7               	goto	u304_25
  4803  00AC  0871               	movf	0+(??_sync+1)+0,w
  4804  00AD  0470               	iorwf	0+(??_sync+0)+0,w
  4805  00AE  00F2               	movwf	(??_sync+2)+0
  4806  00AF  0872               	movf	(??_sync+2)+0,w
  4807  00B0  00E1               	movwf	(_seg_ticks_h)
  4808                           	line	353
  4809                           	
  4810  00B1                     i1l3580:	
  4811                           ;main.c: 353: segment.raw = 0;
  4812  00B1  01D1               	clrf	(_segment)
  4813                           	line	354
  4814                           	
  4815  00B2                     i1l3582:	
  4816                           ;main.c: 354: segment.hrl = 0;
  4817  00B2  01D2               	clrf	0+(_segment)+01h
  4818                           	line	358
  4819                           	
  4820  00B3                     i1l3584:	
  4821                           ;main.c: 358: TMR1L = 0;
  4822  00B3  018E               	clrf	(14)	;volatile
  4823                           	line	359
  4824                           	
  4825  00B4                     i1l3586:	
  4826                           ;main.c: 359: TMR1H = 0;
  4827  00B4  018F               	clrf	(15)	;volatile
  4828                           	line	360
  4829                           	
  4830  00B5                     i1l3588:	
  4831                           ;main.c: 360: tmr1_counter = 0;
  4832  00B5  01E5               	clrf	(_tmr1_counter)
  4833                           	line	361
  4834                           	
  4835  00B6                     i1l3590:	
  4836                           ;main.c: 361: TMR1IF = 0;
  4837  00B6  100C               	bcf	(96/8),(96)&7
  4838                           	line	362
  4839                           	
  4840  00B7                     i1l3592:	
  4841                           ;main.c: 362: TMR1ON = 1;
  4842  00B7  1410               	bsf	(128/8),(128)&7
  4843                           	line	365
  4844                           ;main.c: 365: TMR0 = 256 - seg_ticks_l;
  4845  00B8  0362               	decf	(_seg_ticks_l),w
  4846  00B9  3AFF               	xorlw	0ffh
  4847  00BA  0081               	movwf	(1)
  4848                           	line	366
  4849                           	
  4850  00BB                     i1l3594:	
  4851                           ;main.c: 366: tmr0_counter = 0;
  4852  00BB  01E4               	clrf	(_tmr0_counter)
  4853                           	line	367
  4854                           	
  4855  00BC                     i1l3596:	
  4856                           ;main.c: 367: TMR0IF = 1;
  4857  00BC  150B               	bsf	(90/8),(90)&7
  4858                           	line	370
  4859                           ;main.c: 370: break;
  4860  00BD  28CA               	goto	i1l3600
  4861                           	line	371
  4862                           ;main.c: 371: default:
  4863                           	
  4864  00BE                     i1l568:	
  4865                           	line	373
  4866                           ;main.c: 372: ;
  4867                           ;main.c: 373: }
  4868  00BE  28CA               	goto	i1l3600
  4869                           	line	334
  4870                           	
  4871  00BF                     i1l562:	
  4872                           	
  4873  00BF                     i1l3598:	
  4874  00BF  0863               	movf	(_state),w
  4875                           	; Switch size 1, requested type "space"
  4876                           ; Number of cases is 3, Range of values is 0 to 2
  4877                           ; switch strategies available:
  4878                           ; Name         Instructions Cycles
  4879                           ; direct_byte            9     6 (fixed)
  4880                           ; simple_byte           10     6 (average)
  4881                           ; jumptable            260     6 (fixed)
  4882                           ; rangetable             7     6 (fixed)
  4883                           ; spacedrange           12     9 (fixed)
  4884                           ; locatedrange           3     3 (fixed)
  4885                           ;	Chosen strategy is direct_byte
  4886                           
  4887  00C0  0084               	movwf fsr
  4888  00C1  3003               	movlw	3
  4889  00C2  0204               	subwf	fsr,w
  4890  00C3  1803               skipnc
  4891  00C4  28CA               goto i1l3600
  4892  00C5  3000               movlw high(i1S4216)
  4893  00C6  008A               movwf pclath
  4894  00C7  3001               	movlw low(i1S4216)
  4895  00C8  0704               	addwf fsr,w
  4896  00C9  0082               	movwf pc
  4897                           psect	swtext2,local,class=CONST,delta=2
  4898                           global __pswtext2
  4899  0001                     __pswtext2:
  4900  0001                     i1S4216:
  4901  0001  2879               	ljmp	i1l3570
  4902  0002  287F               	ljmp	i1l566
  4903  0003  287F               	ljmp	i1l566
  4904                           psect	text840
  4905                           
  4906                           	line	373
  4907                           	
  4908  00CA                     i1l564:	
  4909                           	line	376
  4910                           	
  4911  00CA                     i1l3600:	
  4912                           ;main.c: 376: if (state != 2)
  4913  00CA  0863               	movf	(_state),w
  4914  00CB  3A02               	xorlw	02h
  4915  00CC  1903               	skipnz
  4916  00CD  28CF               	goto	u305_21
  4917  00CE  28D0               	goto	u305_20
  4918  00CF                     u305_21:
  4919  00CF  28D6               	goto	i1l570
  4920  00D0                     u305_20:
  4921                           	line	377
  4922                           	
  4923  00D0                     i1l3602:	
  4924                           ;main.c: 377: state++;
  4925  00D0  3001               	movlw	(01h)
  4926  00D1  00F0               	movwf	(??_sync+0)+0
  4927  00D2  0870               	movf	(??_sync+0)+0,w
  4928  00D3  07E3               	addwf	(_state),f
  4929  00D4  28D6               	goto	i1l570
  4930                           	
  4931  00D5                     i1l569:	
  4932  00D5  28D6               	goto	i1l570
  4933                           	line	378
  4934                           	
  4935  00D6                     i1l3604:	
  4936                           	line	379
  4937                           ;main.c: 378: return;
  4938                           	
  4939  00D6                     i1l570:	
  4940  00D6  0008               	return
  4941                           	opt stack 0
  4942                           GLOBAL	__end_of_sync
  4943  00D7                     	__end_of_sync:
  4944 ;; =============== function _sync ends ============
  4945                           
  4946                           	signat	_sync,88
  4947                           psect	text841,local,class=CODE,delta=2
  4948                           global __ptext841
  4949  0000                     __ptext841:
  4950                           	global	btemp
  4951  007E                     	btemp set 07Eh
  4952                           
  4953                           	DABS	1,126,2	;btemp
  4954                           	global	wtemp0
  4955  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Jun 07 15:17:55 2013

          ??_what_time_is_now 0020                             pc 0002  __size_of_hour_start_end_init 0047  
              i2c_write_bit@x 0021                ___bmul@product 0022                            _RD 0C60  
                          _WR 0C61                            fsr 0004        __size_of_i2c_write_bit 0028  
             i2c_write_byte@i 0024                           l502 0321                           l510 03F3  
                         l503 0342                           l511 03E6                           l504 032B  
                         l512 03F0                           l600 050F                           l505 0335  
                         l506 033F                           l530 0103                           l515 01E9  
                         l531 010C                           l603 0498                           l516 0224  
                         l540 0133                           l532 0118                           l604 049A  
                         l620 001E                           l509 03DC                           l517 0224  
                         l533 0117                           l605 049A                           l621 0040  
                         l534 0126                           l630 0074                           l622 003E  
                         l551 0472                           l535 0119                           l527 00F0  
                         l543 03A9                           l631 0072                           l623 0036  
                         l480 04F7                           l552 0480                           l536 0133  
                         l528 00F8                           l544 03C6                           l632 0072  
                         l624 003D                           l553 047F                           l537 011C  
                         l529 0104                           l545 03B2                           l633 0073  
                         l625 0056                           l538 011F                           l546 03BE  
                         l634 0074                           l626 0052                           l483 01AA  
                         l539 0122                           l547 03BD                           l619 0069  
                         l627 0060                           l484 01D8                           l556 039D  
                         l580 0461                           l548 03C8                           l628 0067  
                         l477 0501                           l573 04ED                           l485 01B3  
                         l581 0463                           l629 0068                           l486 01B5  
                         l590 026A                           l487 01DD                           l559 0516  
                         l576 0456                           l577 0459                           l593 04A3  
                         l578 045C                           l594 04B4                           l586 025F  
                         l579 045C                           l587 023E                           l588 025A  
                         l589 026A                           l597 041D                           _GIE 005F  
                         _RB1 0031                           _RB3 0033                           _RB4 0034  
                         _RB5 0035                           _RB7 0037                           fsr0 0004  
                         indf 0000                          S4214 0510       __size_of_i2c_write_byte 0034  
                        l1110 0285                          l1111 02A2                          l1120 02A4  
                        l1112 028C                          l1113 028C                          l1105 026B  
                        l1114 0294                          l1106 0270                          l1115 0294  
                        l1107 0270                          l1123 02E8                          l1116 0299  
                        l1108 0275                          l1124 0304                          l1140 0161  
                        l1132 013C                          l1117 0299                          l1109 027E  
                        l1125 030D                          l1141 018F                          l1133 013D  
                        l1118 029E                          l1126 030F                          l1150 018C  
                        l1142 016D                          l1134 0142                          l1119 029F  
                        l1151 018D                          l1143 0179                          l1135 0143  
                        l1144 017A                          l1136 014B                          l1081 042F  
                        l1145 017A                          l1137 014C                          l1090 0445  
                        l1082 0429                          l1146 0182                          l1138 0154  
                        l1091 0445                          l1083 042E                          l1147 0182  
                        l1139 0155                          l1084 0438                          l1148 0187  
                        l1085 042F                          l1149 0187                          l1086 0437  
                        l1087 0438                          l1088 043D                          l1089 043D  
                 _sixty_start 0310                          l4100 0419                          l4102 041A  
                        l4110 0483                          l1632 04B9                          l4040 044B  
                        l4104 041B                          l4120 048F                          l4112 0486  
                        l1633 04C2                          l4034 050A                          l1634 04CC  
                        l4042 0452                          l4050 04A4                          l4106 041C  
                        l4122 0490                          l4114 0487                          l4130 0012  
                        l1635 04CE                          l3500 032A                          l4036 0514  
                        l4044 0461                          l4060 04AC                          l4052 04A6  
                        l4124 0496                          l4116 048A                          l4108 0481  
                        l4140 0022                          l4132 0013                          l3510 033B  
                        l3502 032B                          l4038 0449                          l4070 04B3  
                        l4062 04AD                          l4054 04A9                          l4046 049B  
                        l4126 0498                          l4118 048B                          l4150 0036  
                        l4142 002A                          l4134 0016                          l3512 033E  
                        l3504 0331                          l3520 03D2                          l4064 04B0  
                        l4056 04AA                          l4048 04A2                          l4080 03FB  
                        l4072 03F4                          l4160 0050                          l4144 0030  
                        l4152 003E                          l4136 001B                          l4128 0011  
                        l3514 033F                          l3506 0334                          l3530 03E5  
                        l3522 03D8                          l3610 04E3                          l4066 04B1  
                        l4058 04AB                          l4090 0410                          l4082 0402  
                        l4074 03F7                          l4170 0060                          l4162 0052  
                        l4146 0031                          l4154 0040                          l4138 001E  
                        l3516 0342                          l3508 0335                          l3540 03F3  
                        l3532 03E6                          l3524 03DB                          l3700 01E8  
                        l4068 04B2                          l4092 0411                          l4084 0409  
                        l4076 03F8                          l4156 0046                          l4164 0056  
                        l4148 0034                          l4172 0069                          l3534 03EC  
                        l3526 03DC                          l3518 03CC                          l3630 0275  
                        l3710 0219                          l3702 01E9                          l4094 0412  
                        l4086 040A                          l4078 03FA                          l4166 005A  
                        l4158 004A                          l3480 04FB                          l3536 03EF  
                        l3528 03E2                          l3560 0471                          l3640 02A1  
                        l3632 027E                          l3712 021D                          l3704 01F8  
                        l3720 02E0                          l3800 0147                          l4096 0413  
                        l4088 040D                          l4168 005E                          l3482 04FF  
                        l3490 0319                          l3538 03F0                          l3562 0473  
                        l3642 02A2                          l3634 027F                          l3706 0203  
                        l3714 0371                          l3722 02E7                          l3730 0304  
                        l3810 015E                          l3802 014C                          l4098 0416  
                        l3484 04F1                          l3492 031E                          l3564 0477  
                        l3556 0464                          l3628 0421                          l3644 02A4  
                        l3636 0282                          l3660 04BD                          l3708 020E  
                        l3716 0399                          l3732 030A                          l3724 02E8  
                        l3740 00D7                          l3820 016D                          l3812 0160  
                        l3804 014D                          l3486 04F5                          l3494 0320  
                        l3566 047E                          l3558 046A                          l3638 029F  
                        l3670 04CE                          l3662 04C2                          l3734 030C  
                        l3726 02F7                          l3718 02DF                          l3750 00F6  
                        l3742 00DE                          l3822 0176                          l3814 0161  
                        l3806 0150                          l3496 0321                          l3488 0313  
                        l3664 04C4                          l3680 01B0                          l3672 0193  
                        l3736 030D                          l3728 02FD                          l3760 010C  
                        l3752 00F8                          l3744 00E2                          l3824 0178  
                        l3816 016A                          l3808 0155                          l3498 0327  
                        l3666 04C6                          l3658 04B8                          l3690 01CA  
                        l3682 01B3                          l3674 0197                          l3738 030F  
                        l3770 0122                          l3762 0112                          l3754 00FE  
                        l3746 00E3                          l3826 018D                          l3818 016C  
                        l3668 04CC                          l3684 01B7                          l3692 01D8  
                        l3676 019B                          l3772 0125                          l3764 0119  
                        l3756 0104                          l3748 00F0                          l3828 018F  
                        l3860 03A8                          l3694 01DA                          l3686 01C0  
                        l3678 01A9                          l3766 011C                          l3774 0126  
                        l3758 010A                          l3790 0137                          l3870 03BE  
                        l3862 03A9                          l3688 01C2                          l3696 01DE  
                        l3768 011F                          l3792 013D                          l3872 03BF  
                        l3864 03AF                          l3856 039E                          l3880 023C  
                        l3698 01E1                          l3794 013E                          l3866 03B2  
                        l3874 03C6                          l3858 039F                          l3882 023E  
                        l3890 025F                          l3796 0143                          l3876 03C8  
                        l3868 03BA                          l3884 0254                          l3798 0144  
                        l3886 0259                          l3878 0225                          l3888 025A  
                        _T0CS 040D                          u3110 0429                          u3120 028B  
                        u3200 01E7                          u3201 01E6                          u3220 0223  
                        u3300 00FE                          u3221 0222                          u3301 00FD  
                        u3150 04BD                          u3214 01F1                          u3230 02E6  
                        u3310 010A                          u3151 04BC                          u3215 01EF  
                        u3231 02E5                          u3311 0109                          u3160 04CB  
                        u3320 0112                          u3400 03AF                          u3161 04CA  
                        u3321 0111                          u3401 03AE                          u3170 01A8  
                        u3250 0303                          u3410 03BA                          u3171 01A7  
                        u3251 0302                          u3411 03B9                          u3180 01B0  
                        u3260 030A                          u3244 02F1                          u3420 022F  
                        u3181 01AF                          u3261 0309                          u3245 02EF  
                        u3190 01D7                          u3270 00DE                          u3350 015E  
                        u3430 0258                          u3191 01D6                          u3175 01A4  
                        u3271 00DD                          u3351 015D                          u3280 00E2  
                        u3360 016A                          u3440 0269                          u3600 001B  
                        u3361 0169                          u3441 0268                          u3601 001A  
                        u3290 00F6                          u3370 0176                          u3610 0022  
                        u3195 01D3                          u3291 00F5                          u3371 0175  
                        u3611 0021                          _IOFS 047A                          u2900 0331  
                        u3620 002A                          u2901 0330                          u3621 0029  
                        u2910 033B                          u3390 03A7                          u3630 0030  
                        u2911 033A                          u3391 03A6                          u3631 002F  
                        u2920 03D8                          u3560 0452                          u3640 0046  
                        u2921 03D7                          u3561 0451                          u3641 0045  
                        u2930 03E2                          u3570 0460                          u3650 0050  
                        u2931 03E1                          u3571 045F                          u3651 004F  
                        _PEIE 005E                          u2940 03EC                          u3580 04A1  
                        u3660 005A                          u2941 03EB                          u3661 0059  
                        _INTE 005C                          u3590 0496                          u3670 005E  
                        _INTF 0059                          u3591 0495                          u3671 005D  
                        _RBIE 005B                          u2880 031E                          _RBIF 0058  
                        u2881 031D                          u2890 0327                          u3690 0071  
                        u2891 0326                          u3691 0070                          u2980 0470  
                        u2981 046F                          u3685 0066                          u2990 047D  
                        u2991 047C                          _TMR0 0001                          _WREN 0C62  
                        _main 0011                          _init 0481                          _mode 005E  
             shift_write@data 0026                          _time 0066         set_it_faster@how_much 0027  
                        btemp 007E                          _sync 0075                          start 0010  
              ?_i2c_check_ack 0070             ___bmul@multiplier 0023                         ?_main 0070  
                       ?_init 0070                         _EEADR 010D                         _CARRY 0018  
                       ?_sync 0070                         _T1CON 0010                         i1l611 035D  
                       i1l612 035C                         i1l613 035A                         i1l614 035C  
                       i1l615 0363                         i1l608 0364                         i1l616 0364  
                       i1l570 00D6                         i1l562 00BF                         i1l563 0079  
                       i1l564 00CA                         i1l565 007F                         i1l566 007F  
                       i1l567 0087                         i1l568 00BE                         i1l569 00D5  
                       _TMR1H 000F                         _TMR1L 000E                         _PORTA 0005  
                       _TRISA 0085                         _TRISB 0086                  ?_init_normal 0070  
             __end_of_bit_off 04F8                         _state 0063                         main@i 0044  
              __pbitbssCOMMON 03B8                         pclath 000A                 rtc_setup@F797 00A0  
               _i2c_write_bit 041E                         status 0003                         wtemp0 007E  
                __end_of_main 0075                  __end_of_init 049B        hour_start_end_init@min 0026  
                __end_of_sync 00D7              i2c_check_ack@tmp 0021                        ??_main 0043  
                      ??_init 0043                        ??_sync 0070                  ?_next_minute 0070  
                      _ADCON1 009F                        i1S4216 0001            i2c_write_byte@byte 0023  
                      _EEDATA 010C                        _EECON1 018C                        _EECON2 018D  
                      i1l3600 00CA                        i1l3602 00D0                        i1l3604 00D6  
                      i1l3620 0350                        i1l3622 0355                        i1l3614 0343  
                      i1l3624 0356                        i1l3616 0348                        i1l3570 0079  
                      i1l3626 0361                        i1l3618 034C                        i1l3580 00B1  
                      i1l3572 007B                        i1l3590 00B6                        i1l3582 00B2  
                      i1l3574 007C                        i1l3592 00B7                        i1l3584 00B3  
                      u300_20 0083                        i1l3576 007D                        i1l3568 0075  
                      u300_21 0082                        i1l3594 00BB                        i1l3586 00B4  
                      i1l3578 0083                        i1l3596 00BC                        i1l3588 00B5  
              ?_i2c_write_bit 0070                        i1l3598 00BF                        u301_25 008A  
                      u310_20 0361                        u310_21 0360                        u302_25 0092  
                      u303_25 009F                        u304_25 00A7                        u305_20 00D0  
                      u305_21 00CF                        u306_20 0348                        u306_21 0347  
                      u307_20 034C                        u307_21 034B                        u308_20 0350  
                      u308_21 034F                        u309_20 0355                        u309_21 0354  
                      _TMR0IE 005D                        _TMR0IF 005A                        _TMR1IE 0460  
                      _TMR1IF 0060                        _TMR1ON 0080                        _TRISB1 0431  
                      _TRISB4 0434               ??_i2c_check_ack 0020            __size_of_i2c_write 005C  
           ?_time_next_minute 0070                  ?_shift_write 0070                        ___bmul 04B5  
          ??_time_next_minute 0020                        _bit_on 04F8                     ??_bit_off 0020  
                      clrloop 0503                        saved_w 007E              __end_of_show_clk 0134  
              _i2c_write_byte 02DC           _hour_start_end_init 01DE                  i2c_write@dev 0028  
              rtc_setup@table 002D           ___bmul@multiplicand 0020         __end_of_set_it_faster 0464  
              __pcstackCOMMON 0070                  __pidataBANK1 04CF          ?_hour_start_end_init 0070  
           __end_of_i2c_write 0190        __end_of_i2c_write_byte 0310     __size_of_what_time_is_now 000B  
                sixty_start@x 0022               ??_i2c_write_bit 0020          __size_of_init_normal 002A  
                ?_sixty_start 0070                    __pbssBANK0 0045                    __pbssBANK1 00B4  
                  __pmaintext 0011                 ?_next_segment 0070                       ?___bmul 0020  
       ??_hour_start_end_init 0024                       ?_bit_on 0070                    __pintentry 0004  
               ?_segment_calc 0070               ?_i2c_write_byte 0070            __size_of_rtc_setup 0046  
        __size_of_next_minute 0003            interrupt_handler@c 0078                ??_next_segment 0028  
                   ?_show_clk 0070               __size_of___bmul 001A                ??_segment_calc 0024  
                     _a_latch 005D               __size_of_bit_on 000A          __size_of_shift_write 004E  
                  _init_setup 050A                       _bit_off 04EE                       _segment 0051  
                  _hour_start 0045          end_of_initialization 02DA             __end_of_rtc_setup 026B  
                  ??_show_clk 0027              _what_time_is_now 04E3     __size_of_time_next_minute 001D  
               i2c_write@addr 0025                 i2c_write@data 0026          __size_of_sixty_start 0033  
                  _sixty_stop 03C9         __end_of_i2c_check_ack 02A5                   rtc_setup@rv 0041  
        hour_start_end_init@i 0027             _application_reset 049B                __end_of___bmul 04CF  
              __end_of_bit_on 0502                   ?_init_setup 0070            ?_application_reset 0070  
         start_initialization 02A5           ??_application_reset 0027          __end_of_next_segment 03C9  
                   _i2c_write 0134          __end_of_segment_calc 039E     __end_of_application_reset 04B5  
                    ??___bmul 0021                      ??_bit_on 0020                   __pdataBANK1 00A0  
            ??_i2c_write_byte 0022                 ??_init_normal 0028                   __pbssCOMMON 0078  
               __pcstackBANK0 0020                    ?_i2c_write 0025        __size_of_set_it_faster 001E  
       __end_of_i2c_write_bit 0446                   sixty_stop@x 0022           __size_of_init_setup 0006  
                 ?_sixty_stop 0070   __end_of_hour_start_end_init 0225                     __ptext820 049B  
                   __ptext821 0134                     __ptext830 026B                     __ptext822 0446  
                   __ptext831 041E                     __ptext823 0514                     __ptext840 0075  
                   __ptext832 050A                     __ptext824 00D7                     __ptext816 0481  
                   __ptext841 0000                     __ptext833 04E3                     __ptext825 02DC  
                   __ptext817 03F4                     __ptext834 0464                     __ptext826 0371  
                   __ptext818 0225                     __ptext835 03C9                     __ptext827 01DE  
                   __ptext819 039E                     __ptext836 0310                     __ptext828 0190  
                   __ptext837 04EE                     __ptext829 04B5                     __ptext838 04F8  
                   __ptext839 0343             __size_of_show_clk 005D                      ?_bit_off 0070  
                   __pswtext1 0510                     __pswtext2 0001             _interrupt_handler 0343  
            _time_next_minute 0464            ?_interrupt_handler 0070                 ??_next_minute 0026  
         ??_interrupt_handler 0073           __end_of_init_normal 041E                     _red_start 005F  
           interrupt_function 0004      __end_of_what_time_is_now 04EE                     bit_off@bt 0021  
               ??_shift_write 0022    __size_of_application_reset 001A                 _set_it_faster 0446  
                   _rtc_setup 0225     __end_of_interrupt_handler 0371         __size_of_next_segment 002B  
         __size_of_sixty_stop 002B         __size_of_segment_calc 002D                    rtc_setup@i 0042  
                 ??_i2c_write 0027           __end_of_next_minute 0517                  _tmr0_counter 0064  
              ?_set_it_faster 0070                  _tmr1_counter 0065                  _next_segment 039E  
                _segment_calc 0371                    ?_rtc_setup 0070                  ??_init_setup 0020  
         __end_of_shift_write 01DE              __size_of_bit_off 000A                   _init_normal 03F4  
               ??_sixty_start 0020                      _last_clk 03B8                 __size_of_main 0064  
               __size_of_init 001A                 __size_of_sync 0062            __end_of_init_setup 0510  
                    _hour_end 00B4                      _red_stop 0060                      clear_ram 0502  
                    bit_on@bt 0021                      _show_clk 00D7    __size_of_interrupt_handler 002E  
                shift_write@i 0024                   _seg_ticks_h 0061                   _seg_ticks_l 0062  
      __size_of_i2c_check_ack 003A                   _next_minute 0514                      intlevel1 0000  
                ??_sixty_stop 0020           __end_of_sixty_start 0343               ??_set_it_faster 0027  
    __end_of_time_next_minute 0481                    _OSCCONbits 008F                   _shift_write 0190  
                 ??_rtc_setup 0029            __end_of_sixty_stop 03F4             ?_what_time_is_now 0070  
               _i2c_check_ack 026B  
