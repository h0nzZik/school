

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Tue Jun 11 13:32:25 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F819
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 16 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 16 "main.c"
    45  2007  FF18               	dw 0xFFFB & 0xFFFF & 0xFFDF & 0xFFFC & 0xFFBF & 0xFF7F ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_application_reset
    48                           	FNCALL	_main,_bit_on
    49                           	FNCALL	_main,_sync
    50                           	FNCALL	_main,_next_segment
    51                           	FNCALL	_main,_next_minute
    52                           	FNCALL	_main,_bit_off
    53                           	FNCALL	_main,_shift_send
    54                           	FNCALL	_main,_wait_for_event
    55                           	FNCALL	_main,_i2c_write
    56                           	FNCALL	_init,_set_it_faster
    57                           	FNCALL	_init,_init_setup
    58                           	FNCALL	_init,_init_normal
    59                           	FNCALL	_init_normal,_rtc_setup
    60                           	FNCALL	_init_normal,_what_time_is_now
    61                           	FNCALL	_init_normal,_set_it_faster
    62                           	FNCALL	_init_normal,_bit_on
    63                           	FNCALL	_init_normal,_shift_send
    64                           	FNCALL	_application_reset,_shift_send
    65                           	FNCALL	_application_reset,_what_time_is_now
    66                           	FNCALL	_sync,_what_time_is_now
    67                           	FNCALL	_sync,_next_segment
    68                           	FNCALL	_rtc_setup,_i2c_write
    69                           	FNCALL	_next_segment,_shift_send
    70                           	FNCALL	_what_time_is_now,_set_it_faster
    71                           	FNCALL	_what_time_is_now,_i2c_read
    72                           	FNCALL	_what_time_is_now,___bmul
    73                           	FNCALL	_what_time_is_now,_shift_send
    74                           	FNCALL	_what_time_is_now,_bit_on
    75                           	FNCALL	_i2c_write,_i2c_write_byte
    76                           	FNCALL	_i2c_read,_i2c_write_byte
    77                           	FNCALL	_i2c_read,_i2c_read_byte
    78                           	FNCALL	_shift_send,_shift_write
    79                           	FNCALL	_shift_send,_shift_show
    80                           	FNCALL	_i2c_read_byte,_i2c_read_bit
    81                           	FNCALL	_i2c_read_byte,_i2c_write_bit
    82                           	FNCALL	_i2c_write_byte,_i2c_write_bit
    83                           	FNCALL	_i2c_write_byte,_i2c_check_ack
    84                           	FNCALL	_shift_show,_bit_on
    85                           	FNCALL	_shift_show,_bit_off
    86                           	FNCALL	_shift_write,_bit_off
    87                           	FNCALL	_shift_write,_bit_on
    88                           	FNROOT	_main
    89                           	FNCALL	intlevel1,_interrupt_handler
    90                           	global	intlevel1
    91                           	FNROOT	intlevel1
    92                           	global	rtc_setup@F789
    93                           psect	idataBANK0,class=CODE,space=0,delta=2
    94                           global __pidataBANK0
    95  0623                     __pidataBANK0:
    96                           	file	"main.c"
    97                           	line	364
    98                           
    99                           ;initializer for rtc_setup@F789
   100  0623  3400               	retlw	0
   101  0624  3400               	retlw	0
   102  0625  3401               	retlw	01h
   103  0626  3411               	retlw	011h
   104  0627  340D               	retlw	0Dh
   105  0628  3483               	retlw	083h
   106  0629  340E               	retlw	0Eh
   107  062A  3480               	retlw	080h
   108  062B  340F               	retlw	0Fh
   109  062C  3401               	retlw	01h
   110  062D  3409               	retlw	09h
   111  062E  3400               	retlw	0
   112  062F  340A               	retlw	0Ah
   113  0630  3400               	retlw	0
   114  0631  340B               	retlw	0Bh
   115  0632  3400               	retlw	0
   116  0633  340C               	retlw	0Ch
   117  0634  3400               	retlw	0
   118  0635  34FF               	retlw	0FFh
   119  0636  34FF               	retlw	0FFh
   120                           	global	_seg
   121                           	global	_a_latch
   122                           	global	_mode
   123                           	global	_seg_ticks_h
   124                           	global	_seg_ticks_l
   125                           	global	_state
   126                           	global	_tmr0_counter
   127                           	global	_tmr1_counter
   128                           	global	interrupt_handler@c
   129                           	global	__a
   130                           	global	__b
   131                           	global	_last_clk
   132                           	global	_need_sync
   133                           	global	_need_update
   134                           	global	_updated
   135                           	global	_time
   136                           	global	_PORTA
   137  0005                     _PORTA	set	5
   138                           	global	_T1CON
   139  0010                     _T1CON	set	16
   140                           	global	_TMR0
   141  0001                     _TMR0	set	1
   142                           	global	_TMR1H
   143  000F                     _TMR1H	set	15
   144                           	global	_TMR1L
   145  000E                     _TMR1L	set	14
   146                           	global	_CARRY
   147  0018                     _CARRY	set	24
   148                           	global	_GIE
   149  005F                     _GIE	set	95
   150                           	global	_INTE
   151  005C                     _INTE	set	92
   152                           	global	_PEIE
   153  005E                     _PEIE	set	94
   154                           	global	_RA6
   155  002E                     _RA6	set	46
   156                           	global	_RB1
   157  0031                     _RB1	set	49
   158                           	global	_RB3
   159  0033                     _RB3	set	51
   160                           	global	_RB4
   161  0034                     _RB4	set	52
   162                           	global	_RB5
   163  0035                     _RB5	set	53
   164                           	global	_RB7
   165  0037                     _RB7	set	55
   166                           	global	_RBIE
   167  005B                     _RBIE	set	91
   168                           	global	_RBIF
   169  0058                     _RBIF	set	88
   170                           	global	_TMR0IE
   171  005D                     _TMR0IE	set	93
   172                           	global	_TMR0IF
   173  005A                     _TMR0IF	set	90
   174                           	global	_TMR1IF
   175  0060                     _TMR1IF	set	96
   176                           	global	_TMR1ON
   177  0080                     _TMR1ON	set	128
   178                           	global	_ADCON1
   179  009F                     _ADCON1	set	159
   180                           	global	_OSCCONbits
   181  008F                     _OSCCONbits	set	143
   182                           	global	_TRISA
   183  0085                     _TRISA	set	133
   184                           	global	_TRISB
   185  0086                     _TRISB	set	134
   186                           	global	_IOFS
   187  047A                     _IOFS	set	1146
   188                           	global	_T0CS
   189  040D                     _T0CS	set	1037
   190                           	global	_TMR1IE
   191  0460                     _TMR1IE	set	1120
   192                           	global	_TRISB1
   193  0431                     _TRISB1	set	1073
   194                           	global	_TRISB4
   195  0434                     _TRISB4	set	1076
   196                           	global	_EEADR
   197  010D                     _EEADR	set	269
   198                           	global	_EEDATA
   199  010C                     _EEDATA	set	268
   200                           	global	_EECON1
   201  018C                     _EECON1	set	396
   202                           	global	_EECON2
   203  018D                     _EECON2	set	397
   204                           	global	_RD
   205  0C60                     _RD	set	3168
   206                           	global	_WR
   207  0C61                     _WR	set	3169
   208                           	global	_WREN
   209  0C62                     _WREN	set	3170
   210                           	file	"C:\Users\vyvoj\AppData\Local\Temp\s3ek."
   211                           	line	#
   212                           psect cinit,class=CODE,delta=2
   213                           global start_initialization
   214  04A3                     start_initialization:
   215                           
   216                           psect	bitbssCOMMON,class=COMMON,bit,space=1
   217                           global __pbitbssCOMMON
   218  03C0                     __pbitbssCOMMON:
   219  03C0                     __a:
   220  03C0                            ds      1
   221                           
   222  03C1                     __b:
   223  03C1                            ds      1
   224                           
   225  03C2                     _last_clk:
   226  03C2                            ds      1
   227                           
   228  03C3                     _need_sync:
   229  03C3                            ds      1
   230                           
   231  03C4                     _need_update:
   232  03C4                            ds      1
   233                           
   234  03C5                     _updated:
   235  03C5                            ds      1
   236                           
   237                           psect	bssCOMMON,class=COMMON,space=1
   238                           global __pbssCOMMON
   239  0079                     __pbssCOMMON:
   240  0079                     interrupt_handler@c:
   241  0079                            ds      1
   242                           
   243                           psect	bssBANK0,class=BANK0,space=1
   244                           global __pbssBANK0
   245  005A                     __pbssBANK0:
   246  005A                     _seg:
   247  005A                            ds      2
   248                           
   249  005C                     _a_latch:
   250  005C                            ds      1
   251                           
   252  005D                     _mode:
   253  005D                            ds      1
   254                           
   255  005E                     _seg_ticks_h:
   256  005E                            ds      1
   257                           
   258  005F                     _seg_ticks_l:
   259  005F                            ds      1
   260                           
   261  0060                     _state:
   262  0060                            ds      1
   263                           
   264  0061                     _tmr0_counter:
   265  0061                            ds      1
   266                           
   267  0062                     _tmr1_counter:
   268  0062                            ds      1
   269                           
   270  0063                     _time:
   271  0063                            ds      3
   272                           
   273                           psect	dataBANK0,class=BANK0,space=1
   274                           global __pdataBANK0
   275  0046                     __pdataBANK0:
   276                           	file	"main.c"
   277  0046                     rtc_setup@F789:
   278  0046                            ds      20
   279                           
   280                           psect clrtext,class=CODE,delta=2
   281                           global clear_ram
   282                           ;	Called with FSR containing the base address, and
   283                           ;	W with the last address+1
   284  064B                     clear_ram:
   285  064B  0064               	clrwdt			;clear the watchdog before getting into this loop
   286  064C                     clrloop:
   287  064C  0180               	clrf	indf		;clear RAM location pointed to by FSR
   288  064D  0A84               	incf	fsr,f		;increment pointer
   289  064E  0604               	xorwf	fsr,w		;XOR with final address
   290  064F  1903               	btfsc	status,2	;have we reached the end yet?
   291  0650  3400               	retlw	0		;all done for this memory range, return
   292  0651  0604               	xorwf	fsr,w		;XOR again to restore value
   293  0652  2E4C               	goto	clrloop		;do the next byte
   294                           
   295                           ; Clear objects allocated to BITCOMMON
   296                           psect cinit,class=CODE,delta=2
   297  04A3  01F8               	clrf	((__pbitbssCOMMON/8)+0)&07Fh
   298                           ; Clear objects allocated to COMMON
   299                           psect cinit,class=CODE,delta=2
   300  04A4  01F9               	clrf	((__pbssCOMMON)+0)&07Fh
   301                           ; Clear objects allocated to BANK0
   302                           psect cinit,class=CODE,delta=2
   303  04A5  1383               	bcf	status, 7	;select IRP bank0
   304  04A6  305A               	movlw	low(__pbssBANK0)
   305  04A7  0084               	movwf	fsr
   306  04A8  3066               	movlw	low((__pbssBANK0)+0Ch)
   307  04A9  264B               	fcall	clear_ram
   308                           ; Initialize objects allocated to BANK0
   309                           	global __pidataBANK0
   310                           psect cinit,class=CODE,delta=2
   311  04AA  2623               	fcall	__pidataBANK0+0		;fetch initializer
   312  04AB  00C6               	movwf	__pdataBANK0+0&07fh		
   313  04AC  2624               	fcall	__pidataBANK0+1		;fetch initializer
   314  04AD  00C7               	movwf	__pdataBANK0+1&07fh		
   315  04AE  2625               	fcall	__pidataBANK0+2		;fetch initializer
   316  04AF  00C8               	movwf	__pdataBANK0+2&07fh		
   317  04B0  2626               	fcall	__pidataBANK0+3		;fetch initializer
   318  04B1  00C9               	movwf	__pdataBANK0+3&07fh		
   319  04B2  2627               	fcall	__pidataBANK0+4		;fetch initializer
   320  04B3  00CA               	movwf	__pdataBANK0+4&07fh		
   321  04B4  2628               	fcall	__pidataBANK0+5		;fetch initializer
   322  04B5  00CB               	movwf	__pdataBANK0+5&07fh		
   323  04B6  2629               	fcall	__pidataBANK0+6		;fetch initializer
   324  04B7  00CC               	movwf	__pdataBANK0+6&07fh		
   325  04B8  262A               	fcall	__pidataBANK0+7		;fetch initializer
   326  04B9  00CD               	movwf	__pdataBANK0+7&07fh		
   327  04BA  262B               	fcall	__pidataBANK0+8		;fetch initializer
   328  04BB  00CE               	movwf	__pdataBANK0+8&07fh		
   329  04BC  262C               	fcall	__pidataBANK0+9		;fetch initializer
   330  04BD  00CF               	movwf	__pdataBANK0+9&07fh		
   331  04BE  262D               	fcall	__pidataBANK0+10		;fetch initializer
   332  04BF  00D0               	movwf	__pdataBANK0+10&07fh		
   333  04C0  262E               	fcall	__pidataBANK0+11		;fetch initializer
   334  04C1  00D1               	movwf	__pdataBANK0+11&07fh		
   335  04C2  262F               	fcall	__pidataBANK0+12		;fetch initializer
   336  04C3  00D2               	movwf	__pdataBANK0+12&07fh		
   337  04C4  2630               	fcall	__pidataBANK0+13		;fetch initializer
   338  04C5  00D3               	movwf	__pdataBANK0+13&07fh		
   339  04C6  2631               	fcall	__pidataBANK0+14		;fetch initializer
   340  04C7  00D4               	movwf	__pdataBANK0+14&07fh		
   341  04C8  2632               	fcall	__pidataBANK0+15		;fetch initializer
   342  04C9  00D5               	movwf	__pdataBANK0+15&07fh		
   343  04CA  2633               	fcall	__pidataBANK0+16		;fetch initializer
   344  04CB  00D6               	movwf	__pdataBANK0+16&07fh		
   345  04CC  2634               	fcall	__pidataBANK0+17		;fetch initializer
   346  04CD  00D7               	movwf	__pdataBANK0+17&07fh		
   347  04CE  2635               	fcall	__pidataBANK0+18		;fetch initializer
   348  04CF  00D8               	movwf	__pdataBANK0+18&07fh		
   349  04D0  2636               	fcall	__pidataBANK0+19		;fetch initializer
   350  04D1  00D9               	movwf	__pdataBANK0+19&07fh		
   351                           psect cinit,class=CODE,delta=2
   352                           global end_of_initialization
   353                           
   354                           ;End of C runtime variable initialization code
   355                           
   356  04D2                     end_of_initialization:
   357  04D2  0183               clrf status
   358  04D3  2811               ljmp _main	;jump to C main() function
   359                           psect	cstackCOMMON,class=COMMON,space=1
   360                           global __pcstackCOMMON
   361  0070                     __pcstackCOMMON:
   362                           	global	?_bit_on
   363  0070                     ?_bit_on:	; 0 bytes @ 0x0
   364                           	global	?_bit_off
   365  0070                     ?_bit_off:	; 0 bytes @ 0x0
   366                           	global	?_shift_write
   367  0070                     ?_shift_write:	; 0 bytes @ 0x0
   368                           	global	?_shift_show
   369  0070                     ?_shift_show:	; 0 bytes @ 0x0
   370                           	global	?_shift_send
   371  0070                     ?_shift_send:	; 0 bytes @ 0x0
   372                           	global	?_set_it_faster
   373  0070                     ?_set_it_faster:	; 0 bytes @ 0x0
   374                           	global	?_what_time_is_now
   375  0070                     ?_what_time_is_now:	; 0 bytes @ 0x0
   376                           	global	?_next_segment
   377  0070                     ?_next_segment:	; 0 bytes @ 0x0
   378                           	global	?_next_minute
   379  0070                     ?_next_minute:	; 0 bytes @ 0x0
   380                           	global	?_sync
   381  0070                     ?_sync:	; 0 bytes @ 0x0
   382                           	global	?_application_reset
   383  0070                     ?_application_reset:	; 0 bytes @ 0x0
   384                           	global	?_init_normal
   385  0070                     ?_init_normal:	; 0 bytes @ 0x0
   386                           	global	?_init_setup
   387  0070                     ?_init_setup:	; 0 bytes @ 0x0
   388                           	global	?_init
   389  0070                     ?_init:	; 0 bytes @ 0x0
   390                           	global	?_interrupt_handler
   391  0070                     ?_interrupt_handler:	; 0 bytes @ 0x0
   392                           	global	??_interrupt_handler
   393  0070                     ??_interrupt_handler:	; 0 bytes @ 0x0
   394                           	global	?_main
   395  0070                     ?_main:	; 0 bytes @ 0x0
   396                           	global	?_i2c_write_bit
   397  0070                     ?_i2c_write_bit:	; 0 bytes @ 0x0
   398                           	global	?_rtc_setup
   399  0070                     ?_rtc_setup:	; 1 bytes @ 0x0
   400                           	global	?_wait_for_event
   401  0070                     ?_wait_for_event:	; 1 bytes @ 0x0
   402                           	global	?_i2c_read_bit
   403  0070                     ?_i2c_read_bit:	; 1 bytes @ 0x0
   404                           	global	?_i2c_check_ack
   405  0070                     ?_i2c_check_ack:	; 1 bytes @ 0x0
   406                           	global	?_i2c_write_byte
   407  0070                     ?_i2c_write_byte:	; 1 bytes @ 0x0
   408                           	global	?_i2c_read_byte
   409  0070                     ?_i2c_read_byte:	; 1 bytes @ 0x0
   410  0070                     	ds	4
   411                           	global	??_bit_on
   412  0074                     ??_bit_on:	; 0 bytes @ 0x4
   413                           	global	??_bit_off
   414  0074                     ??_bit_off:	; 0 bytes @ 0x4
   415                           	global	??_set_it_faster
   416  0074                     ??_set_it_faster:	; 0 bytes @ 0x4
   417                           	global	??_next_minute
   418  0074                     ??_next_minute:	; 0 bytes @ 0x4
   419                           	global	??_init_setup
   420  0074                     ??_init_setup:	; 0 bytes @ 0x4
   421                           	global	??_wait_for_event
   422  0074                     ??_wait_for_event:	; 0 bytes @ 0x4
   423                           	global	??_i2c_write_bit
   424  0074                     ??_i2c_write_bit:	; 0 bytes @ 0x4
   425                           	global	??_i2c_read_bit
   426  0074                     ??_i2c_read_bit:	; 0 bytes @ 0x4
   427                           	global	??_i2c_check_ack
   428  0074                     ??_i2c_check_ack:	; 0 bytes @ 0x4
   429                           	global	?___bmul
   430  0074                     ?___bmul:	; 1 bytes @ 0x4
   431                           	global	set_it_faster@how_much
   432  0074                     set_it_faster@how_much:	; 1 bytes @ 0x4
   433                           	global	___bmul@multiplicand
   434  0074                     ___bmul@multiplicand:	; 1 bytes @ 0x4
   435  0074                     	ds	1
   436                           	global	??___bmul
   437  0075                     ??___bmul:	; 0 bytes @ 0x5
   438                           	global	bit_on@bt
   439  0075                     bit_on@bt:	; 1 bytes @ 0x5
   440                           	global	bit_off@bt
   441  0075                     bit_off@bt:	; 1 bytes @ 0x5
   442                           	global	wait_for_event@rv
   443  0075                     wait_for_event@rv:	; 1 bytes @ 0x5
   444                           	global	i2c_write_bit@x
   445  0075                     i2c_write_bit@x:	; 1 bytes @ 0x5
   446                           	global	i2c_read_bit@b
   447  0075                     i2c_read_bit@b:	; 1 bytes @ 0x5
   448                           	global	i2c_check_ack@tmp
   449  0075                     i2c_check_ack@tmp:	; 1 bytes @ 0x5
   450  0075                     	ds	1
   451                           	global	??_shift_write
   452  0076                     ??_shift_write:	; 0 bytes @ 0x6
   453                           	global	??_shift_show
   454  0076                     ??_shift_show:	; 0 bytes @ 0x6
   455                           	global	??_i2c_write_byte
   456  0076                     ??_i2c_write_byte:	; 0 bytes @ 0x6
   457                           	global	??_i2c_read_byte
   458  0076                     ??_i2c_read_byte:	; 0 bytes @ 0x6
   459                           	global	wait_for_event@_i
   460  0076                     wait_for_event@_i:	; 1 bytes @ 0x6
   461                           	global	___bmul@product
   462  0076                     ___bmul@product:	; 1 bytes @ 0x6
   463  0076                     	ds	1
   464                           	global	??_i2c_write
   465  0077                     ??_i2c_write:	; 0 bytes @ 0x7
   466                           	global	___bmul@multiplier
   467  0077                     ___bmul@multiplier:	; 1 bytes @ 0x7
   468  0077                     	ds	1
   469                           	global	??_shift_send
   470  0078                     ??_shift_send:	; 0 bytes @ 0x8
   471                           	global	??_application_reset
   472  0078                     ??_application_reset:	; 0 bytes @ 0x8
   473                           	global	??_init_normal
   474  0078                     ??_init_normal:	; 0 bytes @ 0x8
   475                           	global	??_init
   476  0078                     ??_init:	; 0 bytes @ 0x8
   477                           psect	cstackBANK0,class=BANK0,space=1
   478                           global __pcstackBANK0
   479  0020                     __pcstackBANK0:
   480                           	global	shift_write@data
   481  0020                     shift_write@data:	; 1 bytes @ 0x0
   482                           	global	i2c_write_byte@byte
   483  0020                     i2c_write_byte@byte:	; 1 bytes @ 0x0
   484                           	global	i2c_read_byte@i
   485  0020                     i2c_read_byte@i:	; 1 bytes @ 0x0
   486  0020                     	ds	1
   487                           	global	i2c_write_byte@i
   488  0021                     i2c_write_byte@i:	; 1 bytes @ 0x1
   489                           	global	i2c_read_byte@data
   490  0021                     i2c_read_byte@data:	; 1 bytes @ 0x1
   491                           	global	shift_write@i
   492  0021                     shift_write@i:	; 2 bytes @ 0x1
   493  0021                     	ds	1
   494                           	global	?_i2c_read
   495  0022                     ?_i2c_read:	; 1 bytes @ 0x2
   496                           	global	?_i2c_write
   497  0022                     ?_i2c_write:	; 1 bytes @ 0x2
   498                           	global	i2c_write@addr
   499  0022                     i2c_write@addr:	; 1 bytes @ 0x2
   500                           	global	i2c_read@addr
   501  0022                     i2c_read@addr:	; 1 bytes @ 0x2
   502  0022                     	ds	1
   503                           	global	shift_send@data
   504  0023                     shift_send@data:	; 1 bytes @ 0x3
   505                           	global	i2c_write@data
   506  0023                     i2c_write@data:	; 1 bytes @ 0x3
   507                           	global	i2c_read@data
   508  0023                     i2c_read@data:	; 1 bytes @ 0x3
   509  0023                     	ds	1
   510                           	global	??_i2c_read
   511  0024                     ??_i2c_read:	; 0 bytes @ 0x4
   512                           	global	??_next_segment
   513  0024                     ??_next_segment:	; 0 bytes @ 0x4
   514                           	global	i2c_write@dev
   515  0024                     i2c_write@dev:	; 1 bytes @ 0x4
   516  0024                     	ds	1
   517                           	global	??_rtc_setup
   518  0025                     ??_rtc_setup:	; 0 bytes @ 0x5
   519                           	global	next_segment@data
   520  0025                     next_segment@data:	; 1 bytes @ 0x5
   521                           	global	i2c_read@d
   522  0025                     i2c_read@d:	; 1 bytes @ 0x5
   523  0025                     	ds	1
   524                           	global	i2c_read@dev
   525  0026                     i2c_read@dev:	; 1 bytes @ 0x6
   526  0026                     	ds	1
   527                           	global	??_what_time_is_now
   528  0027                     ??_what_time_is_now:	; 0 bytes @ 0x7
   529  0027                     	ds	2
   530                           	global	rtc_setup@table
   531  0029                     rtc_setup@table:	; 20 bytes @ 0x9
   532  0029                     	ds	1
   533                           	global	what_time_is_now@rv
   534  002A                     what_time_is_now@rv:	; 1 bytes @ 0xA
   535  002A                     	ds	1
   536                           	global	what_time_is_now@data
   537  002B                     what_time_is_now@data:	; 1 bytes @ 0xB
   538  002B                     	ds	1
   539                           	global	??_sync
   540  002C                     ??_sync:	; 0 bytes @ 0xC
   541  002C                     	ds	17
   542                           	global	rtc_setup@rv
   543  003D                     rtc_setup@rv:	; 1 bytes @ 0x1D
   544  003D                     	ds	1
   545                           	global	rtc_setup@i
   546  003E                     rtc_setup@i:	; 1 bytes @ 0x1E
   547  003E                     	ds	1
   548                           	global	??_main
   549  003F                     ??_main:	; 0 bytes @ 0x1F
   550  003F                     	ds	2
   551                           	global	main@i
   552  0041                     main@i:	; 1 bytes @ 0x21
   553  0041                     	ds	1
   554                           	global	main@ev
   555  0042                     main@ev:	; 1 bytes @ 0x22
   556  0042                     	ds	1
   557                           	global	main@addr
   558  0043                     main@addr:	; 1 bytes @ 0x23
   559  0043                     	ds	1
   560                           	global	main@tmp
   561  0044                     main@tmp:	; 1 bytes @ 0x24
   562  0044                     	ds	1
   563                           	global	main@which
   564  0045                     main@which:	; 1 bytes @ 0x25
   565  0045                     	ds	1
   566 ;;Data sizes: Strings 0, constant 0, data 20, bss 13, persistent 0 stack 0
   567 ;;Auto spaces:   Size  Autos    Used
   568 ;; COMMON          14      8      10
   569 ;; BANK0           80     38      70
   570 ;; BANK1           80      0       0
   571 ;; BANK2           80      0       0
   572                           
   573 ;;
   574 ;; Pointer list with targets:
   575                           
   576 ;; i2c_read@data	PTR unsigned char  size(1) Largest target is 1
   577 ;;		 -> test_rtc@data(COMMON[1]), what_time_is_now@data(BANK0[1]), 
   578 ;;
   579                           
   580                           
   581 ;;
   582 ;; Critical Paths under _main in COMMON
   583 ;;
   584 ;;   _main->_i2c_write
   585 ;;   _rtc_setup->_i2c_write
   586 ;;   _what_time_is_now->___bmul
   587 ;;   _i2c_write->_i2c_write_byte
   588 ;;   _i2c_read->_i2c_read_byte
   589 ;;   _shift_send->_shift_write
   590 ;;   _i2c_read_byte->_i2c_read_bit
   591 ;;   _i2c_read_byte->_i2c_write_bit
   592 ;;   _i2c_write_byte->_i2c_write_bit
   593 ;;   _i2c_write_byte->_i2c_check_ack
   594 ;;   _shift_show->_bit_on
   595 ;;   _shift_show->_bit_off
   596 ;;   _shift_write->_bit_off
   597 ;;   _shift_write->_bit_on
   598 ;;
   599 ;; Critical Paths under _interrupt_handler in COMMON
   600 ;;
   601 ;;   None.
   602 ;;
   603 ;; Critical Paths under _main in BANK0
   604 ;;
   605 ;;   _init_normal->_rtc_setup
   606 ;;   _application_reset->_what_time_is_now
   607 ;;   _sync->_what_time_is_now
   608 ;;   _rtc_setup->_i2c_write
   609 ;;   _next_segment->_shift_send
   610 ;;   _what_time_is_now->_i2c_read
   611 ;;   _i2c_write->_i2c_write_byte
   612 ;;   _i2c_read->_i2c_write_byte
   613 ;;   _i2c_read->_i2c_read_byte
   614 ;;   _shift_send->_shift_write
   615 ;;
   616 ;; Critical Paths under _interrupt_handler in BANK0
   617 ;;
   618 ;;   None.
   619 ;;
   620 ;; Critical Paths under _main in BANK1
   621 ;;
   622 ;;   None.
   623 ;;
   624 ;; Critical Paths under _interrupt_handler in BANK1
   625 ;;
   626 ;;   None.
   627 ;;
   628 ;; Critical Paths under _main in BANK2
   629 ;;
   630 ;;   None.
   631 ;;
   632 ;; Critical Paths under _interrupt_handler in BANK2
   633 ;;
   634 ;;   None.
   635                           
   636 ;;
   637 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   638 ;;
   639                           
   640 ;;
   641 ;;Call Graph Tables:
   642 ;;
   643 ;; ---------------------------------------------------------------------------------
   644 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   645 ;; ---------------------------------------------------------------------------------
   646 ;; (0) _main                                                 7     7      0    6679
   647 ;;                                             31 BANK0      7     7      0
   648 ;;                               _init
   649 ;;                  _application_reset
   650 ;;                             _bit_on
   651 ;;                               _sync
   652 ;;                       _next_segment
   653 ;;                        _next_minute
   654 ;;                            _bit_off
   655 ;;                         _shift_send
   656 ;;                     _wait_for_event
   657 ;;                          _i2c_write
   658 ;; ---------------------------------------------------------------------------------
   659 ;; (1) _init                                                 0     0      0    2089
   660 ;;                      _set_it_faster
   661 ;;                         _init_setup
   662 ;;                        _init_normal
   663 ;; ---------------------------------------------------------------------------------
   664 ;; (2) _init_normal                                          0     0      0    2067
   665 ;;                          _rtc_setup
   666 ;;                   _what_time_is_now
   667 ;;                      _set_it_faster
   668 ;;                             _bit_on
   669 ;;                         _shift_send
   670 ;; ---------------------------------------------------------------------------------
   671 ;; (1) _application_reset                                    0     0      0    1482
   672 ;;                         _shift_send
   673 ;;                   _what_time_is_now
   674 ;; ---------------------------------------------------------------------------------
   675 ;; (1) _sync                                                 3     3      0    1525
   676 ;;                                             12 BANK0      3     3      0
   677 ;;                   _what_time_is_now
   678 ;;                       _next_segment
   679 ;; ---------------------------------------------------------------------------------
   680 ;; (3) _rtc_setup                                           26    26      0     532
   681 ;;                                              5 BANK0     26    26      0
   682 ;;                          _i2c_write
   683 ;; ---------------------------------------------------------------------------------
   684 ;; (1) _next_segment                                         2     2      0     331
   685 ;;                                              4 BANK0      2     2      0
   686 ;;                         _shift_send
   687 ;; ---------------------------------------------------------------------------------
   688 ;; (2) _what_time_is_now                                     5     5      0    1194
   689 ;;                                              7 BANK0      5     5      0
   690 ;;                      _set_it_faster
   691 ;;                           _i2c_read
   692 ;;                             ___bmul
   693 ;;                         _shift_send
   694 ;;                             _bit_on
   695 ;; ---------------------------------------------------------------------------------
   696 ;; (1) _i2c_write                                            4     2      2     294
   697 ;;                                              7 COMMON     1     1      0
   698 ;;                                              2 BANK0      3     1      2
   699 ;;                     _i2c_write_byte
   700 ;; ---------------------------------------------------------------------------------
   701 ;; (3) _i2c_read                                             5     3      2     563
   702 ;;                                              2 BANK0      5     3      2
   703 ;;                     _i2c_write_byte
   704 ;;                      _i2c_read_byte
   705 ;; ---------------------------------------------------------------------------------
   706 ;; (1) _shift_send                                           1     1      0     288
   707 ;;                                              3 BANK0      1     1      0
   708 ;;                        _shift_write
   709 ;;                         _shift_show
   710 ;; ---------------------------------------------------------------------------------
   711 ;; (4) _i2c_read_byte                                        4     4      0     207
   712 ;;                                              6 COMMON     2     2      0
   713 ;;                                              0 BANK0      2     2      0
   714 ;;                       _i2c_read_bit
   715 ;;                      _i2c_write_bit
   716 ;; ---------------------------------------------------------------------------------
   717 ;; (2) _i2c_write_byte                                       3     3      0     198
   718 ;;                                              6 COMMON     1     1      0
   719 ;;                                              0 BANK0      2     2      0
   720 ;;                      _i2c_write_bit
   721 ;;                      _i2c_check_ack
   722 ;; ---------------------------------------------------------------------------------
   723 ;; (2) _shift_show                                           0     0      0      62
   724 ;;                             _bit_on
   725 ;;                            _bit_off
   726 ;; ---------------------------------------------------------------------------------
   727 ;; (2) _shift_write                                          5     5      0     195
   728 ;;                                              6 COMMON     2     2      0
   729 ;;                                              0 BANK0      3     3      0
   730 ;;                            _bit_off
   731 ;;                             _bit_on
   732 ;; ---------------------------------------------------------------------------------
   733 ;; (3) ___bmul                                               4     3      1      92
   734 ;;                                              4 COMMON     4     3      1
   735 ;; ---------------------------------------------------------------------------------
   736 ;; (3) _i2c_check_ack                                        2     2      0      34
   737 ;;                                              4 COMMON     2     2      0
   738 ;; ---------------------------------------------------------------------------------
   739 ;; (5) _i2c_read_bit                                         2     2      0      34
   740 ;;                                              4 COMMON     2     2      0
   741 ;; ---------------------------------------------------------------------------------
   742 ;; (3) _i2c_write_bit                                        2     2      0      34
   743 ;;                                              4 COMMON     2     2      0
   744 ;; ---------------------------------------------------------------------------------
   745 ;; (1) _wait_for_event                                       3     3      0      73
   746 ;;                                              4 COMMON     3     3      0
   747 ;; ---------------------------------------------------------------------------------
   748 ;; (2) _init_setup                                           0     0      0       0
   749 ;; ---------------------------------------------------------------------------------
   750 ;; (1) _next_minute                                          1     1      0       0
   751 ;;                                              4 COMMON     1     1      0
   752 ;; ---------------------------------------------------------------------------------
   753 ;; (3) _set_it_faster                                        1     1      0      22
   754 ;;                                              4 COMMON     1     1      0
   755 ;; ---------------------------------------------------------------------------------
   756 ;; (3) _bit_off                                              2     2      0      31
   757 ;;                                              4 COMMON     2     2      0
   758 ;; ---------------------------------------------------------------------------------
   759 ;; (3) _bit_on                                               2     2      0      31
   760 ;;                                              4 COMMON     2     2      0
   761 ;; ---------------------------------------------------------------------------------
   762 ;; Estimated maximum stack depth 5
   763 ;; ---------------------------------------------------------------------------------
   764 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   765 ;; ---------------------------------------------------------------------------------
   766 ;; (7) _interrupt_handler                                    4     4      0       0
   767 ;;                                              0 COMMON     4     4      0
   768 ;; ---------------------------------------------------------------------------------
   769 ;; Estimated maximum stack depth 7
   770 ;; ---------------------------------------------------------------------------------
   771                           
   772 ;; Call Graph Graphs:
   773                           
   774 ;; _main (ROOT)
   775 ;;   _init
   776 ;;     _set_it_faster
   777 ;;     _init_setup
   778 ;;     _init_normal
   779 ;;       _rtc_setup
   780 ;;         _i2c_write
   781 ;;           _i2c_write_byte
   782 ;;             _i2c_write_bit
   783 ;;             _i2c_check_ack
   784 ;;       _what_time_is_now
   785 ;;         _set_it_faster
   786 ;;         _i2c_read
   787 ;;           _i2c_write_byte
   788 ;;             _i2c_write_bit
   789 ;;             _i2c_check_ack
   790 ;;           _i2c_read_byte
   791 ;;             _i2c_read_bit
   792 ;;             _i2c_write_bit
   793 ;;         ___bmul
   794 ;;         _shift_send
   795 ;;           _shift_write
   796 ;;             _bit_off
   797 ;;             _bit_on
   798 ;;           _shift_show
   799 ;;             _bit_on
   800 ;;             _bit_off
   801 ;;         _bit_on
   802 ;;       _set_it_faster
   803 ;;       _bit_on
   804 ;;       _shift_send
   805 ;;         _shift_write
   806 ;;           _bit_off
   807 ;;           _bit_on
   808 ;;         _shift_show
   809 ;;           _bit_on
   810 ;;           _bit_off
   811 ;;   _application_reset
   812 ;;     _shift_send
   813 ;;       _shift_write
   814 ;;         _bit_off
   815 ;;         _bit_on
   816 ;;       _shift_show
   817 ;;         _bit_on
   818 ;;         _bit_off
   819 ;;     _what_time_is_now
   820 ;;       _set_it_faster
   821 ;;       _i2c_read
   822 ;;         _i2c_write_byte
   823 ;;           _i2c_write_bit
   824 ;;           _i2c_check_ack
   825 ;;         _i2c_read_byte
   826 ;;           _i2c_read_bit
   827 ;;           _i2c_write_bit
   828 ;;       ___bmul
   829 ;;       _shift_send
   830 ;;         _shift_write
   831 ;;           _bit_off
   832 ;;           _bit_on
   833 ;;         _shift_show
   834 ;;           _bit_on
   835 ;;           _bit_off
   836 ;;       _bit_on
   837 ;;   _bit_on
   838 ;;   _sync
   839 ;;     _what_time_is_now
   840 ;;       _set_it_faster
   841 ;;       _i2c_read
   842 ;;         _i2c_write_byte
   843 ;;           _i2c_write_bit
   844 ;;           _i2c_check_ack
   845 ;;         _i2c_read_byte
   846 ;;           _i2c_read_bit
   847 ;;           _i2c_write_bit
   848 ;;       ___bmul
   849 ;;       _shift_send
   850 ;;         _shift_write
   851 ;;           _bit_off
   852 ;;           _bit_on
   853 ;;         _shift_show
   854 ;;           _bit_on
   855 ;;           _bit_off
   856 ;;       _bit_on
   857 ;;     _next_segment
   858 ;;       _shift_send
   859 ;;         _shift_write
   860 ;;           _bit_off
   861 ;;           _bit_on
   862 ;;         _shift_show
   863 ;;           _bit_on
   864 ;;           _bit_off
   865 ;;   _next_segment
   866 ;;     _shift_send
   867 ;;       _shift_write
   868 ;;         _bit_off
   869 ;;         _bit_on
   870 ;;       _shift_show
   871 ;;         _bit_on
   872 ;;         _bit_off
   873 ;;   _next_minute
   874 ;;   _bit_off
   875 ;;   _shift_send
   876 ;;     _shift_write
   877 ;;       _bit_off
   878 ;;       _bit_on
   879 ;;     _shift_show
   880 ;;       _bit_on
   881 ;;       _bit_off
   882 ;;   _wait_for_event
   883 ;;   _i2c_write
   884 ;;     _i2c_write_byte
   885 ;;       _i2c_write_bit
   886 ;;       _i2c_check_ack
   887 ;;
   888 ;; _interrupt_handler (ROOT)
   889 ;;
   890                           
   891 ;; Address spaces:
   892                           
   893 ;;Name               Size   Autos  Total    Cost      Usage
   894 ;;SFR3                 0      0       0       4        0.0%
   895 ;;BITSFR3              0      0       0       4        0.0%
   896 ;;BANK2               50      0       0       7        0.0%
   897 ;;BITBANK2            50      0       0       6        0.0%
   898 ;;SFR2                 0      0       0       5        0.0%
   899 ;;BITSFR2              0      0       0       5        0.0%
   900 ;;SFR1                 0      0       0       2        0.0%
   901 ;;BITSFR1              0      0       0       2        0.0%
   902 ;;BANK1               50      0       0       5        0.0%
   903 ;;BITBANK1            50      0       0       4        0.0%
   904 ;;CODE                 0      0       0       0        0.0%
   905 ;;DATA                 0      0      56      10        0.0%
   906 ;;ABS                  0      0      50       8        0.0%
   907 ;;NULL                 0      0       0       0        0.0%
   908 ;;STACK                0      0       6       2        0.0%
   909 ;;BANK0               50     26      46       3       87.5%
   910 ;;BITBANK0            50      0       0       9        0.0%
   911 ;;SFR0                 0      0       0       1        0.0%
   912 ;;BITSFR0              0      0       0       1        0.0%
   913 ;;COMMON               E      8       A       1       71.4%
   914 ;;BITCOMMON            E      0       1       0        7.1%
   915 ;;EEDATA             100      0       0       0        0.0%
   916                           
   917                           	global	_main
   918                           psect	maintext,global,class=CODE,delta=2
   919                           global __pmaintext
   920  0011                     __pmaintext:
   921                           
   922 ;; *************** function _main *****************
   923 ;; Defined at:
   924 ;;		line 624 in file "main.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  which           1   37[BANK0 ] unsigned char 
   929 ;;  tmp             1   36[BANK0 ] unsigned char 
   930 ;;  addr            1   35[BANK0 ] unsigned char 
   931 ;;  ev              1   34[BANK0 ] unsigned char 
   932 ;;  i               1   33[BANK0 ] unsigned char 
   933 ;; Return value:  Size  Location     Type
   934 ;;		None               void
   935 ;; Registers used:
   936 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   937 ;; Tracked objects:
   938 ;;		On entry : 17F/0
   939 ;;		On exit  : 0/0
   940 ;;		Unchanged: 0/0
   941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   942 ;;      Params:         0       0       0       0
   943 ;;      Locals:         0       5       0       0
   944 ;;      Temps:          0       2       0       0
   945 ;;      Totals:         0       7       0       0
   946 ;;Total ram usage:        7 bytes
   947 ;; Hardware stack levels required when called:    7
   948 ;; This function calls:
   949 ;;		_init
   950 ;;		_application_reset
   951 ;;		_bit_on
   952 ;;		_sync
   953 ;;		_next_segment
   954 ;;		_next_minute
   955 ;;		_bit_off
   956 ;;		_shift_send
   957 ;;		_wait_for_event
   958 ;;		_i2c_write
   959 ;; This function is called by:
   960 ;;		Startup code after reset
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           psect	maintext
   964                           	file	"main.c"
   965                           	line	624
   966                           	global	__size_of_main
   967  0126                     	__size_of_main	equ	__end_of_main-_main
   968                           	
   969  0011                     _main:	
   970                           	opt	stack 1
   971                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   972                           	line	625
   973                           ;main.c: 625: main_label:
   974                           	
   975  0011                     l624:	
   976                           	line	626
   977                           	
   978  0011                     l4707:	
   979                           ;main.c: 626: init();
   980  0011  25C0               	fcall	_init
   981                           	line	629
   982                           	
   983  0012                     l4709:	
   984                           ;main.c: 629: uns8 i = 0;
   985  0012  1283               	bcf	status, 5	;RP0=0, select bank0
   986  0013  1303               	bcf	status, 6	;RP1=0, select bank0
   987  0014  01C1               	clrf	(main@i)
   988                           	line	631
   989                           	
   990  0015                     l4711:	
   991                           ;main.c: 631: if (mode == 0) {
   992  0015  08DD               	movf	(_mode),f
   993  0016  1D03               	skipz
   994  0017  2819               	goto	u4711
   995  0018  281A               	goto	u4710
   996  0019                     u4711:
   997  0019  2886               	goto	l4761
   998  001A                     u4710:
   999                           	line	633
  1000                           	
  1001  001A                     l4713:	
  1002                           ;main.c: 633: application_reset();
  1003  001A  25DB               	fcall	_application_reset
  1004                           	line	634
  1005                           	
  1006  001B                     l4715:	
  1007                           ;main.c: 634: bit_on(0x02);
  1008  001B  3002               	movlw	(02h)
  1009  001C  2641               	fcall	_bit_on
  1010  001D  281E               	goto	l4717
  1011                           	line	635
  1012                           ;main.c: 635: while(1) {
  1013                           	
  1014  001E                     l626:	
  1015                           	line	637
  1016                           	
  1017  001E                     l4717:	
  1018                           ;main.c: 637: if (need_sync == 1) {
  1019  001E  1DF8               	btfss	(_need_sync/8),(_need_sync)&7
  1020  001F  2821               	goto	u4721
  1021  0020  2822               	goto	u4720
  1022  0021                     u4721:
  1023  0021  2825               	goto	l4723
  1024  0022                     u4720:
  1025                           	line	638
  1026                           	
  1027  0022                     l4719:	
  1028                           ;main.c: 638: need_sync = 0;
  1029  0022  11F8               	bcf	(_need_sync/8),(_need_sync)&7
  1030                           	line	640
  1031                           	
  1032  0023                     l4721:	
  1033                           ;main.c: 640: sync();
  1034  0023  222F               	fcall	_sync
  1035  0024  2825               	goto	l4723
  1036                           	line	642
  1037                           	
  1038  0025                     l627:	
  1039                           	line	646
  1040                           	
  1041  0025                     l4723:	
  1042                           ;main.c: 642: }
  1043                           ;main.c: 646: if (TMR0IF) {
  1044  0025  1D0B               	btfss	(90/8),(90)&7
  1045  0026  2828               	goto	u4731
  1046  0027  2829               	goto	u4730
  1047  0028                     u4731:
  1048  0028  2848               	goto	l4739
  1049  0029                     u4730:
  1050                           	line	647
  1051                           	
  1052  0029                     l4725:	
  1053                           ;main.c: 647: if (state == 2) {
  1054  0029  1283               	bcf	status, 5	;RP0=0, select bank0
  1055  002A  1303               	bcf	status, 6	;RP1=0, select bank0
  1056  002B  0860               	movf	(_state),w
  1057  002C  3A02               	xorlw	02h
  1058  002D  1D03               	skipz
  1059  002E  2830               	goto	u4741
  1060  002F  2831               	goto	u4740
  1061  0030                     u4741:
  1062  0030  2846               	goto	l4737
  1063  0031                     u4740:
  1064                           	line	649
  1065                           	
  1066  0031                     l4727:	
  1067                           ;main.c: 649: if (tmr0_counter == seg_ticks_h) {
  1068  0031  0861               	movf	(_tmr0_counter),w
  1069  0032  065E               	xorwf	(_seg_ticks_h),w
  1070  0033  1D03               	skipz
  1071  0034  2836               	goto	u4751
  1072  0035  2837               	goto	u4750
  1073  0036                     u4751:
  1074  0036  283E               	goto	l4735
  1075  0037                     u4750:
  1076                           	line	650
  1077                           	
  1078  0037                     l4729:	
  1079                           ;main.c: 650: tmr0_counter = 0;
  1080  0037  01E1               	clrf	(_tmr0_counter)
  1081                           	line	651
  1082                           	
  1083  0038                     l4731:	
  1084                           ;main.c: 651: TMR0 = TMR0 - seg_ticks_l;
  1085  0038  035F               	decf	(_seg_ticks_l),w
  1086  0039  3AFF               	xorlw	0ffh
  1087  003A  0701               	addwf	(1),w	;volatile
  1088  003B  0081               	movwf	(1)	;volatile
  1089                           	line	652
  1090                           	
  1091  003C                     l4733:	
  1092                           ;main.c: 652: next_segment();
  1093  003C  229A               	fcall	_next_segment
  1094                           	line	653
  1095                           ;main.c: 653: } else {
  1096  003D  2846               	goto	l4737
  1097                           	
  1098  003E                     l630:	
  1099                           	line	654
  1100                           	
  1101  003E                     l4735:	
  1102                           ;main.c: 654: tmr0_counter++;
  1103  003E  3001               	movlw	(01h)
  1104  003F  1283               	bcf	status, 5	;RP0=0, select bank0
  1105  0040  1303               	bcf	status, 6	;RP1=0, select bank0
  1106  0041  00BF               	movwf	(??_main+0)+0
  1107  0042  083F               	movf	(??_main+0)+0,w
  1108  0043  07E1               	addwf	(_tmr0_counter),f
  1109  0044  2846               	goto	l4737
  1110                           	line	655
  1111                           	
  1112  0045                     l631:	
  1113  0045  2846               	goto	l4737
  1114                           	line	656
  1115                           	
  1116  0046                     l629:	
  1117                           	line	657
  1118                           	
  1119  0046                     l4737:	
  1120                           ;main.c: 655: }
  1121                           ;main.c: 656: }
  1122                           ;main.c: 657: TMR0IF = 0;
  1123  0046  110B               	bcf	(90/8),(90)&7
  1124  0047  2848               	goto	l4739
  1125                           	line	658
  1126                           	
  1127  0048                     l628:	
  1128                           	line	662
  1129                           	
  1130  0048                     l4739:	
  1131                           ;main.c: 658: }
  1132                           ;main.c: 662: if (TMR1IF) {
  1133  0048  1283               	bcf	status, 5	;RP0=0, select bank0
  1134  0049  1303               	bcf	status, 6	;RP1=0, select bank0
  1135  004A  1C0C               	btfss	(96/8),(96)&7
  1136  004B  284D               	goto	u4761
  1137  004C  284E               	goto	u4760
  1138  004D                     u4761:
  1139  004D  2864               	goto	l4753
  1140  004E                     u4760:
  1141                           	line	663
  1142                           	
  1143  004E                     l4741:	
  1144                           ;main.c: 663: tmr1_counter++;
  1145  004E  3001               	movlw	(01h)
  1146  004F  00BF               	movwf	(??_main+0)+0
  1147  0050  083F               	movf	(??_main+0)+0,w
  1148  0051  07E2               	addwf	(_tmr1_counter),f
  1149                           	line	666
  1150                           	
  1151  0052                     l4743:	
  1152                           ;main.c: 666: if (tmr1_counter >= 40) {
  1153  0052  3028               	movlw	(028h)
  1154  0053  0262               	subwf	(_tmr1_counter),w
  1155  0054  1C03               	skipc
  1156  0055  2857               	goto	u4771
  1157  0056  2858               	goto	u4770
  1158  0057                     u4771:
  1159  0057  2860               	goto	l4751
  1160  0058                     u4770:
  1161                           	line	667
  1162                           	
  1163  0058                     l4745:	
  1164                           ;main.c: 667: tmr1_counter = 0;
  1165  0058  01E2               	clrf	(_tmr1_counter)
  1166                           	line	668
  1167                           	
  1168  0059                     l4747:	
  1169                           ;main.c: 668: if (state != 0)
  1170  0059  0860               	movf	(_state),w
  1171  005A  1D03               	skipz
  1172  005B  285D               	goto	u4780
  1173  005C  2860               	goto	l4751
  1174  005D                     u4780:
  1175                           	line	669
  1176                           	
  1177  005D                     l4749:	
  1178                           ;main.c: 669: application_reset();
  1179  005D  25DB               	fcall	_application_reset
  1180  005E  2860               	goto	l4751
  1181                           	
  1182  005F                     l634:	
  1183  005F  2860               	goto	l4751
  1184                           	line	670
  1185                           	
  1186  0060                     l633:	
  1187                           	line	671
  1188                           	
  1189  0060                     l4751:	
  1190                           ;main.c: 670: }
  1191                           ;main.c: 671: TMR1IF = 0;
  1192  0060  1283               	bcf	status, 5	;RP0=0, select bank0
  1193  0061  1303               	bcf	status, 6	;RP1=0, select bank0
  1194  0062  100C               	bcf	(96/8),(96)&7
  1195  0063  2864               	goto	l4753
  1196                           	line	672
  1197                           	
  1198  0064                     l632:	
  1199                           	line	676
  1200                           	
  1201  0064                     l4753:	
  1202                           ;main.c: 672: }
  1203                           ;main.c: 676: if (last_clk != RB3) {
  1204  0064  1986               	btfsc	(51/8),(51)&7
  1205  0065  2867               	goto	u4791
  1206  0066  2869               	goto	u4790
  1207  0067                     u4791:
  1208  0067  3001               	movlw	1
  1209  0068  286A               	goto	u4792
  1210  0069                     u4790:
  1211  0069  3000               	movlw	0
  1212  006A                     u4792:
  1213  006A  00BF               	movwf	(??_main+0)+0
  1214  006B  1978               	btfsc	(_last_clk/8),(_last_clk)&7
  1215  006C  286E               	goto	u4801
  1216  006D  2870               	goto	u4800
  1217  006E                     u4801:
  1218  006E  3001               	movlw	1
  1219  006F  2871               	goto	u4802
  1220  0070                     u4800:
  1221  0070  3000               	movlw	0
  1222  0071                     u4802:
  1223  0071  063F               	xorwf	(??_main+0)+0,w
  1224  0072  1903               	skipnz
  1225  0073  2875               	goto	u4811
  1226  0074  2876               	goto	u4810
  1227  0075                     u4811:
  1228  0075  281E               	goto	l4717
  1229  0076                     u4810:
  1230                           	line	677
  1231                           	
  1232  0076                     l4755:	
  1233                           ;main.c: 677: if (last_clk == 0)
  1234  0076  1978               	btfsc	(_last_clk/8),(_last_clk)&7
  1235  0077  2879               	goto	u4821
  1236  0078  287A               	goto	u4820
  1237  0079                     u4821:
  1238  0079  287C               	goto	l4759
  1239  007A                     u4820:
  1240                           	line	678
  1241                           	
  1242  007A                     l4757:	
  1243                           ;main.c: 678: next_minute();
  1244  007A  259E               	fcall	_next_minute
  1245  007B  287C               	goto	l4759
  1246                           	
  1247  007C                     l636:	
  1248                           	line	679
  1249                           	
  1250  007C                     l4759:	
  1251                           ;main.c: 679: last_clk = RB3;
  1252  007C  1178               	bcf	(_last_clk/8),(_last_clk)&7
  1253  007D  1283               	bcf	status, 5	;RP0=0, select bank0
  1254  007E  1303               	bcf	status, 6	;RP1=0, select bank0
  1255  007F  1D86               	btfss	(51/8),(51)&7
  1256  0080  2882               	goto	u4835
  1257  0081  1578               	bsf	(_last_clk/8),(_last_clk)&7
  1258  0082                     u4835:
  1259                           
  1260  0082  281E               	goto	l4717
  1261                           	line	680
  1262                           	
  1263  0083                     l635:	
  1264  0083  281E               	goto	l4717
  1265                           	line	681
  1266                           	
  1267  0084                     l637:	
  1268                           	line	635
  1269  0084  281E               	goto	l4717
  1270                           	
  1271  0085                     l638:	
  1272  0085  2886               	goto	l4761
  1273                           	line	682
  1274                           	
  1275  0086                     l625:	
  1276                           	line	685
  1277                           	
  1278  0086                     l4761:	
  1279                           ;main.c: 680: }
  1280                           ;main.c: 681: }
  1281                           ;main.c: 682: }
  1282                           ;main.c: 685: if (mode == 1) {
  1283  0086  1283               	bcf	status, 5	;RP0=0, select bank0
  1284  0087  1303               	bcf	status, 6	;RP1=0, select bank0
  1285  0088  085D               	movf	(_mode),w
  1286  0089  3A01               	xorlw	01h
  1287  008A  1D03               	skipz
  1288  008B  288D               	goto	u4841
  1289  008C  288E               	goto	u4840
  1290  008D                     u4841:
  1291  008D  2936               	goto	l665
  1292  008E                     u4840:
  1293                           	line	687
  1294                           	
  1295  008E                     l4763:	
  1296                           ;main.c: 686: uns8 ev;
  1297                           ;main.c: 687: uns8 tmp = 0;
  1298  008E  01C4               	clrf	(main@tmp)
  1299                           	line	688
  1300                           ;main.c: 688: uns8 which = 0;
  1301  008F  01C5               	clrf	(main@which)
  1302                           	line	691
  1303                           	
  1304  0090                     l4765:	
  1305                           ;main.c: 689: uns8 addr;
  1306                           ;main.c: 691: bit_on(0x02);
  1307  0090  3002               	movlw	(02h)
  1308  0091  2641               	fcall	_bit_on
  1309                           	line	693
  1310                           ;main.c: 693: while (RB5 == 0)
  1311  0092  2893               	goto	l640
  1312                           	
  1313  0093                     l641:	
  1314                           	line	694
  1315                           ;main.c: 694: ;
  1316                           	
  1317  0093                     l640:	
  1318                           	line	693
  1319  0093  1283               	bcf	status, 5	;RP0=0, select bank0
  1320  0094  1303               	bcf	status, 6	;RP1=0, select bank0
  1321  0095  1E86               	btfss	(53/8),(53)&7
  1322  0096  2898               	goto	u4851
  1323  0097  2899               	goto	u4850
  1324  0098                     u4851:
  1325  0098  2893               	goto	l640
  1326  0099                     u4850:
  1327  0099  289A               	goto	l4767
  1328                           	
  1329  009A                     l642:	
  1330                           	line	695
  1331                           	
  1332  009A                     l4767:	
  1333                           ;main.c: 695: bit_off(0x02);
  1334  009A  3002               	movlw	(02h)
  1335  009B  2637               	fcall	_bit_off
  1336                           	line	696
  1337                           	
  1338  009C                     l4769:	
  1339                           ;main.c: 696: shift_send(0x00);
  1340  009C  3000               	movlw	(0)
  1341  009D  2653               	fcall	_shift_send
  1342  009E  289F               	goto	l4771
  1343                           	line	698
  1344                           ;main.c: 698: do {
  1345                           	
  1346  009F                     l643:	
  1347                           	line	699
  1348                           	
  1349  009F                     l4771:	
  1350                           ;main.c: 699: ev = wait_for_event();
  1351  009F  21B4               	fcall	_wait_for_event
  1352  00A0  1283               	bcf	status, 5	;RP0=0, select bank0
  1353  00A1  1303               	bcf	status, 6	;RP1=0, select bank0
  1354  00A2  00BF               	movwf	(??_main+0)+0
  1355  00A3  083F               	movf	(??_main+0)+0,w
  1356  00A4  00C2               	movwf	(main@ev)
  1357                           	line	700
  1358                           ;main.c: 700: switch(ev) {
  1359  00A5  2911               	goto	l4811
  1360                           	line	701
  1361                           ;main.c: 701: case 0x10:
  1362                           	
  1363  00A6                     l645:	
  1364                           	line	702
  1365                           	
  1366  00A6                     l4773:	
  1367                           ;main.c: 702: if (which == 1 && tmp == 0)
  1368  00A6  0845               	movf	(main@which),w
  1369  00A7  3A01               	xorlw	01h
  1370  00A8  1D03               	skipz
  1371  00A9  28AB               	goto	u4861
  1372  00AA  28AC               	goto	u4860
  1373  00AB                     u4861:
  1374  00AB  28B6               	goto	l4779
  1375  00AC                     u4860:
  1376                           	
  1377  00AC                     l4775:	
  1378  00AC  08C4               	movf	(main@tmp),f
  1379  00AD  1D03               	skipz
  1380  00AE  28B0               	goto	u4871
  1381  00AF  28B1               	goto	u4870
  1382  00B0                     u4871:
  1383  00B0  28B6               	goto	l4779
  1384  00B1                     u4870:
  1385                           	line	703
  1386                           	
  1387  00B1                     l4777:	
  1388                           ;main.c: 703: tmp = 59;
  1389  00B1  303B               	movlw	(03Bh)
  1390  00B2  00BF               	movwf	(??_main+0)+0
  1391  00B3  083F               	movf	(??_main+0)+0,w
  1392  00B4  00C4               	movwf	(main@tmp)
  1393  00B5  291C               	goto	l4813
  1394                           	line	704
  1395                           	
  1396  00B6                     l646:	
  1397                           	
  1398  00B6                     l4779:	
  1399                           ;main.c: 704: else if (which == 0 && tmp == 0)
  1400  00B6  08C5               	movf	(main@which),f
  1401  00B7  1D03               	skipz
  1402  00B8  28BA               	goto	u4881
  1403  00B9  28BB               	goto	u4880
  1404  00BA                     u4881:
  1405  00BA  28C5               	goto	l4785
  1406  00BB                     u4880:
  1407                           	
  1408  00BB                     l4781:	
  1409  00BB  08C4               	movf	(main@tmp),f
  1410  00BC  1D03               	skipz
  1411  00BD  28BF               	goto	u4891
  1412  00BE  28C0               	goto	u4890
  1413  00BF                     u4891:
  1414  00BF  28C5               	goto	l4785
  1415  00C0                     u4890:
  1416                           	line	705
  1417                           	
  1418  00C0                     l4783:	
  1419                           ;main.c: 705: tmp = 11;
  1420  00C0  300B               	movlw	(0Bh)
  1421  00C1  00BF               	movwf	(??_main+0)+0
  1422  00C2  083F               	movf	(??_main+0)+0,w
  1423  00C3  00C4               	movwf	(main@tmp)
  1424  00C4  291C               	goto	l4813
  1425                           	line	706
  1426                           	
  1427  00C5                     l648:	
  1428                           	line	707
  1429                           	
  1430  00C5                     l4785:	
  1431                           ;main.c: 706: else
  1432                           ;main.c: 707: tmp--;
  1433  00C5  3001               	movlw	low(01h)
  1434  00C6  02C4               	subwf	(main@tmp),f
  1435  00C7  291C               	goto	l4813
  1436                           	
  1437  00C8                     l649:	
  1438  00C8  291C               	goto	l4813
  1439                           	
  1440  00C9                     l647:	
  1441                           	line	708
  1442                           ;main.c: 708: break;
  1443  00C9  291C               	goto	l4813
  1444                           	line	710
  1445                           ;main.c: 710: case 0x01:
  1446                           	
  1447  00CA                     l651:	
  1448                           	line	711
  1449                           	
  1450  00CA                     l4787:	
  1451                           ;main.c: 711: if ((which == 1 && tmp == 59) || (which == 0 && tmp == 11))
  1452  00CA  0845               	movf	(main@which),w
  1453  00CB  3A01               	xorlw	01h
  1454  00CC  1D03               	skipz
  1455  00CD  28CF               	goto	u4901
  1456  00CE  28D0               	goto	u4900
  1457  00CF                     u4901:
  1458  00CF  28D7               	goto	l4791
  1459  00D0                     u4900:
  1460                           	
  1461  00D0                     l4789:	
  1462  00D0  0844               	movf	(main@tmp),w
  1463  00D1  3A3B               	xorlw	03Bh
  1464  00D2  1903               	skipnz
  1465  00D3  28D5               	goto	u4911
  1466  00D4  28D6               	goto	u4910
  1467  00D5                     u4911:
  1468  00D5  28E2               	goto	l654
  1469  00D6                     u4910:
  1470  00D6  28D7               	goto	l4791
  1471                           	
  1472  00D7                     l656:	
  1473                           	
  1474  00D7                     l4791:	
  1475  00D7  08C5               	movf	(main@which),f
  1476  00D8  1D03               	skipz
  1477  00D9  28DB               	goto	u4921
  1478  00DA  28DC               	goto	u4920
  1479  00DB                     u4921:
  1480  00DB  28E4               	goto	l4795
  1481  00DC                     u4920:
  1482                           	
  1483  00DC                     l4793:	
  1484  00DC  0844               	movf	(main@tmp),w
  1485  00DD  3A0B               	xorlw	0Bh
  1486  00DE  1D03               	skipz
  1487  00DF  28E1               	goto	u4931
  1488  00E0  28E2               	goto	u4930
  1489  00E1                     u4931:
  1490  00E1  28E4               	goto	l4795
  1491  00E2                     u4930:
  1492                           	
  1493  00E2                     l654:	
  1494                           	line	712
  1495                           ;main.c: 712: tmp = 0;
  1496  00E2  01C4               	clrf	(main@tmp)
  1497  00E3  291C               	goto	l4813
  1498                           	line	713
  1499                           	
  1500  00E4                     l652:	
  1501                           	line	714
  1502                           	
  1503  00E4                     l4795:	
  1504                           ;main.c: 713: else
  1505                           ;main.c: 714: tmp++;
  1506  00E4  3001               	movlw	(01h)
  1507  00E5  00BF               	movwf	(??_main+0)+0
  1508  00E6  083F               	movf	(??_main+0)+0,w
  1509  00E7  07C4               	addwf	(main@tmp),f
  1510  00E8  291C               	goto	l4813
  1511                           	
  1512  00E9                     l657:	
  1513                           	line	715
  1514                           ;main.c: 715: break;
  1515  00E9  291C               	goto	l4813
  1516                           	line	716
  1517                           ;main.c: 716: case 0x01 | 0x10:
  1518                           	
  1519  00EA                     l658:	
  1520                           	line	717
  1521                           	
  1522  00EA                     l4797:	
  1523                           ;main.c: 717: if (which == 0)
  1524  00EA  08C5               	movf	(main@which),f
  1525  00EB  1D03               	skipz
  1526  00EC  28EE               	goto	u4941
  1527  00ED  28EF               	goto	u4940
  1528  00EE                     u4941:
  1529  00EE  28F3               	goto	l659
  1530  00EF                     u4940:
  1531                           	line	718
  1532                           	
  1533  00EF                     l4799:	
  1534                           ;main.c: 718: addr = 0x04;
  1535  00EF  3004               	movlw	(04h)
  1536  00F0  00BF               	movwf	(??_main+0)+0
  1537  00F1  083F               	movf	(??_main+0)+0,w
  1538  00F2  00C3               	movwf	(main@addr)
  1539                           	
  1540  00F3                     l659:	
  1541                           	line	719
  1542                           ;main.c: 719: if (which == 1)
  1543  00F3  0845               	movf	(main@which),w
  1544  00F4  3A01               	xorlw	01h
  1545  00F5  1D03               	skipz
  1546  00F6  28F8               	goto	u4951
  1547  00F7  28F9               	goto	u4950
  1548  00F8                     u4951:
  1549  00F8  28FE               	goto	l4803
  1550  00F9                     u4950:
  1551                           	line	720
  1552                           	
  1553  00F9                     l4801:	
  1554                           ;main.c: 720: addr = 0x03;
  1555  00F9  3003               	movlw	(03h)
  1556  00FA  00BF               	movwf	(??_main+0)+0
  1557  00FB  083F               	movf	(??_main+0)+0,w
  1558  00FC  00C3               	movwf	(main@addr)
  1559  00FD  28FE               	goto	l4803
  1560                           	
  1561  00FE                     l660:	
  1562                           	line	721
  1563                           	
  1564  00FE                     l4803:	
  1565                           ;main.c: 721: i2c_write(0xA3, addr, tmp);
  1566  00FE  0843               	movf	(main@addr),w
  1567  00FF  00BF               	movwf	(??_main+0)+0
  1568  0100  083F               	movf	(??_main+0)+0,w
  1569  0101  00A2               	movwf	(?_i2c_write)
  1570  0102  0844               	movf	(main@tmp),w
  1571  0103  00C0               	movwf	(??_main+1)+0
  1572  0104  0840               	movf	(??_main+1)+0,w
  1573  0105  00A3               	movwf	0+(?_i2c_write)+01h
  1574  0106  30A3               	movlw	(0A3h)
  1575  0107  22FC               	fcall	_i2c_write
  1576                           	line	722
  1577                           	
  1578  0108                     l4805:	
  1579                           ;main.c: 722: tmp = 0;
  1580  0108  1283               	bcf	status, 5	;RP0=0, select bank0
  1581  0109  1303               	bcf	status, 6	;RP1=0, select bank0
  1582  010A  01C4               	clrf	(main@tmp)
  1583                           	line	723
  1584                           	
  1585  010B                     l4807:	
  1586                           ;main.c: 723: which++;
  1587  010B  3001               	movlw	(01h)
  1588  010C  00BF               	movwf	(??_main+0)+0
  1589  010D  083F               	movf	(??_main+0)+0,w
  1590  010E  07C5               	addwf	(main@which),f
  1591                           	line	725
  1592                           ;main.c: 725: break;
  1593  010F  291C               	goto	l4813
  1594                           	line	728
  1595                           	
  1596  0110                     l4809:	
  1597                           ;main.c: 728: }
  1598  0110  291C               	goto	l4813
  1599                           	line	700
  1600                           	
  1601  0111                     l644:	
  1602                           	
  1603  0111                     l4811:	
  1604  0111  0842               	movf	(main@ev),w
  1605                           	; Switch size 1, requested type "space"
  1606                           ; Number of cases is 3, Range of values is 1 to 17
  1607                           ; switch strategies available:
  1608                           ; Name         Instructions Cycles
  1609                           ; simple_byte           10     6 (average)
  1610                           ; direct_byte           26     9 (fixed)
  1611                           ; jumptable            263     9 (fixed)
  1612                           ;	Chosen strategy is simple_byte
  1613                           
  1614                           	opt asmopt_off
  1615  0112  3A01               	xorlw	1^0	; case 1
  1616  0113  1903               	skipnz
  1617  0114  28CA               	goto	l4787
  1618  0115  3A11               	xorlw	16^1	; case 16
  1619  0116  1903               	skipnz
  1620  0117  28A6               	goto	l4773
  1621  0118  3A01               	xorlw	17^16	; case 17
  1622  0119  1903               	skipnz
  1623  011A  28EA               	goto	l4797
  1624  011B  291C               	goto	l4813
  1625                           	opt asmopt_on
  1626                           
  1627                           	line	728
  1628                           	
  1629  011C                     l650:	
  1630                           	line	729
  1631                           	
  1632  011C                     l4813:	
  1633                           ;main.c: 729: shift_send(tmp | which << 6);
  1634  011C  0845               	movf	(main@which),w
  1635  011D  00BF               	movwf	(??_main+0)+0
  1636  011E  3005               	movlw	(06h)-1
  1637  011F                     u4965:
  1638  011F  1003               	clrc
  1639  0120  0DBF               	rlf	(??_main+0)+0,f
  1640  0121  3EFF               	addlw	-1
  1641  0122  1D03               	skipz
  1642  0123  291F               	goto	u4965
  1643  0124  1003               	clrc
  1644  0125  0D3F               	rlf	(??_main+0)+0,w
  1645  0126  0444               	iorwf	(main@tmp),w
  1646  0127  2653               	fcall	_shift_send
  1647                           	line	730
  1648                           	
  1649  0128                     l4815:	
  1650                           ;main.c: 730: } while (which < 2);
  1651  0128  3002               	movlw	(02h)
  1652  0129  1283               	bcf	status, 5	;RP0=0, select bank0
  1653  012A  1303               	bcf	status, 6	;RP1=0, select bank0
  1654  012B  0245               	subwf	(main@which),w
  1655  012C  1C03               	skipc
  1656  012D  292F               	goto	u4971
  1657  012E  2930               	goto	u4970
  1658  012F                     u4971:
  1659  012F  289F               	goto	l4771
  1660  0130                     u4970:
  1661  0130  2931               	goto	l4817
  1662                           	
  1663  0131                     l661:	
  1664                           	line	732
  1665                           	
  1666  0131                     l4817:	
  1667                           ;main.c: 732: shift_send(0xFE);
  1668  0131  30FE               	movlw	(0FEh)
  1669  0132  2653               	fcall	_shift_send
  1670                           	line	733
  1671                           ;main.c: 733: goto main_label;
  1672  0133  2811               	goto	l624
  1673                           	line	734
  1674                           ;main.c: 734: while(1)
  1675                           	
  1676  0134                     l662:	
  1677                           	line	735
  1678                           ;main.c: 735: ;
  1679                           	
  1680  0134                     l663:	
  1681                           	line	734
  1682  0134  2934               	goto	l663
  1683                           	
  1684  0135                     l664:	
  1685  0135  2936               	goto	l665
  1686                           	line	737
  1687                           	
  1688  0136                     l639:	
  1689                           	line	738
  1690                           	
  1691  0136                     l665:	
  1692                           	global	start
  1693  0136  2810               	ljmp	start
  1694                           	opt stack 0
  1695                           GLOBAL	__end_of_main
  1696  0137                     	__end_of_main:
  1697 ;; =============== function _main ends ============
  1698                           
  1699                           	signat	_main,88
  1700                           	global	_init
  1701                           psect	text862,local,class=CODE,delta=2
  1702                           global __ptext862
  1703  05C0                     __ptext862:
  1704                           
  1705 ;; *************** function _init *****************
  1706 ;; Defined at:
  1707 ;;		line 514 in file "main.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;		None
  1712 ;; Return value:  Size  Location     Type
  1713 ;;		None               void
  1714 ;; Registers used:
  1715 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1716 ;; Tracked objects:
  1717 ;;		On entry : 0/0
  1718 ;;		On exit  : 0/0
  1719 ;;		Unchanged: 0/0
  1720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1721 ;;      Params:         0       0       0       0
  1722 ;;      Locals:         0       0       0       0
  1723 ;;      Temps:          0       0       0       0
  1724 ;;      Totals:         0       0       0       0
  1725 ;;Total ram usage:        0 bytes
  1726 ;; Hardware stack levels used:    1
  1727 ;; Hardware stack levels required when called:    6
  1728 ;; This function calls:
  1729 ;;		_set_it_faster
  1730 ;;		_init_setup
  1731 ;;		_init_normal
  1732 ;; This function is called by:
  1733 ;;		_main
  1734 ;; This function uses a non-reentrant model
  1735 ;;
  1736                           psect	text862
  1737                           	file	"main.c"
  1738                           	line	514
  1739                           	global	__size_of_init
  1740  001B                     	__size_of_init	equ	__end_of_init-_init
  1741                           	
  1742  05C0                     _init:	
  1743                           	opt	stack 1
  1744                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1745                           	line	515
  1746                           	
  1747  05C0                     l4687:	
  1748                           ;main.c: 515: set_it_faster(0);
  1749  05C0  3000               	movlw	(0)
  1750  05C1  260D               	fcall	_set_it_faster
  1751                           	line	518
  1752                           	
  1753  05C2                     l4689:	
  1754                           ;main.c: 518: TRISA = 0;
  1755  05C2  1683               	bsf	status, 5	;RP0=1, select bank1
  1756  05C3  1303               	bcf	status, 6	;RP1=0, select bank1
  1757  05C4  0185               	clrf	(133)^080h	;volatile
  1758                           	line	519
  1759                           	
  1760  05C5                     l4691:	
  1761                           ;main.c: 519: TRISA = 0x40;
  1762  05C5  3040               	movlw	(040h)
  1763  05C6  0085               	movwf	(133)^080h	;volatile
  1764                           	line	521
  1765                           	
  1766  05C7                     l4693:	
  1767                           ;main.c: 521: ADCON1 = 0;
  1768  05C7  019F               	clrf	(159)^080h	;volatile
  1769                           	line	523
  1770                           	
  1771  05C8                     l4695:	
  1772                           ;main.c: 523: PORTA = 0x00;
  1773  05C8  1283               	bcf	status, 5	;RP0=0, select bank0
  1774  05C9  1303               	bcf	status, 6	;RP1=0, select bank0
  1775  05CA  0185               	clrf	(5)	;volatile
  1776                           	line	524
  1777                           	
  1778  05CB                     l4697:	
  1779                           ;main.c: 524: a_latch = 0x00;
  1780  05CB  01DC               	clrf	(_a_latch)
  1781                           	line	528
  1782                           	
  1783  05CC                     l4699:	
  1784                           ;main.c: 528: TRISB = 0xFF;
  1785  05CC  30FF               	movlw	(0FFh)
  1786  05CD  1683               	bsf	status, 5	;RP0=1, select bank1
  1787  05CE  1303               	bcf	status, 6	;RP1=0, select bank1
  1788  05CF  0086               	movwf	(134)^080h	;volatile
  1789                           	line	531
  1790                           	
  1791  05D0                     l4701:	
  1792                           ;main.c: 531: if (RB5 == 0)
  1793  05D0  1283               	bcf	status, 5	;RP0=0, select bank0
  1794  05D1  1303               	bcf	status, 6	;RP1=0, select bank0
  1795  05D2  1A86               	btfsc	(53/8),(53)&7
  1796  05D3  2DD5               	goto	u4701
  1797  05D4  2DD6               	goto	u4700
  1798  05D5                     u4701:
  1799  05D5  2DD8               	goto	l4705
  1800  05D6                     u4700:
  1801                           	line	532
  1802                           	
  1803  05D6                     l4703:	
  1804                           ;main.c: 532: init_setup();
  1805  05D6  2660               	fcall	_init_setup
  1806  05D7  2DDA               	goto	l595
  1807                           	line	533
  1808                           	
  1809  05D8                     l593:	
  1810                           	line	534
  1811                           	
  1812  05D8                     l4705:	
  1813                           ;main.c: 533: else
  1814                           ;main.c: 534: init_normal();
  1815  05D8  24D4               	fcall	_init_normal
  1816  05D9  2DDA               	goto	l595
  1817                           	
  1818  05DA                     l594:	
  1819                           	line	535
  1820                           	
  1821  05DA                     l595:	
  1822  05DA  0008               	return
  1823                           	opt stack 0
  1824                           GLOBAL	__end_of_init
  1825  05DB                     	__end_of_init:
  1826 ;; =============== function _init ends ============
  1827                           
  1828                           	signat	_init,88
  1829                           	global	_init_normal
  1830                           psect	text863,local,class=CODE,delta=2
  1831                           global __ptext863
  1832  04D4                     __ptext863:
  1833                           
  1834 ;; *************** function _init_normal *****************
  1835 ;; Defined at:
  1836 ;;		line 463 in file "main.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;		None               void
  1843 ;; Registers used:
  1844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1850 ;;      Params:         0       0       0       0
  1851 ;;      Locals:         0       0       0       0
  1852 ;;      Temps:          0       0       0       0
  1853 ;;      Totals:         0       0       0       0
  1854 ;;Total ram usage:        0 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    5
  1857 ;; This function calls:
  1858 ;;		_rtc_setup
  1859 ;;		_what_time_is_now
  1860 ;;		_set_it_faster
  1861 ;;		_bit_on
  1862 ;;		_shift_send
  1863 ;; This function is called by:
  1864 ;;		_init
  1865 ;; This function uses a non-reentrant model
  1866 ;;
  1867                           psect	text863
  1868                           	file	"main.c"
  1869                           	line	463
  1870                           	global	__size_of_init_normal
  1871  002D                     	__size_of_init_normal	equ	__end_of_init_normal-_init_normal
  1872                           	
  1873  04D4                     _init_normal:	
  1874                           	opt	stack 1
  1875                           ; Regs used in _init_normal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1876                           	line	464
  1877                           	
  1878  04D4                     l4647:	
  1879                           ;main.c: 464: mode = 0;
  1880  04D4  1283               	bcf	status, 5	;RP0=0, select bank0
  1881  04D5  1303               	bcf	status, 6	;RP1=0, select bank0
  1882  04D6  01DD               	clrf	(_mode)
  1883                           	line	465
  1884                           	
  1885  04D7                     l4649:	
  1886                           ;main.c: 465: if (rtc_setup())
  1887  04D7  23F0               	fcall	_rtc_setup
  1888  04D8  3A00               	xorlw	0
  1889  04D9  1903               	skipnz
  1890  04DA  2CDC               	goto	u4691
  1891  04DB  2CDD               	goto	u4690
  1892  04DC                     u4691:
  1893  04DC  2CDF               	goto	l4653
  1894  04DD                     u4690:
  1895  04DD  2CFA               	goto	l4683
  1896                           	line	466
  1897                           	
  1898  04DE                     l4651:	
  1899                           ;main.c: 466: goto error;
  1900  04DE  2CFA               	goto	l4683
  1901                           	
  1902  04DF                     l582:	
  1903                           	line	467
  1904                           	
  1905  04DF                     l4653:	
  1906                           ;main.c: 467: what_time_is_now();
  1907  04DF  2358               	fcall	_what_time_is_now
  1908                           	line	468
  1909                           	
  1910  04E0                     l4655:	
  1911                           ;main.c: 468: set_it_faster(1);
  1912  04E0  3001               	movlw	(01h)
  1913  04E1  260D               	fcall	_set_it_faster
  1914                           	line	472
  1915                           	
  1916  04E2                     l4657:	
  1917                           ;main.c: 472: TMR1IF = 0;
  1918  04E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1919  04E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1920  04E4  100C               	bcf	(96/8),(96)&7
  1921                           	line	473
  1922                           	
  1923  04E5                     l4659:	
  1924                           ;main.c: 473: TMR1IE = 0;
  1925  04E5  1683               	bsf	status, 5	;RP0=1, select bank1
  1926  04E6  1303               	bcf	status, 6	;RP1=0, select bank1
  1927  04E7  100C               	bcf	(1120/8)^080h,(1120)&7
  1928                           	line	474
  1929                           	
  1930  04E8                     l4661:	
  1931                           ;main.c: 474: T1CON = 0;
  1932  04E8  1283               	bcf	status, 5	;RP0=0, select bank0
  1933  04E9  1303               	bcf	status, 6	;RP1=0, select bank0
  1934  04EA  0190               	clrf	(16)	;volatile
  1935                           	line	475
  1936                           	
  1937  04EB                     l4663:	
  1938                           ;main.c: 475: TMR1ON = 1;
  1939  04EB  1410               	bsf	(128/8),(128)&7
  1940                           	line	478
  1941                           	
  1942  04EC                     l4665:	
  1943                           ;main.c: 478: TMR0IF = 0;
  1944  04EC  110B               	bcf	(90/8),(90)&7
  1945                           	line	479
  1946                           	
  1947  04ED                     l4667:	
  1948                           ;main.c: 479: TMR0IE = 0;
  1949  04ED  128B               	bcf	(93/8),(93)&7
  1950                           	line	480
  1951                           	
  1952  04EE                     l4669:	
  1953                           ;main.c: 480: T0CS = 0;
  1954  04EE  1683               	bsf	status, 5	;RP0=1, select bank1
  1955  04EF  1303               	bcf	status, 6	;RP1=0, select bank1
  1956  04F0  1281               	bcf	(1037/8)^080h,(1037)&7
  1957                           	line	482
  1958                           	
  1959  04F1                     l4671:	
  1960                           ;main.c: 482: state = 0;
  1961  04F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1962  04F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1963  04F3  01E0               	clrf	(_state)
  1964                           	line	485
  1965                           	
  1966  04F4                     l4673:	
  1967                           ;main.c: 485: RBIE = 1;
  1968  04F4  158B               	bsf	(91/8),(91)&7
  1969                           	line	487
  1970                           	
  1971  04F5                     l4675:	
  1972                           ;main.c: 487: INTE = 0;
  1973  04F5  120B               	bcf	(92/8),(92)&7
  1974                           	line	489
  1975                           	
  1976  04F6                     l4677:	
  1977                           ;main.c: 489: PEIE = 1;
  1978  04F6  170B               	bsf	(94/8),(94)&7
  1979                           	line	490
  1980                           	
  1981  04F7                     l4679:	
  1982                           ;main.c: 490: GIE = 1;
  1983  04F7  178B               	bsf	(95/8),(95)&7
  1984  04F8  2D00               	goto	l584
  1985                           	line	491
  1986                           	
  1987  04F9                     l4681:	
  1988                           ;main.c: 491: return;
  1989  04F9  2D00               	goto	l584
  1990                           	line	493
  1991                           ;main.c: 493: error:
  1992                           	
  1993  04FA                     l583:	
  1994                           	line	494
  1995                           	
  1996  04FA                     l4683:	
  1997                           ;main.c: 494: bit_on(0x02);
  1998  04FA  3002               	movlw	(02h)
  1999  04FB  2641               	fcall	_bit_on
  2000                           	line	495
  2001                           	
  2002  04FC                     l4685:	
  2003                           ;main.c: 495: shift_send(0x00);
  2004  04FC  3000               	movlw	(0)
  2005  04FD  2653               	fcall	_shift_send
  2006  04FE  2CFF               	goto	l586
  2007                           	line	496
  2008                           ;main.c: 496: while(1)
  2009                           	
  2010  04FF                     l585:	
  2011                           	line	497
  2012                           ;main.c: 497: ;
  2013                           	
  2014  04FF                     l586:	
  2015                           	line	496
  2016  04FF  2CFF               	goto	l586
  2017                           	
  2018  0500                     l587:	
  2019                           	line	498
  2020                           	
  2021  0500                     l584:	
  2022  0500  0008               	return
  2023                           	opt stack 0
  2024                           GLOBAL	__end_of_init_normal
  2025  0501                     	__end_of_init_normal:
  2026 ;; =============== function _init_normal ends ============
  2027                           
  2028                           	signat	_init_normal,88
  2029                           	global	_application_reset
  2030                           psect	text864,local,class=CODE,delta=2
  2031                           global __ptext864
  2032  05DB                     __ptext864:
  2033                           
  2034 ;; *************** function _application_reset *****************
  2035 ;; Defined at:
  2036 ;;		line 398 in file "main.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;		None               void
  2043 ;; Registers used:
  2044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2050 ;;      Params:         0       0       0       0
  2051 ;;      Locals:         0       0       0       0
  2052 ;;      Temps:          0       0       0       0
  2053 ;;      Totals:         0       0       0       0
  2054 ;;Total ram usage:        0 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    5
  2057 ;; This function calls:
  2058 ;;		_shift_send
  2059 ;;		_what_time_is_now
  2060 ;; This function is called by:
  2061 ;;		_main
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           psect	text864
  2065                           	file	"main.c"
  2066                           	line	398
  2067                           	global	__size_of_application_reset
  2068  001A                     	__size_of_application_reset	equ	__end_of_application_reset-_application_reset
  2069                           	
  2070  05DB                     _application_reset:	
  2071                           	opt	stack 2
  2072                           ; Regs used in _application_reset: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2073                           	line	399
  2074                           	
  2075  05DB                     l4621:	
  2076                           ;main.c: 399: if (mode != 0)
  2077  05DB  1283               	bcf	status, 5	;RP0=0, select bank0
  2078  05DC  1303               	bcf	status, 6	;RP1=0, select bank0
  2079  05DD  085D               	movf	(_mode),w
  2080  05DE  1D03               	skipz
  2081  05DF  2DE1               	goto	u4680
  2082  05E0  2DE3               	goto	l563
  2083  05E1                     u4680:
  2084  05E1  2DF4               	goto	l564
  2085                           	line	400
  2086                           	
  2087  05E2                     l4623:	
  2088                           ;main.c: 400: return;
  2089  05E2  2DF4               	goto	l564
  2090                           	
  2091  05E3                     l563:	
  2092                           	line	401
  2093                           ;main.c: 401: state = 0;
  2094  05E3  01E0               	clrf	(_state)
  2095                           	line	402
  2096                           	
  2097  05E4                     l4625:	
  2098                           ;main.c: 402: shift_send(0x5A);
  2099  05E4  305A               	movlw	(05Ah)
  2100  05E5  2653               	fcall	_shift_send
  2101                           	line	404
  2102                           	
  2103  05E6                     l4627:	
  2104                           ;main.c: 404: tmr1_counter = 0;
  2105  05E6  1283               	bcf	status, 5	;RP0=0, select bank0
  2106  05E7  1303               	bcf	status, 6	;RP1=0, select bank0
  2107  05E8  01E2               	clrf	(_tmr1_counter)
  2108                           	line	405
  2109                           	
  2110  05E9                     l4629:	
  2111                           ;main.c: 405: tmr0_counter = 0;
  2112  05E9  01E1               	clrf	(_tmr0_counter)
  2113                           	line	409
  2114                           	
  2115  05EA                     l4631:	
  2116                           ;main.c: 409: seg.s60 = 0;
  2117  05EA  01DA               	clrf	(_seg)
  2118                           	line	410
  2119                           	
  2120  05EB                     l4633:	
  2121                           ;main.c: 410: what_time_is_now();
  2122  05EB  2358               	fcall	_what_time_is_now
  2123                           	line	413
  2124                           	
  2125  05EC                     l4635:	
  2126                           ;main.c: 413: TMR0 = 0;
  2127  05EC  1283               	bcf	status, 5	;RP0=0, select bank0
  2128  05ED  1303               	bcf	status, 6	;RP1=0, select bank0
  2129  05EE  0181               	clrf	(1)	;volatile
  2130                           	line	414
  2131                           	
  2132  05EF                     l4637:	
  2133                           ;main.c: 414: TMR1L = 0;
  2134  05EF  018E               	clrf	(14)	;volatile
  2135                           	line	415
  2136                           	
  2137  05F0                     l4639:	
  2138                           ;main.c: 415: TMR1H = 0;
  2139  05F0  018F               	clrf	(15)	;volatile
  2140                           	line	418
  2141                           	
  2142  05F1                     l4641:	
  2143                           ;main.c: 418: TMR0IF = 0;
  2144  05F1  110B               	bcf	(90/8),(90)&7
  2145                           	line	419
  2146                           	
  2147  05F2                     l4643:	
  2148                           ;main.c: 419: TMR1IF = 0;
  2149  05F2  100C               	bcf	(96/8),(96)&7
  2150                           	line	421
  2151                           	
  2152  05F3                     l4645:	
  2153                           ;main.c: 421: need_sync = 0;
  2154  05F3  11F8               	bcf	(_need_sync/8),(_need_sync)&7
  2155                           	line	422
  2156                           	
  2157  05F4                     l564:	
  2158  05F4  0008               	return
  2159                           	opt stack 0
  2160                           GLOBAL	__end_of_application_reset
  2161  05F5                     	__end_of_application_reset:
  2162 ;; =============== function _application_reset ends ============
  2163                           
  2164                           	signat	_application_reset,88
  2165                           	global	_sync
  2166                           psect	text865,local,class=CODE,delta=2
  2167                           global __ptext865
  2168  022F                     __ptext865:
  2169                           
  2170 ;; *************** function _sync *****************
  2171 ;; Defined at:
  2172 ;;		line 294 in file "main.c"
  2173 ;; Parameters:    Size  Location     Type
  2174 ;;		None
  2175 ;; Auto vars:     Size  Location     Type
  2176 ;;		None
  2177 ;; Return value:  Size  Location     Type
  2178 ;;		None               void
  2179 ;; Registers used:
  2180 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2181 ;; Tracked objects:
  2182 ;;		On entry : 0/0
  2183 ;;		On exit  : 0/0
  2184 ;;		Unchanged: 0/0
  2185 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2186 ;;      Params:         0       0       0       0
  2187 ;;      Locals:         0       0       0       0
  2188 ;;      Temps:          0       3       0       0
  2189 ;;      Totals:         0       3       0       0
  2190 ;;Total ram usage:        3 bytes
  2191 ;; Hardware stack levels used:    1
  2192 ;; Hardware stack levels required when called:    5
  2193 ;; This function calls:
  2194 ;;		_what_time_is_now
  2195 ;;		_next_segment
  2196 ;; This function is called by:
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           psect	text865
  2201                           	file	"main.c"
  2202                           	line	294
  2203                           	global	__size_of_sync
  2204  006B                     	__size_of_sync	equ	__end_of_sync-_sync
  2205                           	
  2206  022F                     _sync:	
  2207                           	opt	stack 2
  2208                           ; Regs used in _sync: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2209                           	line	295
  2210                           	
  2211  022F                     l4571:	
  2212                           ;main.c: 295: TMR1ON = 0;
  2213  022F  1283               	bcf	status, 5	;RP0=0, select bank0
  2214  0230  1303               	bcf	status, 6	;RP1=0, select bank0
  2215  0231  1010               	bcf	(128/8),(128)&7
  2216                           	line	297
  2217                           ;main.c: 297: switch (state) {
  2218  0232  2A82               	goto	l4609
  2219                           	line	298
  2220                           ;main.c: 298: case 0:
  2221                           	
  2222  0233                     l545:	
  2223                           	line	300
  2224                           	
  2225  0233                     l4573:	
  2226                           ;main.c: 300: TMR1H = 0;
  2227  0233  018F               	clrf	(15)	;volatile
  2228                           	line	301
  2229                           ;main.c: 301: TMR1L = 0;
  2230  0234  018E               	clrf	(14)	;volatile
  2231                           	line	302
  2232                           	
  2233  0235                     l4575:	
  2234                           ;main.c: 302: tmr1_counter = 0;
  2235  0235  01E2               	clrf	(_tmr1_counter)
  2236                           	line	303
  2237                           	
  2238  0236                     l4577:	
  2239                           ;main.c: 303: TMR1IF = 0;
  2240  0236  100C               	bcf	(96/8),(96)&7
  2241                           	line	304
  2242                           	
  2243  0237                     l4579:	
  2244                           ;main.c: 304: TMR1ON = 1;
  2245  0237  1410               	bsf	(128/8),(128)&7
  2246                           	line	305
  2247                           ;main.c: 305: break;
  2248  0238  2A8D               	goto	l4611
  2249                           	line	307
  2250                           ;main.c: 307: case 1:
  2251                           	
  2252  0239                     l547:	
  2253                           	line	308
  2254                           	
  2255  0239                     l4581:	
  2256                           ;main.c: 308: what_time_is_now();
  2257  0239  2358               	fcall	_what_time_is_now
  2258  023A  2A3B               	goto	l4583
  2259                           	line	310
  2260                           ;main.c: 310: case 2:
  2261                           	
  2262  023B                     l548:	
  2263                           	line	312
  2264                           	
  2265  023B                     l4583:	
  2266                           ;main.c: 312: seg.s60 = 0;
  2267  023B  1283               	bcf	status, 5	;RP0=0, select bank0
  2268  023C  1303               	bcf	status, 6	;RP1=0, select bank0
  2269  023D  01DA               	clrf	(_seg)
  2270                           	line	313
  2271                           	
  2272  023E                     l4585:	
  2273                           ;main.c: 313: seg.tsl=1;
  2274  023E  01DB               	clrf	0+(_seg)+01h
  2275  023F  1403               	bsf	status,0
  2276  0240  0DDB               	rlf	0+(_seg)+01h,f
  2277                           	line	314
  2278                           	
  2279  0241                     l4587:	
  2280                           ;main.c: 314: next_segment();
  2281  0241  229A               	fcall	_next_segment
  2282                           	line	316
  2283                           	
  2284  0242                     l4589:	
  2285                           ;main.c: 316: if (TMR1IF == 1)
  2286  0242  1283               	bcf	status, 5	;RP0=0, select bank0
  2287  0243  1303               	bcf	status, 6	;RP1=0, select bank0
  2288  0244  1C0C               	btfss	(96/8),(96)&7
  2289  0245  2A47               	goto	u4621
  2290  0246  2A48               	goto	u4620
  2291  0247                     u4621:
  2292  0247  2A4C               	goto	l549
  2293  0248                     u4620:
  2294                           	line	317
  2295                           	
  2296  0248                     l4591:	
  2297                           ;main.c: 317: tmr1_counter++;
  2298  0248  3001               	movlw	(01h)
  2299  0249  00AC               	movwf	(??_sync+0)+0
  2300  024A  082C               	movf	(??_sync+0)+0,w
  2301  024B  07E2               	addwf	(_tmr1_counter),f
  2302                           	
  2303  024C                     l549:	
  2304                           	line	320
  2305                           ;main.c: 320: seg_ticks_l = (TMR1L >> 6) | ((TMR1H << 2) & 0xFF);
  2306  024C  080F               	movf	(15),w	;volatile
  2307  024D  00AC               	movwf	(??_sync+0)+0
  2308  024E  3002               	movlw	02h
  2309  024F                     u4635:
  2310  024F  1003               	clrc
  2311  0250  0DAC               	rlf	(??_sync+0)+0,f
  2312  0251  3EFF               	addlw	-1
  2313  0252  1D03               	skipz
  2314  0253  2A4F               	goto	u4635
  2315  0254  080E               	movf	(14),w	;volatile
  2316  0255  00AD               	movwf	(??_sync+1)+0
  2317  0256  3006               	movlw	06h
  2318  0257                     u4645:
  2319  0257  1003               	clrc
  2320  0258  0CAD               	rrf	(??_sync+1)+0,f
  2321  0259  3EFF               	addlw	-1
  2322  025A  1D03               	skipz
  2323  025B  2A57               	goto	u4645
  2324  025C  082D               	movf	0+(??_sync+1)+0,w
  2325  025D  042C               	iorwf	0+(??_sync+0)+0,w
  2326  025E  00AE               	movwf	(??_sync+2)+0
  2327  025F  082E               	movf	(??_sync+2)+0,w
  2328  0260  00DF               	movwf	(_seg_ticks_l)
  2329                           	line	321
  2330                           ;main.c: 321: seg_ticks_h = (TMR1H >> 6) | ((tmr1_counter << 2) & 0xFF);
  2331  0261  0862               	movf	(_tmr1_counter),w
  2332  0262  00AC               	movwf	(??_sync+0)+0
  2333  0263  3002               	movlw	02h
  2334  0264                     u4655:
  2335  0264  1003               	clrc
  2336  0265  0DAC               	rlf	(??_sync+0)+0,f
  2337  0266  3EFF               	addlw	-1
  2338  0267  1D03               	skipz
  2339  0268  2A64               	goto	u4655
  2340  0269  080F               	movf	(15),w	;volatile
  2341  026A  00AD               	movwf	(??_sync+1)+0
  2342  026B  3006               	movlw	06h
  2343  026C                     u4665:
  2344  026C  1003               	clrc
  2345  026D  0CAD               	rrf	(??_sync+1)+0,f
  2346  026E  3EFF               	addlw	-1
  2347  026F  1D03               	skipz
  2348  0270  2A6C               	goto	u4665
  2349  0271  082D               	movf	0+(??_sync+1)+0,w
  2350  0272  042C               	iorwf	0+(??_sync+0)+0,w
  2351  0273  00AE               	movwf	(??_sync+2)+0
  2352  0274  082E               	movf	(??_sync+2)+0,w
  2353  0275  00DE               	movwf	(_seg_ticks_h)
  2354                           	line	325
  2355                           ;main.c: 325: TMR0 = 256 - seg_ticks_l;
  2356  0276  035F               	decf	(_seg_ticks_l),w
  2357  0277  3AFF               	xorlw	0ffh
  2358  0278  0081               	movwf	(1)
  2359                           	line	326
  2360                           	
  2361  0279                     l4593:	
  2362                           ;main.c: 326: tmr0_counter = 0;
  2363  0279  01E1               	clrf	(_tmr0_counter)
  2364                           	line	329
  2365                           	
  2366  027A                     l4595:	
  2367                           ;main.c: 329: TMR1L = 0;
  2368  027A  018E               	clrf	(14)	;volatile
  2369                           	line	330
  2370                           	
  2371  027B                     l4597:	
  2372                           ;main.c: 330: TMR1H = 0;
  2373  027B  018F               	clrf	(15)	;volatile
  2374                           	line	331
  2375                           	
  2376  027C                     l4599:	
  2377                           ;main.c: 331: tmr1_counter = 0;
  2378  027C  01E2               	clrf	(_tmr1_counter)
  2379                           	line	332
  2380                           	
  2381  027D                     l4601:	
  2382                           ;main.c: 332: TMR1IF = 0;
  2383  027D  100C               	bcf	(96/8),(96)&7
  2384                           	line	333
  2385                           	
  2386  027E                     l4603:	
  2387                           ;main.c: 333: TMR1ON = 1;
  2388  027E  1410               	bsf	(128/8),(128)&7
  2389                           	line	336
  2390                           	
  2391  027F                     l4605:	
  2392                           ;main.c: 336: TMR0IF = 0;
  2393  027F  110B               	bcf	(90/8),(90)&7
  2394                           	line	339
  2395                           ;main.c: 339: break;
  2396  0280  2A8D               	goto	l4611
  2397                           	line	340
  2398                           	
  2399  0281                     l4607:	
  2400                           ;main.c: 340: }
  2401  0281  2A8D               	goto	l4611
  2402                           	line	297
  2403                           	
  2404  0282                     l544:	
  2405                           	
  2406  0282                     l4609:	
  2407  0282  0860               	movf	(_state),w
  2408                           	; Switch size 1, requested type "space"
  2409                           ; Number of cases is 3, Range of values is 0 to 2
  2410                           ; switch strategies available:
  2411                           ; Name         Instructions Cycles
  2412                           ; direct_byte            9     6 (fixed)
  2413                           ; simple_byte           10     6 (average)
  2414                           ; jumptable            260     6 (fixed)
  2415                           ; rangetable             7     6 (fixed)
  2416                           ; spacedrange           12     9 (fixed)
  2417                           ; locatedrange           3     3 (fixed)
  2418                           ;	Chosen strategy is direct_byte
  2419                           
  2420  0283  0084               	movwf fsr
  2421  0284  3003               	movlw	3
  2422  0285  0204               	subwf	fsr,w
  2423  0286  1803               skipnc
  2424  0287  2A8D               goto l4611
  2425  0288  3000               movlw high(S4839)
  2426  0289  008A               movwf pclath
  2427  028A  3001               	movlw low(S4839)
  2428  028B  0704               	addwf fsr,w
  2429  028C  0082               	movwf pc
  2430                           psect	swtext1,local,class=CONST,delta=2
  2431                           global __pswtext1
  2432  0001                     __pswtext1:
  2433  0001                     S4839:
  2434  0001  2A33               	ljmp	l4573
  2435  0002  2A39               	ljmp	l4581
  2436  0003  2A3B               	ljmp	l4583
  2437                           psect	text865
  2438                           
  2439                           	line	340
  2440                           	
  2441  028D                     l546:	
  2442                           	line	343
  2443                           	
  2444  028D                     l4611:	
  2445                           ;main.c: 343: if (state != 2)
  2446  028D  0860               	movf	(_state),w
  2447  028E  3A02               	xorlw	02h
  2448  028F  1903               	skipnz
  2449  0290  2A92               	goto	u4671
  2450  0291  2A93               	goto	u4670
  2451  0292                     u4671:
  2452  0292  2A99               	goto	l551
  2453  0293                     u4670:
  2454                           	line	344
  2455                           	
  2456  0293                     l4613:	
  2457                           ;main.c: 344: state++;
  2458  0293  3001               	movlw	(01h)
  2459  0294  00AC               	movwf	(??_sync+0)+0
  2460  0295  082C               	movf	(??_sync+0)+0,w
  2461  0296  07E0               	addwf	(_state),f
  2462  0297  2A99               	goto	l551
  2463                           	
  2464  0298                     l550:	
  2465  0298  2A99               	goto	l551
  2466                           	line	345
  2467                           	
  2468  0299                     l4615:	
  2469                           	line	346
  2470                           ;main.c: 345: return;
  2471                           	
  2472  0299                     l551:	
  2473  0299  0008               	return
  2474                           	opt stack 0
  2475                           GLOBAL	__end_of_sync
  2476  029A                     	__end_of_sync:
  2477 ;; =============== function _sync ends ============
  2478                           
  2479                           	signat	_sync,88
  2480                           	global	_rtc_setup
  2481                           psect	text866,local,class=CODE,delta=2
  2482                           global __ptext866
  2483  03F0                     __ptext866:
  2484                           
  2485 ;; *************** function _rtc_setup *****************
  2486 ;; Defined at:
  2487 ;;		line 363 in file "main.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;		None
  2490 ;; Auto vars:     Size  Location     Type
  2491 ;;  rv              1   29[BANK0 ] unsigned char 
  2492 ;;  table          20    9[BANK0 ] unsigned char [20]
  2493 ;;  i               1   30[BANK0 ] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      unsigned char 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2503 ;;      Params:         0       0       0       0
  2504 ;;      Locals:         0      22       0       0
  2505 ;;      Temps:          0       4       0       0
  2506 ;;      Totals:         0      26       0       0
  2507 ;;Total ram usage:       26 bytes
  2508 ;; Hardware stack levels used:    1
  2509 ;; Hardware stack levels required when called:    4
  2510 ;; This function calls:
  2511 ;;		_i2c_write
  2512 ;; This function is called by:
  2513 ;;		_init_normal
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           psect	text866
  2517                           	file	"main.c"
  2518                           	line	363
  2519                           	global	__size_of_rtc_setup
  2520  0047                     	__size_of_rtc_setup	equ	__end_of_rtc_setup-_rtc_setup
  2521                           	
  2522  03F0                     _rtc_setup:	
  2523                           	opt	stack 1
  2524                           ; Regs used in _rtc_setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2525                           	line	382
  2526                           	
  2527  03F0                     l4555:	
  2528                           ;main.c: 364: uns8 table[] = {
  2529                           ;main.c: 366: 0x00, 0x00,
  2530                           ;main.c: 367: 0x01, 0x11,
  2531                           ;main.c: 368: 0x0D, 0x83,
  2532                           ;main.c: 372: 0x0E, 0x80,
  2533                           ;main.c: 373: 0x0F, 0x01,
  2534                           ;main.c: 376: 0x09, 0x00,
  2535                           ;main.c: 377: 0x0A, 0x00,
  2536                           ;main.c: 378: 0x0B, 0x00,
  2537                           ;main.c: 379: 0x0C, 0x00,
  2538                           ;main.c: 381: 0xFF, 0xFF
  2539                           ;main.c: 382: };
  2540  03F0  3029               	movlw	(rtc_setup@table)&0ffh
  2541  03F1  0084               	movwf	fsr0
  2542  03F2  3046               	movlw	low(rtc_setup@F789)
  2543  03F3  1283               	bcf	status, 5	;RP0=0, select bank0
  2544  03F4  1303               	bcf	status, 6	;RP1=0, select bank0
  2545  03F5  00A5               	movwf	(??_rtc_setup+0)+0
  2546  03F6  0804               	movf	fsr0,w
  2547  03F7  00A6               	movwf	((??_rtc_setup+0)+0+1)
  2548  03F8  3014               	movlw	20
  2549  03F9  00A7               	movwf	((??_rtc_setup+0)+0+2)
  2550  03FA                     u4590:
  2551  03FA  0825               	movf	(??_rtc_setup+0)+0,w
  2552  03FB  0084               	movwf	fsr0
  2553  03FC  1383               	bcf	status, 7	;select IRP bank0
  2554                           	
  2555  03FD  0800               	movf	indf,w
  2556  03FE  00A8               	movwf	((??_rtc_setup+0)+0+3)
  2557  03FF  0AA5               	incf	(??_rtc_setup+0)+0,f
  2558  0400  0826               	movf	((??_rtc_setup+0)+0+1),w
  2559  0401  0084               	movwf	fsr0
  2560                           	
  2561  0402  0828               	movf	((??_rtc_setup+0)+0+3),w
  2562  0403  0080               	movwf	indf
  2563  0404  0AA6               	incf	((??_rtc_setup+0)+0+1),f
  2564  0405  0BA7               	decfsz	((??_rtc_setup+0)+0+2),f
  2565  0406  2BFA               	goto	u4590
  2566                           	line	384
  2567                           	
  2568  0407                     l4557:	
  2569                           ;main.c: 384: uns8 i=0;
  2570  0407  01BE               	clrf	(rtc_setup@i)
  2571                           	line	385
  2572                           ;main.c: 385: while (table[i] != 0xFF) {
  2573  0408  2C2B               	goto	l4569
  2574                           	
  2575  0409                     l557:	
  2576                           	line	387
  2577                           	
  2578  0409                     l4559:	
  2579                           ;main.c: 386: uns8 rv;
  2580                           ;main.c: 387: rv = i2c_write(0xA3, table[i], table[i+1]);
  2581  0409  083E               	movf	(rtc_setup@i),w
  2582  040A  3E29               	addlw	rtc_setup@table&0ffh
  2583  040B  0084               	movwf	fsr0
  2584  040C  0800               	movf	indf,w
  2585  040D  00A5               	movwf	(??_rtc_setup+0)+0
  2586  040E  0825               	movf	(??_rtc_setup+0)+0,w
  2587  040F  00A2               	movwf	(?_i2c_write)
  2588  0410  083E               	movf	(rtc_setup@i),w
  2589  0411  3E01               	addlw	01h
  2590  0412  3E29               	addlw	rtc_setup@table&0ffh
  2591  0413  0084               	movwf	fsr0
  2592  0414  0800               	movf	indf,w
  2593  0415  00A6               	movwf	(??_rtc_setup+1)+0
  2594  0416  0826               	movf	(??_rtc_setup+1)+0,w
  2595  0417  00A3               	movwf	0+(?_i2c_write)+01h
  2596  0418  30A3               	movlw	(0A3h)
  2597  0419  22FC               	fcall	_i2c_write
  2598  041A  1283               	bcf	status, 5	;RP0=0, select bank0
  2599  041B  1303               	bcf	status, 6	;RP1=0, select bank0
  2600  041C  00A7               	movwf	(??_rtc_setup+2)+0
  2601  041D  0827               	movf	(??_rtc_setup+2)+0,w
  2602  041E  00BD               	movwf	(rtc_setup@rv)
  2603                           	line	388
  2604                           	
  2605  041F                     l4561:	
  2606                           ;main.c: 388: if (rv)
  2607  041F  083D               	movf	(rtc_setup@rv),w
  2608  0420  1D03               	skipz
  2609  0421  2C23               	goto	u4600
  2610  0422  2C26               	goto	l4567
  2611  0423                     u4600:
  2612                           	line	389
  2613                           	
  2614  0423                     l4563:	
  2615                           ;main.c: 389: return 0xFF;
  2616  0423  30FF               	movlw	(0FFh)
  2617  0424  2C36               	goto	l559
  2618                           	
  2619  0425                     l4565:	
  2620  0425  2C36               	goto	l559
  2621                           	
  2622  0426                     l558:	
  2623                           	line	390
  2624                           	
  2625  0426                     l4567:	
  2626                           ;main.c: 390: i += 2;
  2627  0426  3002               	movlw	(02h)
  2628  0427  00A5               	movwf	(??_rtc_setup+0)+0
  2629  0428  0825               	movf	(??_rtc_setup+0)+0,w
  2630  0429  07BE               	addwf	(rtc_setup@i),f
  2631  042A  2C2B               	goto	l4569
  2632                           	line	391
  2633                           	
  2634  042B                     l556:	
  2635                           	line	385
  2636                           	
  2637  042B                     l4569:	
  2638  042B  083E               	movf	(rtc_setup@i),w
  2639  042C  3E29               	addlw	rtc_setup@table&0ffh
  2640  042D  0084               	movwf	fsr0
  2641  042E  1383               	bcf	status, 7	;select IRP bank0
  2642  042F  0800               	movf	indf,w
  2643  0430  3AFF               	xorlw	0FFh
  2644  0431  1D03               	skipz
  2645  0432  2C34               	goto	u4611
  2646  0433  2C35               	goto	u4610
  2647  0434                     u4611:
  2648  0434  2C09               	goto	l4559
  2649  0435                     u4610:
  2650  0435  2C36               	goto	l559
  2651                           	
  2652  0436                     l560:	
  2653                           	line	392
  2654                           	
  2655  0436                     l559:	
  2656  0436  0008               	return
  2657                           	opt stack 0
  2658                           GLOBAL	__end_of_rtc_setup
  2659  0437                     	__end_of_rtc_setup:
  2660 ;; =============== function _rtc_setup ends ============
  2661                           
  2662                           	signat	_rtc_setup,89
  2663                           	global	_next_segment
  2664                           psect	text867,local,class=CODE,delta=2
  2665                           global __ptext867
  2666  029A                     __ptext867:
  2667                           
  2668 ;; *************** function _next_segment *****************
  2669 ;; Defined at:
  2670 ;;		line 220 in file "main.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  data            1    5[BANK0 ] unsigned char 
  2675 ;; Return value:  Size  Location     Type
  2676 ;;		None               void
  2677 ;; Registers used:
  2678 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2679 ;; Tracked objects:
  2680 ;;		On entry : 0/0
  2681 ;;		On exit  : 0/0
  2682 ;;		Unchanged: 0/0
  2683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2684 ;;      Params:         0       0       0       0
  2685 ;;      Locals:         0       1       0       0
  2686 ;;      Temps:          0       1       0       0
  2687 ;;      Totals:         0       2       0       0
  2688 ;;Total ram usage:        2 bytes
  2689 ;; Hardware stack levels used:    1
  2690 ;; Hardware stack levels required when called:    4
  2691 ;; This function calls:
  2692 ;;		_shift_send
  2693 ;; This function is called by:
  2694 ;;		_sync
  2695 ;;		_main
  2696 ;; This function uses a non-reentrant model
  2697 ;;
  2698                           psect	text867
  2699                           	file	"main.c"
  2700                           	line	220
  2701                           	global	__size_of_next_segment
  2702  0062                     	__size_of_next_segment	equ	__end_of_next_segment-_next_segment
  2703                           	
  2704  029A                     _next_segment:	
  2705                           	opt	stack 3
  2706                           ; Regs used in _next_segment: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2707                           	line	222
  2708                           	
  2709  029A                     l4509:	
  2710                           ;main.c: 222: if (seg.s60 > 60)
  2711  029A  303D               	movlw	(03Dh)
  2712  029B  1283               	bcf	status, 5	;RP0=0, select bank0
  2713  029C  1303               	bcf	status, 6	;RP1=0, select bank0
  2714  029D  025A               	subwf	(_seg),w
  2715  029E  1C03               	skipc
  2716  029F  2AA1               	goto	u4491
  2717  02A0  2AA2               	goto	u4490
  2718  02A1                     u4491:
  2719  02A1  2AA4               	goto	l4513
  2720  02A2                     u4490:
  2721  02A2  2AFB               	goto	l525
  2722                           	line	223
  2723                           	
  2724  02A3                     l4511:	
  2725                           ;main.c: 223: return;
  2726  02A3  2AFB               	goto	l525
  2727                           	
  2728  02A4                     l524:	
  2729                           	line	224
  2730                           	
  2731  02A4                     l4513:	
  2732                           ;main.c: 224: seg.tsl--;
  2733  02A4  3001               	movlw	low(01h)
  2734  02A5  02DB               	subwf	0+(_seg)+01h,f
  2735                           	line	225
  2736                           	
  2737  02A6                     l4515:	
  2738                           ;main.c: 225: if (seg.tsl != 0)
  2739  02A6  085B               	movf	0+(_seg)+01h,w
  2740  02A7  1D03               	skipz
  2741  02A8  2AAA               	goto	u4500
  2742  02A9  2AAC               	goto	l526
  2743  02AA                     u4500:
  2744  02AA  2AFB               	goto	l525
  2745                           	line	226
  2746                           	
  2747  02AB                     l4517:	
  2748                           ;main.c: 226: return;
  2749  02AB  2AFB               	goto	l525
  2750                           	
  2751  02AC                     l526:	
  2752                           	line	230
  2753                           ;main.c: 230: need_update = 0;
  2754  02AC  1278               	bcf	(_need_update/8),(_need_update)&7
  2755                           	line	231
  2756                           ;main.c: 231: uns8 data = 0;
  2757  02AD  01A5               	clrf	(next_segment@data)
  2758                           	line	232
  2759                           	
  2760  02AE                     l4519:	
  2761                           ;main.c: 232: if (seg.s60 == 0) {
  2762  02AE  08DA               	movf	(_seg),f
  2763  02AF  1D03               	skipz
  2764  02B0  2AB2               	goto	u4511
  2765  02B1  2AB3               	goto	u4510
  2766  02B2                     u4511:
  2767  02B2  2AB6               	goto	l4523
  2768  02B3                     u4510:
  2769                           	line	233
  2770                           	
  2771  02B3                     l4521:	
  2772                           ;main.c: 233: data |= 0x02;
  2773  02B3  14A5               	bsf	(next_segment@data)+(1/8),(1)&7
  2774                           	line	234
  2775                           ;main.c: 234: need_update = 1;
  2776  02B4  1678               	bsf	(_need_update/8),(_need_update)&7
  2777  02B5  2AB6               	goto	l4523
  2778                           	line	235
  2779                           	
  2780  02B6                     l527:	
  2781                           	line	237
  2782                           	
  2783  02B6                     l4523:	
  2784                           ;main.c: 235: }
  2785                           ;main.c: 237: if (seg.s60 == time.min) {
  2786  02B6  085A               	movf	(_seg),w
  2787  02B7  0663               	xorwf	(_time),w
  2788  02B8  1D03               	skipz
  2789  02B9  2ABB               	goto	u4521
  2790  02BA  2ABC               	goto	u4520
  2791  02BB                     u4521:
  2792  02BB  2AC2               	goto	l4529
  2793  02BC                     u4520:
  2794                           	line	238
  2795                           	
  2796  02BC                     l4525:	
  2797                           ;main.c: 238: need_update = 1;
  2798  02BC  1678               	bsf	(_need_update/8),(_need_update)&7
  2799                           	line	239
  2800                           	
  2801  02BD                     l4527:	
  2802                           ;main.c: 239: data |= 0x3C;
  2803  02BD  303C               	movlw	(03Ch)
  2804  02BE  00A4               	movwf	(??_next_segment+0)+0
  2805  02BF  0824               	movf	(??_next_segment+0)+0,w
  2806  02C0  04A5               	iorwf	(next_segment@data),f
  2807  02C1  2AC2               	goto	l4529
  2808                           	line	240
  2809                           	
  2810  02C2                     l528:	
  2811                           	line	242
  2812                           	
  2813  02C2                     l4529:	
  2814                           ;main.c: 240: }
  2815                           ;main.c: 242: if (seg.s60 == time.hour60) {
  2816  02C2  0865               	movf	0+(_time)+02h,w
  2817  02C3  065A               	xorwf	(_seg),w
  2818  02C4  1D03               	skipz
  2819  02C5  2AC7               	goto	u4531
  2820  02C6  2AC8               	goto	u4530
  2821  02C7                     u4531:
  2822  02C7  2ACE               	goto	l4535
  2823  02C8                     u4530:
  2824                           	line	243
  2825                           	
  2826  02C8                     l4531:	
  2827                           ;main.c: 243: need_update = 1;
  2828  02C8  1678               	bsf	(_need_update/8),(_need_update)&7
  2829                           	line	244
  2830                           	
  2831  02C9                     l4533:	
  2832                           ;main.c: 244: data |= 0xE0;
  2833  02C9  30E0               	movlw	(0E0h)
  2834  02CA  00A4               	movwf	(??_next_segment+0)+0
  2835  02CB  0824               	movf	(??_next_segment+0)+0,w
  2836  02CC  04A5               	iorwf	(next_segment@data),f
  2837  02CD  2ACE               	goto	l4535
  2838                           	line	245
  2839                           	
  2840  02CE                     l529:	
  2841                           	line	250
  2842                           	
  2843  02CE                     l4535:	
  2844                           ;main.c: 245: }
  2845                           ;main.c: 250: if (need_update || updated) {
  2846  02CE  1A78               	btfsc	(_need_update/8),(_need_update)&7
  2847  02CF  2AD1               	goto	u4541
  2848  02D0  2AD2               	goto	u4540
  2849  02D1                     u4541:
  2850  02D1  2AD7               	goto	l4539
  2851  02D2                     u4540:
  2852                           	
  2853  02D2                     l4537:	
  2854  02D2  1EF8               	btfss	(_updated/8),(_updated)&7
  2855  02D3  2AD5               	goto	u4551
  2856  02D4  2AD6               	goto	u4550
  2857  02D5                     u4551:
  2858  02D5  2ADA               	goto	l4541
  2859  02D6                     u4550:
  2860  02D6  2AD7               	goto	l4539
  2861                           	
  2862  02D7                     l532:	
  2863                           	line	251
  2864                           	
  2865  02D7                     l4539:	
  2866                           ;main.c: 251: shift_send(data);
  2867  02D7  0825               	movf	(next_segment@data),w
  2868  02D8  2653               	fcall	_shift_send
  2869  02D9  2ADA               	goto	l4541
  2870                           	line	252
  2871                           	
  2872  02DA                     l530:	
  2873                           	line	253
  2874                           	
  2875  02DA                     l4541:	
  2876                           ;main.c: 252: }
  2877                           ;main.c: 253: updated = need_update;
  2878  02DA  12F8               	bcf	(_updated/8),(_updated)&7
  2879  02DB  1E78               	btfss	(_need_update/8),(_need_update)&7
  2880  02DC  2ADE               	goto	u4565
  2881  02DD  16F8               	bsf	(_updated/8),(_updated)&7
  2882  02DE                     u4565:
  2883                           
  2884                           	line	256
  2885                           	
  2886  02DE                     l4543:	
  2887                           ;main.c: 256: seg.s60++;
  2888  02DE  3001               	movlw	(01h)
  2889  02DF  1283               	bcf	status, 5	;RP0=0, select bank0
  2890  02E0  1303               	bcf	status, 6	;RP1=0, select bank0
  2891  02E1  00A4               	movwf	(??_next_segment+0)+0
  2892  02E2  0824               	movf	(??_next_segment+0)+0,w
  2893  02E3  07DA               	addwf	(_seg),f
  2894                           	line	258
  2895                           	
  2896  02E4                     l4545:	
  2897                           ;main.c: 258: if (seg.s60 == 1 || seg.s60 == 31 )
  2898  02E4  085A               	movf	(_seg),w
  2899  02E5  3A01               	xorlw	01h
  2900  02E6  1903               	skipnz
  2901  02E7  2AE9               	goto	u4571
  2902  02E8  2AEA               	goto	u4570
  2903  02E9                     u4571:
  2904  02E9  2AF1               	goto	l4549
  2905  02EA                     u4570:
  2906                           	
  2907  02EA                     l4547:	
  2908  02EA  085A               	movf	(_seg),w
  2909  02EB  3A1F               	xorlw	01Fh
  2910  02EC  1D03               	skipz
  2911  02ED  2AEF               	goto	u4581
  2912  02EE  2AF0               	goto	u4580
  2913  02EF                     u4581:
  2914  02EF  2AF6               	goto	l4551
  2915  02F0                     u4580:
  2916  02F0  2AF1               	goto	l4549
  2917                           	
  2918  02F1                     l535:	
  2919                           	line	259
  2920                           	
  2921  02F1                     l4549:	
  2922                           ;main.c: 259: seg.tsl = 2;
  2923  02F1  3002               	movlw	(02h)
  2924  02F2  00A4               	movwf	(??_next_segment+0)+0
  2925  02F3  0824               	movf	(??_next_segment+0)+0,w
  2926  02F4  00DB               	movwf	0+(_seg)+01h
  2927  02F5  2AFB               	goto	l525
  2928                           	line	260
  2929                           	
  2930  02F6                     l533:	
  2931                           	line	261
  2932                           	
  2933  02F6                     l4551:	
  2934                           ;main.c: 260: else
  2935                           ;main.c: 261: seg.tsl = 1;
  2936  02F6  01DB               	clrf	0+(_seg)+01h
  2937  02F7  1403               	bsf	status,0
  2938  02F8  0DDB               	rlf	0+(_seg)+01h,f
  2939  02F9  2AFB               	goto	l525
  2940                           	
  2941  02FA                     l536:	
  2942  02FA  2AFB               	goto	l525
  2943                           	line	263
  2944                           	
  2945  02FB                     l4553:	
  2946                           	line	264
  2947                           ;main.c: 263: return;
  2948                           	
  2949  02FB                     l525:	
  2950  02FB  0008               	return
  2951                           	opt stack 0
  2952                           GLOBAL	__end_of_next_segment
  2953  02FC                     	__end_of_next_segment:
  2954 ;; =============== function _next_segment ends ============
  2955                           
  2956                           	signat	_next_segment,88
  2957                           	global	_what_time_is_now
  2958                           psect	text868,local,class=CODE,delta=2
  2959                           global __ptext868
  2960  0358                     __ptext868:
  2961                           
  2962 ;; *************** function _what_time_is_now *****************
  2963 ;; Defined at:
  2964 ;;		line 156 in file "main.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;		None
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;  data            1   11[BANK0 ] unsigned char 
  2969 ;;  rv              1   10[BANK0 ] unsigned char 
  2970 ;; Return value:  Size  Location     Type
  2971 ;;		None               void
  2972 ;; Registers used:
  2973 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2974 ;; Tracked objects:
  2975 ;;		On entry : 0/0
  2976 ;;		On exit  : 0/0
  2977 ;;		Unchanged: 0/0
  2978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2979 ;;      Params:         0       0       0       0
  2980 ;;      Locals:         0       2       0       0
  2981 ;;      Temps:          0       3       0       0
  2982 ;;      Totals:         0       5       0       0
  2983 ;;Total ram usage:        5 bytes
  2984 ;; Hardware stack levels used:    1
  2985 ;; Hardware stack levels required when called:    4
  2986 ;; This function calls:
  2987 ;;		_set_it_faster
  2988 ;;		_i2c_read
  2989 ;;		___bmul
  2990 ;;		_shift_send
  2991 ;;		_bit_on
  2992 ;; This function is called by:
  2993 ;;		_sync
  2994 ;;		_application_reset
  2995 ;;		_init_normal
  2996 ;; This function uses a non-reentrant model
  2997 ;;
  2998                           psect	text868
  2999                           	file	"main.c"
  3000                           	line	156
  3001                           	global	__size_of_what_time_is_now
  3002  004F                     	__size_of_what_time_is_now	equ	__end_of_what_time_is_now-_what_time_is_now
  3003                           	
  3004  0358                     _what_time_is_now:	
  3005                           	opt	stack 2
  3006                           ; Regs used in _what_time_is_now: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3007                           	line	158
  3008                           	
  3009  0358                     l4479:	
  3010                           ;main.c: 157: uns8 data;
  3011                           ;main.c: 158: set_it_faster(0);
  3012  0358  3000               	movlw	(0)
  3013  0359  260D               	fcall	_set_it_faster
  3014                           	line	166
  3015                           	
  3016  035A                     l4481:	
  3017                           ;main.c: 164: uns8 rv;
  3018                           ;main.c: 166: rv = i2c_read(0xA3, 0x04, &data);
  3019  035A  3004               	movlw	(04h)
  3020  035B  1283               	bcf	status, 5	;RP0=0, select bank0
  3021  035C  1303               	bcf	status, 6	;RP1=0, select bank0
  3022  035D  00A7               	movwf	(??_what_time_is_now+0)+0
  3023  035E  0827               	movf	(??_what_time_is_now+0)+0,w
  3024  035F  00A2               	movwf	(?_i2c_read)
  3025  0360  302B               	movlw	(what_time_is_now@data)&0ffh
  3026  0361  00A8               	movwf	(??_what_time_is_now+1)+0
  3027  0362  0828               	movf	(??_what_time_is_now+1)+0,w
  3028  0363  00A3               	movwf	(0+?_i2c_read+01h)
  3029  0364  30A3               	movlw	(0A3h)
  3030  0365  2137               	fcall	_i2c_read
  3031  0366  1283               	bcf	status, 5	;RP0=0, select bank0
  3032  0367  1303               	bcf	status, 6	;RP1=0, select bank0
  3033  0368  00A9               	movwf	(??_what_time_is_now+2)+0
  3034  0369  0829               	movf	(??_what_time_is_now+2)+0,w
  3035  036A  00AA               	movwf	(what_time_is_now@rv)
  3036                           	line	167
  3037                           	
  3038  036B                     l4483:	
  3039                           ;main.c: 167: if (rv)
  3040  036B  082A               	movf	(what_time_is_now@rv),w
  3041  036C  1D03               	skipz
  3042  036D  2B6F               	goto	u4470
  3043  036E  2B71               	goto	l4487
  3044  036F                     u4470:
  3045  036F  2B9F               	goto	l4503
  3046                           	line	168
  3047                           	
  3048  0370                     l4485:	
  3049                           ;main.c: 168: goto error;
  3050  0370  2B9F               	goto	l4503
  3051                           	
  3052  0371                     l508:	
  3053                           	line	169
  3054                           	
  3055  0371                     l4487:	
  3056                           ;main.c: 169: time.hrs = data & 0x3F;
  3057  0371  082B               	movf	(what_time_is_now@data),w
  3058  0372  393F               	andlw	03Fh
  3059  0373  00A7               	movwf	(??_what_time_is_now+0)+0
  3060  0374  0827               	movf	(??_what_time_is_now+0)+0,w
  3061  0375  00E4               	movwf	0+(_time)+01h
  3062                           	line	171
  3063                           	
  3064  0376                     l4489:	
  3065                           ;main.c: 171: rv = i2c_read(0xA3, 0x03, &data);
  3066  0376  3003               	movlw	(03h)
  3067  0377  00A7               	movwf	(??_what_time_is_now+0)+0
  3068  0378  0827               	movf	(??_what_time_is_now+0)+0,w
  3069  0379  00A2               	movwf	(?_i2c_read)
  3070  037A  302B               	movlw	(what_time_is_now@data)&0ffh
  3071  037B  00A8               	movwf	(??_what_time_is_now+1)+0
  3072  037C  0828               	movf	(??_what_time_is_now+1)+0,w
  3073  037D  00A3               	movwf	(0+?_i2c_read+01h)
  3074  037E  30A3               	movlw	(0A3h)
  3075  037F  2137               	fcall	_i2c_read
  3076  0380  1283               	bcf	status, 5	;RP0=0, select bank0
  3077  0381  1303               	bcf	status, 6	;RP1=0, select bank0
  3078  0382  00A9               	movwf	(??_what_time_is_now+2)+0
  3079  0383  0829               	movf	(??_what_time_is_now+2)+0,w
  3080  0384  00AA               	movwf	(what_time_is_now@rv)
  3081                           	line	172
  3082                           	
  3083  0385                     l4491:	
  3084                           ;main.c: 172: if (rv)
  3085  0385  082A               	movf	(what_time_is_now@rv),w
  3086  0386  1D03               	skipz
  3087  0387  2B89               	goto	u4480
  3088  0388  2B8B               	goto	l4495
  3089  0389                     u4480:
  3090  0389  2B9F               	goto	l4503
  3091                           	line	173
  3092                           	
  3093  038A                     l4493:	
  3094                           ;main.c: 173: goto error;
  3095  038A  2B9F               	goto	l4503
  3096                           	
  3097  038B                     l510:	
  3098                           	line	175
  3099                           	
  3100  038B                     l4495:	
  3101                           ;main.c: 175: time.min = data & 0x7F;
  3102  038B  082B               	movf	(what_time_is_now@data),w
  3103  038C  397F               	andlw	07Fh
  3104  038D  00A7               	movwf	(??_what_time_is_now+0)+0
  3105  038E  0827               	movf	(??_what_time_is_now+0)+0,w
  3106  038F  00E3               	movwf	(_time)
  3107                           	line	176
  3108                           	
  3109  0390                     l4497:	
  3110                           ;main.c: 176: time.hour60 = time.hrs*5;
  3111  0390  3005               	movlw	(05h)
  3112  0391  00A7               	movwf	(??_what_time_is_now+0)+0
  3113  0392  0827               	movf	(??_what_time_is_now+0)+0,w
  3114  0393  00F4               	movwf	(?___bmul)
  3115  0394  0864               	movf	0+(_time)+01h,w
  3116  0395  25F5               	fcall	___bmul
  3117  0396  1283               	bcf	status, 5	;RP0=0, select bank0
  3118  0397  1303               	bcf	status, 6	;RP1=0, select bank0
  3119  0398  00A8               	movwf	(??_what_time_is_now+1)+0
  3120  0399  0828               	movf	(??_what_time_is_now+1)+0,w
  3121  039A  00E5               	movwf	0+(_time)+02h
  3122                           	line	178
  3123                           	
  3124  039B                     l4499:	
  3125                           ;main.c: 178: set_it_faster(1);
  3126  039B  3001               	movlw	(01h)
  3127  039C  260D               	fcall	_set_it_faster
  3128  039D  2BA6               	goto	l511
  3129                           	line	180
  3130                           	
  3131  039E                     l4501:	
  3132                           ;main.c: 180: return;
  3133  039E  2BA6               	goto	l511
  3134                           	line	181
  3135                           ;main.c: 181: error:
  3136                           	
  3137  039F                     l509:	
  3138                           	line	182
  3139                           	
  3140  039F                     l4503:	
  3141                           ;main.c: 182: shift_send(0x00);
  3142  039F  3000               	movlw	(0)
  3143  03A0  2653               	fcall	_shift_send
  3144                           	line	183
  3145                           	
  3146  03A1                     l4505:	
  3147                           ;main.c: 183: bit_on(0x02);
  3148  03A1  3002               	movlw	(02h)
  3149  03A2  2641               	fcall	_bit_on
  3150                           	line	184
  3151                           	
  3152  03A3                     l4507:	
  3153                           ;main.c: 184: GIE = 0;
  3154  03A3  138B               	bcf	(95/8),(95)&7
  3155  03A4  2BA5               	goto	l513
  3156                           	line	185
  3157                           ;main.c: 185: while(1)
  3158                           	
  3159  03A5                     l512:	
  3160                           	line	186
  3161                           ;main.c: 186: ;
  3162                           	
  3163  03A5                     l513:	
  3164                           	line	185
  3165  03A5  2BA5               	goto	l513
  3166                           	
  3167  03A6                     l514:	
  3168                           	line	191
  3169                           ;main.c: 187: return;
  3170                           	
  3171  03A6                     l511:	
  3172  03A6  0008               	return
  3173                           	opt stack 0
  3174                           GLOBAL	__end_of_what_time_is_now
  3175  03A7                     	__end_of_what_time_is_now:
  3176 ;; =============== function _what_time_is_now ends ============
  3177                           
  3178                           	signat	_what_time_is_now,88
  3179                           	global	_i2c_write
  3180                           psect	text869,local,class=CODE,delta=2
  3181                           global __ptext869
  3182  02FC                     __ptext869:
  3183                           
  3184 ;; *************** function _i2c_write *****************
  3185 ;; Defined at:
  3186 ;;		line 89 in file "i2c.c"
  3187 ;; Parameters:    Size  Location     Type
  3188 ;;  dev             1    wreg     unsigned char 
  3189 ;;  addr            1    2[BANK0 ] unsigned char 
  3190 ;;  data            1    3[BANK0 ] unsigned char 
  3191 ;; Auto vars:     Size  Location     Type
  3192 ;;  dev             1    4[BANK0 ] unsigned char 
  3193 ;; Return value:  Size  Location     Type
  3194 ;;                  1    wreg      unsigned char 
  3195 ;; Registers used:
  3196 ;;		wreg, status,2, status,0, pclath, cstack
  3197 ;; Tracked objects:
  3198 ;;		On entry : 0/0
  3199 ;;		On exit  : 0/0
  3200 ;;		Unchanged: 0/0
  3201 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3202 ;;      Params:         0       2       0       0
  3203 ;;      Locals:         0       1       0       0
  3204 ;;      Temps:          1       0       0       0
  3205 ;;      Totals:         1       3       0       0
  3206 ;;Total ram usage:        4 bytes
  3207 ;; Hardware stack levels used:    1
  3208 ;; Hardware stack levels required when called:    3
  3209 ;; This function calls:
  3210 ;;		_i2c_write_byte
  3211 ;; This function is called by:
  3212 ;;		_rtc_setup
  3213 ;;		_main
  3214 ;;		_test_rtc
  3215 ;; This function uses a non-reentrant model
  3216 ;;
  3217                           psect	text869
  3218                           	file	"i2c.c"
  3219                           	line	89
  3220                           	global	__size_of_i2c_write
  3221  005C                     	__size_of_i2c_write	equ	__end_of_i2c_write-_i2c_write
  3222                           	
  3223  02FC                     _i2c_write:	
  3224                           	opt	stack 4
  3225                           ; Regs used in _i2c_write: [wreg+status,2+status,0+pclath+cstack]
  3226                           ;i2c_write@dev stored from wreg
  3227                           	line	95
  3228  02FC  1283               	bcf	status, 5	;RP0=0, select bank0
  3229  02FD  1303               	bcf	status, 6	;RP1=0, select bank0
  3230  02FE  00A4               	movwf	(i2c_write@dev)
  3231                           	
  3232  02FF                     l4439:	
  3233                           ;i2c.c: 95: dev &= 0xFE;
  3234  02FF  30FE               	movlw	(0FEh)
  3235  0300  00F7               	movwf	(??_i2c_write+0)+0
  3236  0301  0877               	movf	(??_i2c_write+0)+0,w
  3237  0302  05A4               	andwf	(i2c_write@dev),f
  3238  0303  2B05               	goto	l4441
  3239                           	line	96
  3240                           ;i2c.c: 96: do {do {asm("nop"); TRISB4 = 1; } while(0); do {asm("nop"); RB1 = 0; TRISB1 
                                 = 0; } while(0); do {asm("nop"); RB4 = 0; TRISB4 = 0; } while(0);} while(0);
  3241                           	
  3242  0304                     l1165:	
  3243  0304  2B05               	goto	l4441
  3244                           	
  3245  0305                     l1166:	
  3246                           	
  3247  0305                     l4441:	
  3248                           # 96 "i2c.c"
  3249  0305  0000               nop ;#
  3250                           psect	text869
  3251                           	
  3252  0306                     l4443:	
  3253  0306  1683               	bsf	status, 5	;RP0=1, select bank1
  3254  0307  1303               	bcf	status, 6	;RP1=0, select bank1
  3255  0308  1606               	bsf	(1076/8)^080h,(1076)&7
  3256  0309  2B0B               	goto	l4445
  3257                           	
  3258  030A                     l1167:	
  3259  030A  2B0B               	goto	l4445
  3260                           	
  3261  030B                     l1168:	
  3262                           	
  3263  030B                     l4445:	
  3264                           # 96 "i2c.c"
  3265  030B  0000               nop ;#
  3266                           psect	text869
  3267                           	
  3268  030C                     l4447:	
  3269  030C  1283               	bcf	status, 5	;RP0=0, select bank0
  3270  030D  1303               	bcf	status, 6	;RP1=0, select bank0
  3271  030E  1086               	bcf	(49/8),(49)&7
  3272                           	
  3273  030F                     l4449:	
  3274  030F  1683               	bsf	status, 5	;RP0=1, select bank1
  3275  0310  1303               	bcf	status, 6	;RP1=0, select bank1
  3276  0311  1086               	bcf	(1073/8)^080h,(1073)&7
  3277  0312  2B14               	goto	l4451
  3278                           	
  3279  0313                     l1169:	
  3280  0313  2B14               	goto	l4451
  3281                           	
  3282  0314                     l1170:	
  3283                           	
  3284  0314                     l4451:	
  3285                           # 96 "i2c.c"
  3286  0314  0000               nop ;#
  3287                           psect	text869
  3288                           	
  3289  0315                     l4453:	
  3290  0315  1283               	bcf	status, 5	;RP0=0, select bank0
  3291  0316  1303               	bcf	status, 6	;RP1=0, select bank0
  3292  0317  1206               	bcf	(52/8),(52)&7
  3293                           	
  3294  0318                     l4455:	
  3295  0318  1683               	bsf	status, 5	;RP0=1, select bank1
  3296  0319  1303               	bcf	status, 6	;RP1=0, select bank1
  3297  031A  1206               	bcf	(1076/8)^080h,(1076)&7
  3298  031B  2B1D               	goto	l4457
  3299                           	
  3300  031C                     l1171:	
  3301  031C  2B1D               	goto	l4457
  3302                           	
  3303  031D                     l1172:	
  3304                           	line	98
  3305                           	
  3306  031D                     l4457:	
  3307                           ;i2c.c: 98: if (i2c_write_byte(dev))
  3308  031D  1283               	bcf	status, 5	;RP0=0, select bank0
  3309  031E  1303               	bcf	status, 6	;RP1=0, select bank0
  3310  031F  0824               	movf	(i2c_write@dev),w
  3311  0320  246F               	fcall	_i2c_write_byte
  3312  0321  3A00               	xorlw	0
  3313  0322  1903               	skipnz
  3314  0323  2B25               	goto	u4441
  3315  0324  2B26               	goto	u4440
  3316  0325                     u4441:
  3317  0325  2B29               	goto	l4463
  3318  0326                     u4440:
  3319                           	line	99
  3320                           	
  3321  0326                     l4459:	
  3322                           ;i2c.c: 99: return 0xFF;
  3323  0326  30FF               	movlw	(0FFh)
  3324  0327  2B57               	goto	l1174
  3325                           	
  3326  0328                     l4461:	
  3327  0328  2B57               	goto	l1174
  3328                           	
  3329  0329                     l1173:	
  3330                           	line	100
  3331                           	
  3332  0329                     l4463:	
  3333                           ;i2c.c: 100: if (i2c_write_byte(addr))
  3334  0329  1283               	bcf	status, 5	;RP0=0, select bank0
  3335  032A  1303               	bcf	status, 6	;RP1=0, select bank0
  3336  032B  0822               	movf	(i2c_write@addr),w
  3337  032C  246F               	fcall	_i2c_write_byte
  3338  032D  3A00               	xorlw	0
  3339  032E  1903               	skipnz
  3340  032F  2B31               	goto	u4451
  3341  0330  2B32               	goto	u4450
  3342  0331                     u4451:
  3343  0331  2B35               	goto	l4469
  3344  0332                     u4450:
  3345                           	line	101
  3346                           	
  3347  0332                     l4465:	
  3348                           ;i2c.c: 101: return 0xFF;
  3349  0332  30FF               	movlw	(0FFh)
  3350  0333  2B57               	goto	l1174
  3351                           	
  3352  0334                     l4467:	
  3353  0334  2B57               	goto	l1174
  3354                           	
  3355  0335                     l1175:	
  3356                           	line	102
  3357                           	
  3358  0335                     l4469:	
  3359                           ;i2c.c: 102: if (i2c_write_byte(data))
  3360  0335  1283               	bcf	status, 5	;RP0=0, select bank0
  3361  0336  1303               	bcf	status, 6	;RP1=0, select bank0
  3362  0337  0823               	movf	(i2c_write@data),w
  3363  0338  246F               	fcall	_i2c_write_byte
  3364  0339  3A00               	xorlw	0
  3365  033A  1903               	skipnz
  3366  033B  2B3D               	goto	u4461
  3367  033C  2B3E               	goto	u4460
  3368  033D                     u4461:
  3369  033D  2B42               	goto	l1178
  3370  033E                     u4460:
  3371                           	line	103
  3372                           	
  3373  033E                     l4471:	
  3374                           ;i2c.c: 103: return 0xFF;
  3375  033E  30FF               	movlw	(0FFh)
  3376  033F  2B57               	goto	l1174
  3377                           	
  3378  0340                     l4473:	
  3379  0340  2B57               	goto	l1174
  3380                           	
  3381  0341                     l1176:	
  3382  0341  2B42               	goto	l1178
  3383                           	line	104
  3384                           ;i2c.c: 104: do {do {asm("nop"); RB1 = 0; TRISB1 = 0; } while(0); do {asm("nop"); TRISB4
                                  = 1; } while(0); do {asm("nop"); TRISB1 = 1; } while(0);} while(0);
  3385                           	
  3386  0342                     l1177:	
  3387                           	
  3388  0342                     l1178:	
  3389                           # 104 "i2c.c"
  3390  0342  0000               nop ;#
  3391                           psect	text869
  3392  0343  1283               	bcf	status, 5	;RP0=0, select bank0
  3393  0344  1303               	bcf	status, 6	;RP1=0, select bank0
  3394  0345  1086               	bcf	(49/8),(49)&7
  3395  0346  1683               	bsf	status, 5	;RP0=1, select bank1
  3396  0347  1303               	bcf	status, 6	;RP1=0, select bank1
  3397  0348  1086               	bcf	(1073/8)^080h,(1073)&7
  3398  0349  2B4A               	goto	l1180
  3399                           	
  3400  034A                     l1179:	
  3401                           	
  3402  034A                     l1180:	
  3403                           # 104 "i2c.c"
  3404  034A  0000               nop ;#
  3405                           psect	text869
  3406  034B  1683               	bsf	status, 5	;RP0=1, select bank1
  3407  034C  1303               	bcf	status, 6	;RP1=0, select bank1
  3408  034D  1606               	bsf	(1076/8)^080h,(1076)&7
  3409  034E  2B4F               	goto	l1182
  3410                           	
  3411  034F                     l1181:	
  3412                           	
  3413  034F                     l1182:	
  3414                           # 104 "i2c.c"
  3415  034F  0000               nop ;#
  3416                           psect	text869
  3417  0350  1683               	bsf	status, 5	;RP0=1, select bank1
  3418  0351  1303               	bcf	status, 6	;RP1=0, select bank1
  3419  0352  1486               	bsf	(1073/8)^080h,(1073)&7
  3420  0353  2B55               	goto	l4475
  3421                           	
  3422  0354                     l1183:	
  3423  0354  2B55               	goto	l4475
  3424                           	
  3425  0355                     l1184:	
  3426                           	line	105
  3427                           	
  3428  0355                     l4475:	
  3429                           ;i2c.c: 105: return 0;
  3430  0355  3000               	movlw	(0)
  3431  0356  2B57               	goto	l1174
  3432                           	
  3433  0357                     l4477:	
  3434                           	line	106
  3435                           	
  3436  0357                     l1174:	
  3437  0357  0008               	return
  3438                           	opt stack 0
  3439                           GLOBAL	__end_of_i2c_write
  3440  0358                     	__end_of_i2c_write:
  3441 ;; =============== function _i2c_write ends ============
  3442                           
  3443                           	signat	_i2c_write,12409
  3444                           	global	_i2c_read
  3445                           psect	text870,local,class=CODE,delta=2
  3446                           global __ptext870
  3447  0137                     __ptext870:
  3448                           
  3449 ;; *************** function _i2c_read *****************
  3450 ;; Defined at:
  3451 ;;		line 111 in file "i2c.c"
  3452 ;; Parameters:    Size  Location     Type
  3453 ;;  dev             1    wreg     unsigned char 
  3454 ;;  addr            1    2[BANK0 ] unsigned char 
  3455 ;;  data            1    3[BANK0 ] PTR unsigned char 
  3456 ;;		 -> test_rtc@data(1), what_time_is_now@data(1), 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  dev             1    6[BANK0 ] unsigned char 
  3459 ;;  d               1    5[BANK0 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      unsigned char 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3469 ;;      Params:         0       2       0       0
  3470 ;;      Locals:         0       2       0       0
  3471 ;;      Temps:          0       1       0       0
  3472 ;;      Totals:         0       5       0       0
  3473 ;;Total ram usage:        5 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:    3
  3476 ;; This function calls:
  3477 ;;		_i2c_write_byte
  3478 ;;		_i2c_read_byte
  3479 ;; This function is called by:
  3480 ;;		_what_time_is_now
  3481 ;;		_test_rtc
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           psect	text870
  3485                           	file	"i2c.c"
  3486                           	line	111
  3487                           	global	__size_of_i2c_read
  3488  007D                     	__size_of_i2c_read	equ	__end_of_i2c_read-_i2c_read
  3489                           	
  3490  0137                     _i2c_read:	
  3491                           	opt	stack 2
  3492                           ; Regs used in _i2c_read: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3493                           ;i2c_read@dev stored from wreg
  3494  0137  1283               	bcf	status, 5	;RP0=0, select bank0
  3495  0138  1303               	bcf	status, 6	;RP1=0, select bank0
  3496  0139  00A6               	movwf	(i2c_read@dev)
  3497                           	line	114
  3498                           ;i2c.c: 113: uns8 d;
  3499                           ;i2c.c: 114: do {do {asm("nop"); TRISB4 = 1; } while(0); do {asm("nop"); RB1 = 0; TRISB1
                                  = 0; } while(0); do {asm("nop"); RB4 = 0; TRISB4 = 0; } while(0);} while(0);
  3500                           	
  3501  013A                     l1187:	
  3502                           	
  3503  013A                     l1188:	
  3504                           # 114 "i2c.c"
  3505  013A  0000               nop ;#
  3506                           psect	text870
  3507  013B  1683               	bsf	status, 5	;RP0=1, select bank1
  3508  013C  1303               	bcf	status, 6	;RP1=0, select bank1
  3509  013D  1606               	bsf	(1076/8)^080h,(1076)&7
  3510  013E  293F               	goto	l1190
  3511                           	
  3512  013F                     l1189:	
  3513                           	
  3514  013F                     l1190:	
  3515                           # 114 "i2c.c"
  3516  013F  0000               nop ;#
  3517                           psect	text870
  3518  0140  1283               	bcf	status, 5	;RP0=0, select bank0
  3519  0141  1303               	bcf	status, 6	;RP1=0, select bank0
  3520  0142  1086               	bcf	(49/8),(49)&7
  3521  0143  1683               	bsf	status, 5	;RP0=1, select bank1
  3522  0144  1303               	bcf	status, 6	;RP1=0, select bank1
  3523  0145  1086               	bcf	(1073/8)^080h,(1073)&7
  3524  0146  2947               	goto	l1192
  3525                           	
  3526  0147                     l1191:	
  3527                           	
  3528  0147                     l1192:	
  3529                           # 114 "i2c.c"
  3530  0147  0000               nop ;#
  3531                           psect	text870
  3532  0148  1283               	bcf	status, 5	;RP0=0, select bank0
  3533  0149  1303               	bcf	status, 6	;RP1=0, select bank0
  3534  014A  1206               	bcf	(52/8),(52)&7
  3535  014B  1683               	bsf	status, 5	;RP0=1, select bank1
  3536  014C  1303               	bcf	status, 6	;RP1=0, select bank1
  3537  014D  1206               	bcf	(1076/8)^080h,(1076)&7
  3538  014E  2950               	goto	l4399
  3539                           	
  3540  014F                     l1193:	
  3541  014F  2950               	goto	l4399
  3542                           	
  3543  0150                     l1194:	
  3544                           	line	115
  3545                           	
  3546  0150                     l4399:	
  3547                           ;i2c.c: 115: if (i2c_write_byte(dev & 0xFE))
  3548  0150  1283               	bcf	status, 5	;RP0=0, select bank0
  3549  0151  1303               	bcf	status, 6	;RP1=0, select bank0
  3550  0152  0826               	movf	(i2c_read@dev),w
  3551  0153  39FE               	andlw	0FEh
  3552  0154  246F               	fcall	_i2c_write_byte
  3553  0155  3A00               	xorlw	0
  3554  0156  1903               	skipnz
  3555  0157  2959               	goto	u4411
  3556  0158  295A               	goto	u4410
  3557  0159                     u4411:
  3558  0159  295D               	goto	l4405
  3559  015A                     u4410:
  3560                           	line	116
  3561                           	
  3562  015A                     l4401:	
  3563                           ;i2c.c: 116: return 0xFF;
  3564  015A  30FF               	movlw	(0FFh)
  3565  015B  29B3               	goto	l1196
  3566                           	
  3567  015C                     l4403:	
  3568  015C  29B3               	goto	l1196
  3569                           	
  3570  015D                     l1195:	
  3571                           	line	117
  3572                           	
  3573  015D                     l4405:	
  3574                           ;i2c.c: 117: if (i2c_write_byte(addr))
  3575  015D  1283               	bcf	status, 5	;RP0=0, select bank0
  3576  015E  1303               	bcf	status, 6	;RP1=0, select bank0
  3577  015F  0822               	movf	(i2c_read@addr),w
  3578  0160  246F               	fcall	_i2c_write_byte
  3579  0161  3A00               	xorlw	0
  3580  0162  1903               	skipnz
  3581  0163  2965               	goto	u4421
  3582  0164  2966               	goto	u4420
  3583  0165                     u4421:
  3584  0165  296A               	goto	l1199
  3585  0166                     u4420:
  3586                           	line	118
  3587                           	
  3588  0166                     l4407:	
  3589                           ;i2c.c: 118: return 0xFF;
  3590  0166  30FF               	movlw	(0FFh)
  3591  0167  29B3               	goto	l1196
  3592                           	
  3593  0168                     l4409:	
  3594  0168  29B3               	goto	l1196
  3595                           	
  3596  0169                     l1197:	
  3597  0169  296A               	goto	l1199
  3598                           	line	119
  3599                           ;i2c.c: 119: do {do {asm("nop"); TRISB4 = 1; } while(0); do {asm("nop"); RB1 = 0; TRISB1
                                  = 0; } while(0); do {asm("nop"); RB4 = 0; TRISB4 = 0; } while(0);} while(0);
  3600                           	
  3601  016A                     l1198:	
  3602                           	
  3603  016A                     l1199:	
  3604                           # 119 "i2c.c"
  3605  016A  0000               nop ;#
  3606                           psect	text870
  3607  016B  1683               	bsf	status, 5	;RP0=1, select bank1
  3608  016C  1303               	bcf	status, 6	;RP1=0, select bank1
  3609  016D  1606               	bsf	(1076/8)^080h,(1076)&7
  3610  016E  296F               	goto	l1201
  3611                           	
  3612  016F                     l1200:	
  3613                           	
  3614  016F                     l1201:	
  3615                           # 119 "i2c.c"
  3616  016F  0000               nop ;#
  3617                           psect	text870
  3618  0170  1283               	bcf	status, 5	;RP0=0, select bank0
  3619  0171  1303               	bcf	status, 6	;RP1=0, select bank0
  3620  0172  1086               	bcf	(49/8),(49)&7
  3621  0173  1683               	bsf	status, 5	;RP0=1, select bank1
  3622  0174  1303               	bcf	status, 6	;RP1=0, select bank1
  3623  0175  1086               	bcf	(1073/8)^080h,(1073)&7
  3624  0176  2977               	goto	l1203
  3625                           	
  3626  0177                     l1202:	
  3627                           	
  3628  0177                     l1203:	
  3629                           # 119 "i2c.c"
  3630  0177  0000               nop ;#
  3631                           psect	text870
  3632  0178  1283               	bcf	status, 5	;RP0=0, select bank0
  3633  0179  1303               	bcf	status, 6	;RP1=0, select bank0
  3634  017A  1206               	bcf	(52/8),(52)&7
  3635  017B  1683               	bsf	status, 5	;RP0=1, select bank1
  3636  017C  1303               	bcf	status, 6	;RP1=0, select bank1
  3637  017D  1206               	bcf	(1076/8)^080h,(1076)&7
  3638  017E  2980               	goto	l4411
  3639                           	
  3640  017F                     l1204:	
  3641  017F  2980               	goto	l4411
  3642                           	
  3643  0180                     l1205:	
  3644                           	line	120
  3645                           	
  3646  0180                     l4411:	
  3647                           ;i2c.c: 120: if (i2c_write_byte(dev | 0x01))
  3648  0180  1283               	bcf	status, 5	;RP0=0, select bank0
  3649  0181  1303               	bcf	status, 6	;RP1=0, select bank0
  3650  0182  0826               	movf	(i2c_read@dev),w
  3651  0183  3801               	iorlw	01h
  3652  0184  246F               	fcall	_i2c_write_byte
  3653  0185  3A00               	xorlw	0
  3654  0186  1903               	skipnz
  3655  0187  2989               	goto	u4431
  3656  0188  298A               	goto	u4430
  3657  0189                     u4431:
  3658  0189  298D               	goto	l4417
  3659  018A                     u4430:
  3660                           	line	121
  3661                           	
  3662  018A                     l4413:	
  3663                           ;i2c.c: 121: return 0xFF;
  3664  018A  30FF               	movlw	(0FFh)
  3665  018B  29B3               	goto	l1196
  3666                           	
  3667  018C                     l4415:	
  3668  018C  29B3               	goto	l1196
  3669                           	
  3670  018D                     l1206:	
  3671                           	line	122
  3672                           	
  3673  018D                     l4417:	
  3674                           ;i2c.c: 122: d = i2c_read_byte();
  3675  018D  2501               	fcall	_i2c_read_byte
  3676  018E  1283               	bcf	status, 5	;RP0=0, select bank0
  3677  018F  1303               	bcf	status, 6	;RP1=0, select bank0
  3678  0190  00A4               	movwf	(??_i2c_read+0)+0
  3679  0191  0824               	movf	(??_i2c_read+0)+0,w
  3680  0192  00A5               	movwf	(i2c_read@d)
  3681                           	line	123
  3682                           	
  3683  0193                     l4419:	
  3684                           ;i2c.c: 123: *data = d;
  3685  0193  0825               	movf	(i2c_read@d),w
  3686  0194  00A4               	movwf	(??_i2c_read+0)+0
  3687  0195  0823               	movf	(i2c_read@data),w
  3688  0196  0084               	movwf	fsr0
  3689  0197  0824               	movf	(??_i2c_read+0)+0,w
  3690  0198  1383               	bcf	status, 7	;select IRP bank0
  3691  0199  0080               	movwf	indf
  3692  019A  299C               	goto	l4421
  3693                           	line	124
  3694                           ;i2c.c: 124: do {do {asm("nop"); RB1 = 0; TRISB1 = 0; } while(0); do {asm("nop"); TRISB4
                                  = 1; } while(0); do {asm("nop"); TRISB1 = 1; } while(0);} while(0);
  3695                           	
  3696  019B                     l1207:	
  3697  019B  299C               	goto	l4421
  3698                           	
  3699  019C                     l1208:	
  3700                           	
  3701  019C                     l4421:	
  3702                           # 124 "i2c.c"
  3703  019C  0000               nop ;#
  3704                           psect	text870
  3705                           	
  3706  019D                     l4423:	
  3707  019D  1283               	bcf	status, 5	;RP0=0, select bank0
  3708  019E  1303               	bcf	status, 6	;RP1=0, select bank0
  3709  019F  1086               	bcf	(49/8),(49)&7
  3710                           	
  3711  01A0                     l4425:	
  3712  01A0  1683               	bsf	status, 5	;RP0=1, select bank1
  3713  01A1  1303               	bcf	status, 6	;RP1=0, select bank1
  3714  01A2  1086               	bcf	(1073/8)^080h,(1073)&7
  3715  01A3  29A5               	goto	l4427
  3716                           	
  3717  01A4                     l1209:	
  3718  01A4  29A5               	goto	l4427
  3719                           	
  3720  01A5                     l1210:	
  3721                           	
  3722  01A5                     l4427:	
  3723                           # 124 "i2c.c"
  3724  01A5  0000               nop ;#
  3725                           psect	text870
  3726                           	
  3727  01A6                     l4429:	
  3728  01A6  1683               	bsf	status, 5	;RP0=1, select bank1
  3729  01A7  1303               	bcf	status, 6	;RP1=0, select bank1
  3730  01A8  1606               	bsf	(1076/8)^080h,(1076)&7
  3731  01A9  29AB               	goto	l4431
  3732                           	
  3733  01AA                     l1211:	
  3734  01AA  29AB               	goto	l4431
  3735                           	
  3736  01AB                     l1212:	
  3737                           	
  3738  01AB                     l4431:	
  3739                           # 124 "i2c.c"
  3740  01AB  0000               nop ;#
  3741                           psect	text870
  3742                           	
  3743  01AC                     l4433:	
  3744  01AC  1683               	bsf	status, 5	;RP0=1, select bank1
  3745  01AD  1303               	bcf	status, 6	;RP1=0, select bank1
  3746  01AE  1486               	bsf	(1073/8)^080h,(1073)&7
  3747  01AF  29B1               	goto	l4435
  3748                           	
  3749  01B0                     l1213:	
  3750  01B0  29B1               	goto	l4435
  3751                           	
  3752  01B1                     l1214:	
  3753                           	line	125
  3754                           	
  3755  01B1                     l4435:	
  3756                           ;i2c.c: 125: return 0;
  3757  01B1  3000               	movlw	(0)
  3758  01B2  29B3               	goto	l1196
  3759                           	
  3760  01B3                     l4437:	
  3761                           	line	126
  3762                           	
  3763  01B3                     l1196:	
  3764  01B3  0008               	return
  3765                           	opt stack 0
  3766                           GLOBAL	__end_of_i2c_read
  3767  01B4                     	__end_of_i2c_read:
  3768 ;; =============== function _i2c_read ends ============
  3769                           
  3770                           	signat	_i2c_read,12409
  3771                           	global	_shift_send
  3772                           psect	text871,local,class=CODE,delta=2
  3773                           global __ptext871
  3774  0653                     __ptext871:
  3775                           
  3776 ;; *************** function _shift_send *****************
  3777 ;; Defined at:
  3778 ;;		line 127 in file "main.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;  data            1    wreg     unsigned char 
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  data            1    3[BANK0 ] unsigned char 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;		None               void
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3792 ;;      Params:         0       0       0       0
  3793 ;;      Locals:         0       1       0       0
  3794 ;;      Temps:          0       0       0       0
  3795 ;;      Totals:         0       1       0       0
  3796 ;;Total ram usage:        1 bytes
  3797 ;; Hardware stack levels used:    1
  3798 ;; Hardware stack levels required when called:    3
  3799 ;; This function calls:
  3800 ;;		_shift_write
  3801 ;;		_shift_show
  3802 ;; This function is called by:
  3803 ;;		_what_time_is_now
  3804 ;;		_next_segment
  3805 ;;		_application_reset
  3806 ;;		_init_normal
  3807 ;;		_main
  3808 ;; This function uses a non-reentrant model
  3809 ;;
  3810                           psect	text871
  3811                           	file	"main.c"
  3812                           	line	127
  3813                           	global	__size_of_shift_send
  3814  0007                     	__size_of_shift_send	equ	__end_of_shift_send-_shift_send
  3815                           	
  3816  0653                     _shift_send:	
  3817                           	opt	stack 4
  3818                           ; Regs used in _shift_send: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3819                           ;shift_send@data stored from wreg
  3820  0653  1283               	bcf	status, 5	;RP0=0, select bank0
  3821  0654  1303               	bcf	status, 6	;RP1=0, select bank0
  3822  0655  00A3               	movwf	(shift_send@data)
  3823                           	line	128
  3824                           	
  3825  0656                     l4395:	
  3826                           ;main.c: 128: shift_write(data);
  3827  0656  0823               	movf	(shift_send@data),w
  3828  0657  23A7               	fcall	_shift_write
  3829                           	line	129
  3830                           	
  3831  0658                     l4397:	
  3832                           ;main.c: 129: shift_show();
  3833  0658  265A               	fcall	_shift_show
  3834                           	line	130
  3835                           	
  3836  0659                     l497:	
  3837  0659  0008               	return
  3838                           	opt stack 0
  3839                           GLOBAL	__end_of_shift_send
  3840  065A                     	__end_of_shift_send:
  3841 ;; =============== function _shift_send ends ============
  3842                           
  3843                           	signat	_shift_send,4216
  3844                           	global	_i2c_read_byte
  3845                           psect	text872,local,class=CODE,delta=2
  3846                           global __ptext872
  3847  0501                     __ptext872:
  3848                           
  3849 ;; *************** function _i2c_read_byte *****************
  3850 ;; Defined at:
  3851 ;;		line 75 in file "i2c.c"
  3852 ;; Parameters:    Size  Location     Type
  3853 ;;		None
  3854 ;; Auto vars:     Size  Location     Type
  3855 ;;  data            1    1[BANK0 ] unsigned char 
  3856 ;;  i               1    0[BANK0 ] unsigned char 
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      unsigned char 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0, pclath, cstack
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3866 ;;      Params:         0       0       0       0
  3867 ;;      Locals:         0       2       0       0
  3868 ;;      Temps:          2       0       0       0
  3869 ;;      Totals:         2       2       0       0
  3870 ;;Total ram usage:        4 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; Hardware stack levels required when called:    2
  3873 ;; This function calls:
  3874 ;;		_i2c_read_bit
  3875 ;;		_i2c_write_bit
  3876 ;; This function is called by:
  3877 ;;		_i2c_read
  3878 ;; This function uses a non-reentrant model
  3879 ;;
  3880                           psect	text872
  3881                           	file	"i2c.c"
  3882                           	line	75
  3883                           	global	__size_of_i2c_read_byte
  3884  002A                     	__size_of_i2c_read_byte	equ	__end_of_i2c_read_byte-_i2c_read_byte
  3885                           	
  3886  0501                     _i2c_read_byte:	
  3887                           	opt	stack 2
  3888                           ; Regs used in _i2c_read_byte: [wreg+status,2+status,0+pclath+cstack]
  3889                           	line	77
  3890                           	
  3891  0501                     l4375:	
  3892                           ;i2c.c: 76: uns8 i;
  3893                           ;i2c.c: 77: uns8 data = 0;
  3894  0501  1283               	bcf	status, 5	;RP0=0, select bank0
  3895  0502  1303               	bcf	status, 6	;RP1=0, select bank0
  3896  0503  01A1               	clrf	(i2c_read_byte@data)
  3897                           	line	78
  3898                           ;i2c.c: 78: for (i=0; i<8; i++) {
  3899  0504  01A0               	clrf	(i2c_read_byte@i)
  3900                           	
  3901  0505                     l4377:	
  3902  0505  3008               	movlw	(08h)
  3903  0506  0220               	subwf	(i2c_read_byte@i),w
  3904  0507  1C03               	skipc
  3905  0508  2D0A               	goto	u4391
  3906  0509  2D0B               	goto	u4390
  3907  050A                     u4391:
  3908  050A  2D0D               	goto	l4381
  3909  050B                     u4390:
  3910  050B  2D24               	goto	l4389
  3911                           	
  3912  050C                     l4379:	
  3913  050C  2D24               	goto	l4389
  3914                           	
  3915  050D                     l1160:	
  3916                           	line	79
  3917                           	
  3918  050D                     l4381:	
  3919                           ;i2c.c: 79: data = data<<1;
  3920  050D  0821               	movf	(i2c_read_byte@data),w
  3921  050E  00F6               	movwf	(??_i2c_read_byte+0)+0
  3922  050F  0776               	addwf	(??_i2c_read_byte+0)+0,w
  3923  0510  00F7               	movwf	(??_i2c_read_byte+1)+0
  3924  0511  0877               	movf	(??_i2c_read_byte+1)+0,w
  3925  0512  00A1               	movwf	(i2c_read_byte@data)
  3926                           	line	80
  3927                           	
  3928  0513                     l4383:	
  3929                           ;i2c.c: 80: data |= i2c_read_bit();
  3930  0513  2552               	fcall	_i2c_read_bit
  3931  0514  00F6               	movwf	(??_i2c_read_byte+0)+0
  3932  0515  0876               	movf	(??_i2c_read_byte+0)+0,w
  3933  0516  1283               	bcf	status, 5	;RP0=0, select bank0
  3934  0517  1303               	bcf	status, 6	;RP1=0, select bank0
  3935  0518  04A1               	iorwf	(i2c_read_byte@data),f
  3936                           	line	78
  3937                           	
  3938  0519                     l4385:	
  3939  0519  3001               	movlw	(01h)
  3940  051A  00F6               	movwf	(??_i2c_read_byte+0)+0
  3941  051B  0876               	movf	(??_i2c_read_byte+0)+0,w
  3942  051C  07A0               	addwf	(i2c_read_byte@i),f
  3943                           	
  3944  051D                     l4387:	
  3945  051D  3008               	movlw	(08h)
  3946  051E  0220               	subwf	(i2c_read_byte@i),w
  3947  051F  1C03               	skipc
  3948  0520  2D22               	goto	u4401
  3949  0521  2D23               	goto	u4400
  3950  0522                     u4401:
  3951  0522  2D0D               	goto	l4381
  3952  0523                     u4400:
  3953  0523  2D24               	goto	l4389
  3954                           	
  3955  0524                     l1161:	
  3956                           	line	84
  3957                           	
  3958  0524                     l4389:	
  3959                           ;i2c.c: 81: }
  3960                           ;i2c.c: 84: i2c_write_bit(0);
  3961  0524  3000               	movlw	(0)
  3962  0525  2578               	fcall	_i2c_write_bit
  3963                           	line	85
  3964                           	
  3965  0526                     l4391:	
  3966                           ;i2c.c: 85: return data;
  3967  0526  1283               	bcf	status, 5	;RP0=0, select bank0
  3968  0527  1303               	bcf	status, 6	;RP1=0, select bank0
  3969  0528  0821               	movf	(i2c_read_byte@data),w
  3970  0529  2D2A               	goto	l1162
  3971                           	
  3972  052A                     l4393:	
  3973                           	line	86
  3974                           	
  3975  052A                     l1162:	
  3976  052A  0008               	return
  3977                           	opt stack 0
  3978                           GLOBAL	__end_of_i2c_read_byte
  3979  052B                     	__end_of_i2c_read_byte:
  3980 ;; =============== function _i2c_read_byte ends ============
  3981                           
  3982                           	signat	_i2c_read_byte,89
  3983                           	global	_i2c_write_byte
  3984                           psect	text873,local,class=CODE,delta=2
  3985                           global __ptext873
  3986  046F                     __ptext873:
  3987                           
  3988 ;; *************** function _i2c_write_byte *****************
  3989 ;; Defined at:
  3990 ;;		line 60 in file "i2c.c"
  3991 ;; Parameters:    Size  Location     Type
  3992 ;;  byte            1    wreg     unsigned char 
  3993 ;; Auto vars:     Size  Location     Type
  3994 ;;  byte            1    0[BANK0 ] unsigned char 
  3995 ;;  i               1    1[BANK0 ] unsigned char 
  3996 ;; Return value:  Size  Location     Type
  3997 ;;                  1    wreg      unsigned char 
  3998 ;; Registers used:
  3999 ;;		wreg, status,2, status,0, pclath, cstack
  4000 ;; Tracked objects:
  4001 ;;		On entry : 0/0
  4002 ;;		On exit  : 0/0
  4003 ;;		Unchanged: 0/0
  4004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4005 ;;      Params:         0       0       0       0
  4006 ;;      Locals:         0       2       0       0
  4007 ;;      Temps:          1       0       0       0
  4008 ;;      Totals:         1       2       0       0
  4009 ;;Total ram usage:        3 bytes
  4010 ;; Hardware stack levels used:    1
  4011 ;; Hardware stack levels required when called:    2
  4012 ;; This function calls:
  4013 ;;		_i2c_write_bit
  4014 ;;		_i2c_check_ack
  4015 ;; This function is called by:
  4016 ;;		_i2c_write
  4017 ;;		_i2c_read
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           psect	text873
  4021                           	file	"i2c.c"
  4022                           	line	60
  4023                           	global	__size_of_i2c_write_byte
  4024  0034                     	__size_of_i2c_write_byte	equ	__end_of_i2c_write_byte-_i2c_write_byte
  4025                           	
  4026  046F                     _i2c_write_byte:	
  4027                           	opt	stack 4
  4028                           ; Regs used in _i2c_write_byte: [wreg+status,2+status,0+pclath+cstack]
  4029                           ;i2c_write_byte@byte stored from wreg
  4030                           	line	64
  4031  046F  1283               	bcf	status, 5	;RP0=0, select bank0
  4032  0470  1303               	bcf	status, 6	;RP1=0, select bank0
  4033  0471  00A0               	movwf	(i2c_write_byte@byte)
  4034                           	
  4035  0472                     l4353:	
  4036                           ;i2c.c: 63: uns8 i;
  4037                           ;i2c.c: 64: for (i=0; i<8; i++) {
  4038  0472  01A1               	clrf	(i2c_write_byte@i)
  4039                           	
  4040  0473                     l4355:	
  4041  0473  3008               	movlw	(08h)
  4042  0474  0221               	subwf	(i2c_write_byte@i),w
  4043  0475  1C03               	skipc
  4044  0476  2C78               	goto	u4351
  4045  0477  2C79               	goto	u4350
  4046  0478                     u4351:
  4047  0478  2C7B               	goto	l4359
  4048  0479                     u4350:
  4049  0479  2C97               	goto	l4365
  4050                           	
  4051  047A                     l4357:	
  4052  047A  2C97               	goto	l4365
  4053                           	
  4054  047B                     l1154:	
  4055                           	line	66
  4056                           	
  4057  047B                     l4359:	
  4058                           ;i2c.c: 66: i2c_write_bit((byte >> (7-i)) & 0x01);
  4059  047B  0820               	movf	(i2c_write_byte@byte),w
  4060  047C  00F6               	movwf	(??_i2c_write_byte+0)+0
  4061  047D  0321               	decf	(i2c_write_byte@i),w
  4062  047E  3AFF               	xorlw	0ffh
  4063  047F  3E07               	addlw	07h
  4064  0480  3E01               	addlw	1
  4065  0481  2C84               	goto	u4364
  4066  0482                     u4365:
  4067  0482  1003               	clrc
  4068  0483  0CF6               	rrf	(??_i2c_write_byte+0)+0,f
  4069  0484                     u4364:
  4070  0484  3EFF               	addlw	-1
  4071  0485  1D03               	skipz
  4072  0486  2C82               	goto	u4365
  4073  0487  0876               	movf	0+(??_i2c_write_byte+0)+0,w
  4074  0488  3901               	andlw	01h
  4075  0489  2578               	fcall	_i2c_write_bit
  4076                           	line	64
  4077                           	
  4078  048A                     l4361:	
  4079  048A  3001               	movlw	(01h)
  4080  048B  00F6               	movwf	(??_i2c_write_byte+0)+0
  4081  048C  0876               	movf	(??_i2c_write_byte+0)+0,w
  4082  048D  1283               	bcf	status, 5	;RP0=0, select bank0
  4083  048E  1303               	bcf	status, 6	;RP1=0, select bank0
  4084  048F  07A1               	addwf	(i2c_write_byte@i),f
  4085                           	
  4086  0490                     l4363:	
  4087  0490  3008               	movlw	(08h)
  4088  0491  0221               	subwf	(i2c_write_byte@i),w
  4089  0492  1C03               	skipc
  4090  0493  2C95               	goto	u4371
  4091  0494  2C96               	goto	u4370
  4092  0495                     u4371:
  4093  0495  2C7B               	goto	l4359
  4094  0496                     u4370:
  4095  0496  2C97               	goto	l4365
  4096                           	
  4097  0497                     l1155:	
  4098                           	line	68
  4099                           	
  4100  0497                     l4365:	
  4101                           ;i2c.c: 67: }
  4102                           ;i2c.c: 68: if (i2c_check_ack())
  4103  0497  2437               	fcall	_i2c_check_ack
  4104  0498  3A00               	xorlw	0
  4105  0499  1903               	skipnz
  4106  049A  2C9C               	goto	u4381
  4107  049B  2C9D               	goto	u4380
  4108  049C                     u4381:
  4109  049C  2CA0               	goto	l4371
  4110  049D                     u4380:
  4111                           	line	69
  4112                           	
  4113  049D                     l4367:	
  4114                           ;i2c.c: 69: return 0xFF;
  4115  049D  30FF               	movlw	(0FFh)
  4116  049E  2CA2               	goto	l1157
  4117                           	
  4118  049F                     l4369:	
  4119  049F  2CA2               	goto	l1157
  4120                           	
  4121  04A0                     l1156:	
  4122                           	line	71
  4123                           	
  4124  04A0                     l4371:	
  4125                           ;i2c.c: 71: return 0;
  4126  04A0  3000               	movlw	(0)
  4127  04A1  2CA2               	goto	l1157
  4128                           	
  4129  04A2                     l4373:	
  4130                           	line	72
  4131                           	
  4132  04A2                     l1157:	
  4133  04A2  0008               	return
  4134                           	opt stack 0
  4135                           GLOBAL	__end_of_i2c_write_byte
  4136  04A3                     	__end_of_i2c_write_byte:
  4137 ;; =============== function _i2c_write_byte ends ============
  4138                           
  4139                           	signat	_i2c_write_byte,4217
  4140                           	global	_shift_show
  4141                           psect	text874,local,class=CODE,delta=2
  4142                           global __ptext874
  4143  065A                     __ptext874:
  4144                           
  4145 ;; *************** function _shift_show *****************
  4146 ;; Defined at:
  4147 ;;		line 120 in file "main.c"
  4148 ;; Parameters:    Size  Location     Type
  4149 ;;		None
  4150 ;; Auto vars:     Size  Location     Type
  4151 ;;		None
  4152 ;; Return value:  Size  Location     Type
  4153 ;;		None               void
  4154 ;; Registers used:
  4155 ;;		wreg, status,2, status,0, pclath, cstack
  4156 ;; Tracked objects:
  4157 ;;		On entry : 0/0
  4158 ;;		On exit  : 0/0
  4159 ;;		Unchanged: 0/0
  4160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4161 ;;      Params:         0       0       0       0
  4162 ;;      Locals:         0       0       0       0
  4163 ;;      Temps:          0       0       0       0
  4164 ;;      Totals:         0       0       0       0
  4165 ;;Total ram usage:        0 bytes
  4166 ;; Hardware stack levels used:    1
  4167 ;; Hardware stack levels required when called:    2
  4168 ;; This function calls:
  4169 ;;		_bit_on
  4170 ;;		_bit_off
  4171 ;; This function is called by:
  4172 ;;		_shift_send
  4173 ;; This function uses a non-reentrant model
  4174 ;;
  4175                           psect	text874
  4176                           	file	"main.c"
  4177                           	line	120
  4178                           	global	__size_of_shift_show
  4179  0006                     	__size_of_shift_show	equ	__end_of_shift_show-_shift_show
  4180                           	
  4181  065A                     _shift_show:	
  4182                           	opt	stack 4
  4183                           ; Regs used in _shift_show: [wreg+status,2+status,0+pclath+cstack]
  4184                           	line	121
  4185                           	
  4186  065A                     l4349:	
  4187                           ;main.c: 121: bit_on(0x08);
  4188  065A  3008               	movlw	(08h)
  4189  065B  2641               	fcall	_bit_on
  4190                           	line	122
  4191                           	
  4192  065C                     l4351:	
  4193                           # 122 "main.c"
  4194  065C  0000               nop ;#
  4195                           psect	text874
  4196                           	line	123
  4197                           ;main.c: 123: bit_off(0x08);
  4198  065D  3008               	movlw	(08h)
  4199  065E  2637               	fcall	_bit_off
  4200                           	line	124
  4201                           	
  4202  065F                     l494:	
  4203  065F  0008               	return
  4204                           	opt stack 0
  4205                           GLOBAL	__end_of_shift_show
  4206  0660                     	__end_of_shift_show:
  4207 ;; =============== function _shift_show ends ============
  4208                           
  4209                           	signat	_shift_show,88
  4210                           	global	_shift_write
  4211                           psect	text875,local,class=CODE,delta=2
  4212                           global __ptext875
  4213  03A7                     __ptext875:
  4214                           
  4215 ;; *************** function _shift_write *****************
  4216 ;; Defined at:
  4217 ;;		line 101 in file "main.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  data            1    wreg     unsigned char 
  4220 ;; Auto vars:     Size  Location     Type
  4221 ;;  data            1    0[BANK0 ] unsigned char 
  4222 ;;  i               2    1[BANK0 ] int 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;		None               void
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4232 ;;      Params:         0       0       0       0
  4233 ;;      Locals:         0       3       0       0
  4234 ;;      Temps:          2       0       0       0
  4235 ;;      Totals:         2       3       0       0
  4236 ;;Total ram usage:        5 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:    2
  4239 ;; This function calls:
  4240 ;;		_bit_off
  4241 ;;		_bit_on
  4242 ;; This function is called by:
  4243 ;;		_shift_send
  4244 ;; This function uses a non-reentrant model
  4245 ;;
  4246                           psect	text875
  4247                           	file	"main.c"
  4248                           	line	101
  4249                           	global	__size_of_shift_write
  4250  0049                     	__size_of_shift_write	equ	__end_of_shift_write-_shift_write
  4251                           	
  4252  03A7                     _shift_write:	
  4253                           	opt	stack 4
  4254                           ; Regs used in _shift_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4255                           ;shift_write@data stored from wreg
  4256                           	line	104
  4257  03A7  1283               	bcf	status, 5	;RP0=0, select bank0
  4258  03A8  1303               	bcf	status, 6	;RP1=0, select bank0
  4259  03A9  00A0               	movwf	(shift_write@data)
  4260                           	
  4261  03AA                     l4329:	
  4262                           ;main.c: 102: int i;
  4263                           ;main.c: 104: bit_off(0x08);
  4264  03AA  3008               	movlw	(08h)
  4265  03AB  2637               	fcall	_bit_off
  4266                           	line	105
  4267                           ;main.c: 105: bit_off(0x10);
  4268  03AC  3010               	movlw	(010h)
  4269  03AD  2637               	fcall	_bit_off
  4270                           	line	106
  4271                           	
  4272  03AE                     l4331:	
  4273                           ;main.c: 106: for (i=0; i<8; i++) {
  4274  03AE  1283               	bcf	status, 5	;RP0=0, select bank0
  4275  03AF  1303               	bcf	status, 6	;RP1=0, select bank0
  4276  03B0  01A1               	clrf	(shift_write@i)
  4277  03B1  01A2               	clrf	(shift_write@i+1)
  4278                           	
  4279  03B2                     l4333:	
  4280  03B2  0822               	movf	(shift_write@i+1),w
  4281  03B3  3A80               	xorlw	80h
  4282  03B4  00FF               	movwf	btemp+1
  4283  03B5  3080               	movlw	(high(08h))^80h
  4284  03B6  027F               	subwf	btemp+1,w
  4285  03B7  1D03               	skipz
  4286  03B8  2BBB               	goto	u4325
  4287  03B9  3008               	movlw	low(08h)
  4288  03BA  0221               	subwf	(shift_write@i),w
  4289  03BB                     u4325:
  4290                           
  4291  03BB  1C03               	skipc
  4292  03BC  2BBE               	goto	u4321
  4293  03BD  2BBF               	goto	u4320
  4294  03BE                     u4321:
  4295  03BE  2BC1               	goto	l487
  4296  03BF                     u4320:
  4297  03BF  2BEF               	goto	l491
  4298                           	
  4299  03C0                     l4335:	
  4300  03C0  2BEF               	goto	l491
  4301                           	
  4302  03C1                     l487:	
  4303                           	line	107
  4304                           ;main.c: 107: if ((data & 0x01) != 0) {
  4305  03C1  1283               	bcf	status, 5	;RP0=0, select bank0
  4306  03C2  1303               	bcf	status, 6	;RP1=0, select bank0
  4307  03C3  1C20               	btfss	(shift_write@data),(0)&7
  4308  03C4  2BC6               	goto	u4331
  4309  03C5  2BC7               	goto	u4330
  4310  03C6                     u4331:
  4311  03C6  2BCA               	goto	l4339
  4312  03C7                     u4330:
  4313                           	line	108
  4314                           	
  4315  03C7                     l4337:	
  4316                           ;main.c: 108: bit_on(0x04);
  4317  03C7  3004               	movlw	(04h)
  4318  03C8  2641               	fcall	_bit_on
  4319                           	line	109
  4320                           ;main.c: 109: } else {
  4321  03C9  2BCC               	goto	l490
  4322                           	
  4323  03CA                     l489:	
  4324                           	line	110
  4325                           	
  4326  03CA                     l4339:	
  4327                           ;main.c: 110: bit_off(0x04);
  4328  03CA  3004               	movlw	(04h)
  4329  03CB  2637               	fcall	_bit_off
  4330                           	line	111
  4331                           	
  4332  03CC                     l490:	
  4333                           	line	113
  4334                           ;main.c: 111: }
  4335                           ;main.c: 113: bit_on(0x10);
  4336  03CC  3010               	movlw	(010h)
  4337  03CD  2641               	fcall	_bit_on
  4338                           	line	114
  4339                           	
  4340  03CE                     l4341:	
  4341                           ;main.c: 114: data = data >> 1;
  4342  03CE  1283               	bcf	status, 5	;RP0=0, select bank0
  4343  03CF  1303               	bcf	status, 6	;RP1=0, select bank0
  4344  03D0  0820               	movf	(shift_write@data),w
  4345  03D1  00F6               	movwf	(??_shift_write+0)+0
  4346  03D2  1003               	clrc
  4347  03D3  0C76               	rrf	(??_shift_write+0)+0,w
  4348  03D4  00F7               	movwf	(??_shift_write+1)+0
  4349  03D5  0877               	movf	(??_shift_write+1)+0,w
  4350  03D6  00A0               	movwf	(shift_write@data)
  4351                           	line	115
  4352                           	
  4353  03D7                     l4343:	
  4354                           ;main.c: 115: bit_off(0x10);
  4355  03D7  3010               	movlw	(010h)
  4356  03D8  2637               	fcall	_bit_off
  4357                           	line	106
  4358                           	
  4359  03D9                     l4345:	
  4360  03D9  3001               	movlw	low(01h)
  4361  03DA  1283               	bcf	status, 5	;RP0=0, select bank0
  4362  03DB  1303               	bcf	status, 6	;RP1=0, select bank0
  4363  03DC  07A1               	addwf	(shift_write@i),f
  4364  03DD  1803               	skipnc
  4365  03DE  0AA2               	incf	(shift_write@i+1),f
  4366  03DF  3000               	movlw	high(01h)
  4367  03E0  07A2               	addwf	(shift_write@i+1),f
  4368                           	
  4369  03E1                     l4347:	
  4370  03E1  0822               	movf	(shift_write@i+1),w
  4371  03E2  3A80               	xorlw	80h
  4372  03E3  00FF               	movwf	btemp+1
  4373  03E4  3080               	movlw	(high(08h))^80h
  4374  03E5  027F               	subwf	btemp+1,w
  4375  03E6  1D03               	skipz
  4376  03E7  2BEA               	goto	u4345
  4377  03E8  3008               	movlw	low(08h)
  4378  03E9  0221               	subwf	(shift_write@i),w
  4379  03EA                     u4345:
  4380                           
  4381  03EA  1C03               	skipc
  4382  03EB  2BED               	goto	u4341
  4383  03EC  2BEE               	goto	u4340
  4384  03ED                     u4341:
  4385  03ED  2BC1               	goto	l487
  4386  03EE                     u4340:
  4387  03EE  2BEF               	goto	l491
  4388                           	
  4389  03EF                     l488:	
  4390                           	line	117
  4391                           	
  4392  03EF                     l491:	
  4393  03EF  0008               	return
  4394                           	opt stack 0
  4395                           GLOBAL	__end_of_shift_write
  4396  03F0                     	__end_of_shift_write:
  4397 ;; =============== function _shift_write ends ============
  4398                           
  4399                           	signat	_shift_write,4216
  4400                           	global	___bmul
  4401                           psect	text876,local,class=CODE,delta=2
  4402                           global __ptext876
  4403  05F5                     __ptext876:
  4404                           
  4405 ;; *************** function ___bmul *****************
  4406 ;; Defined at:
  4407 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  multiplier      1    wreg     unsigned char 
  4410 ;;  multiplicand    1    4[COMMON] unsigned char 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;  multiplier      1    7[COMMON] unsigned char 
  4413 ;;  product         1    6[COMMON] unsigned char 
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      unsigned char 
  4416 ;; Registers used:
  4417 ;;		wreg, status,2, status,0
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4423 ;;      Params:         1       0       0       0
  4424 ;;      Locals:         2       0       0       0
  4425 ;;      Temps:          1       0       0       0
  4426 ;;      Totals:         4       0       0       0
  4427 ;;Total ram usage:        4 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    1
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_what_time_is_now
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           psect	text876
  4437                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  4438                           	line	3
  4439                           	global	__size_of___bmul
  4440  0018                     	__size_of___bmul	equ	__end_of___bmul-___bmul
  4441                           	
  4442  05F5                     ___bmul:	
  4443                           	opt	stack 4
  4444                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4445                           ;___bmul@multiplier stored from wreg
  4446  05F5  00F7               	movwf	(___bmul@multiplier)
  4447                           	line	4
  4448                           	
  4449  05F6                     l3727:	
  4450  05F6  01F6               	clrf	(___bmul@product)
  4451                           	line	6
  4452                           	
  4453  05F7                     l1673:	
  4454                           	line	7
  4455  05F7  1C77               	btfss	(___bmul@multiplier),(0)&7
  4456  05F8  2DFA               	goto	u3561
  4457  05F9  2DFB               	goto	u3560
  4458  05FA                     u3561:
  4459  05FA  2E00               	goto	l3731
  4460  05FB                     u3560:
  4461                           	line	8
  4462                           	
  4463  05FB                     l3729:	
  4464  05FB  0874               	movf	(___bmul@multiplicand),w
  4465  05FC  00F5               	movwf	(??___bmul+0)+0
  4466  05FD  0875               	movf	(??___bmul+0)+0,w
  4467  05FE  07F6               	addwf	(___bmul@product),f
  4468  05FF  2E00               	goto	l3731
  4469                           	
  4470  0600                     l1674:	
  4471                           	line	9
  4472                           	
  4473  0600                     l3731:	
  4474  0600  1003               	clrc
  4475  0601  0DF4               	rlf	(___bmul@multiplicand),f
  4476                           
  4477                           	line	10
  4478                           	
  4479  0602                     l3733:	
  4480  0602  1003               	clrc
  4481  0603  0CF7               	rrf	(___bmul@multiplier),f
  4482                           
  4483                           	line	11
  4484                           	
  4485  0604                     l3735:	
  4486  0604  08F7               	movf	(___bmul@multiplier),f
  4487  0605  1D03               	skipz
  4488  0606  2E08               	goto	u3571
  4489  0607  2E09               	goto	u3570
  4490  0608                     u3571:
  4491  0608  2DF7               	goto	l1673
  4492  0609                     u3570:
  4493  0609  2E0A               	goto	l3737
  4494                           	
  4495  060A                     l1675:	
  4496                           	line	12
  4497                           	
  4498  060A                     l3737:	
  4499  060A  0876               	movf	(___bmul@product),w
  4500  060B  2E0C               	goto	l1676
  4501                           	
  4502  060C                     l3739:	
  4503                           	line	13
  4504                           	
  4505  060C                     l1676:	
  4506  060C  0008               	return
  4507                           	opt stack 0
  4508                           GLOBAL	__end_of___bmul
  4509  060D                     	__end_of___bmul:
  4510 ;; =============== function ___bmul ends ============
  4511                           
  4512                           	signat	___bmul,8313
  4513                           	global	_i2c_check_ack
  4514                           psect	text877,local,class=CODE,delta=2
  4515                           global __ptext877
  4516  0437                     __ptext877:
  4517                           
  4518 ;; *************** function _i2c_check_ack *****************
  4519 ;; Defined at:
  4520 ;;		line 38 in file "i2c.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;  tmp             1    5[COMMON] unsigned char 
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1    wreg      unsigned char 
  4527 ;; Registers used:
  4528 ;;		wreg
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/0
  4531 ;;		On exit  : 0/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4534 ;;      Params:         0       0       0       0
  4535 ;;      Locals:         1       0       0       0
  4536 ;;      Temps:          1       0       0       0
  4537 ;;      Totals:         2       0       0       0
  4538 ;;Total ram usage:        2 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    1
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_i2c_write_byte
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           psect	text877
  4548                           	file	"i2c.c"
  4549                           	line	38
  4550                           	global	__size_of_i2c_check_ack
  4551  0038                     	__size_of_i2c_check_ack	equ	__end_of_i2c_check_ack-_i2c_check_ack
  4552                           	
  4553  0437                     _i2c_check_ack:	
  4554                           	opt	stack 4
  4555                           ; Regs used in _i2c_check_ack: [wreg]
  4556                           	line	40
  4557                           ;i2c.c: 39: uns8 tmp;
  4558                           ;i2c.c: 40: do {asm("nop"); TRISB1 = 1; } while(0);
  4559                           	
  4560  0437                     l1136:	
  4561                           # 40 "i2c.c"
  4562  0437  0000               nop ;#
  4563                           psect	text877
  4564  0438  1683               	bsf	status, 5	;RP0=1, select bank1
  4565  0439  1303               	bcf	status, 6	;RP1=0, select bank1
  4566  043A  1486               	bsf	(1073/8)^080h,(1073)&7
  4567  043B  2C3C               	goto	l1138
  4568                           	
  4569  043C                     l1137:	
  4570                           	line	41
  4571                           ;i2c.c: 41: do {asm("nop"); TRISB4 = 1; } while(0);
  4572                           	
  4573  043C                     l1138:	
  4574                           # 41 "i2c.c"
  4575  043C  0000               nop ;#
  4576                           psect	text877
  4577  043D  1683               	bsf	status, 5	;RP0=1, select bank1
  4578  043E  1303               	bcf	status, 6	;RP1=0, select bank1
  4579  043F  1606               	bsf	(1076/8)^080h,(1076)&7
  4580  0440  2C41               	goto	l4313
  4581                           	
  4582  0441                     l1139:	
  4583                           	line	42
  4584                           	
  4585  0441                     l4313:	
  4586                           ;i2c.c: 42: tmp = (RB1);
  4587  0441  3000               	movlw	0
  4588  0442  1283               	bcf	status, 5	;RP0=0, select bank0
  4589  0443  1303               	bcf	status, 6	;RP1=0, select bank0
  4590  0444  1886               	btfsc	(49/8),(49)&7
  4591  0445  3001               	movlw	1
  4592  0446  00F4               	movwf	(??_i2c_check_ack+0)+0
  4593  0447  0874               	movf	(??_i2c_check_ack+0)+0,w
  4594  0448  00F5               	movwf	(i2c_check_ack@tmp)
  4595  0449  2C4A               	goto	l4315
  4596                           	line	43
  4597                           ;i2c.c: 43: do {asm("nop"); RB4 = 0; TRISB4 = 0; } while(0);
  4598                           	
  4599  044A                     l1140:	
  4600                           	
  4601  044A                     l4315:	
  4602                           # 43 "i2c.c"
  4603  044A  0000               nop ;#
  4604                           psect	text877
  4605                           	
  4606  044B                     l4317:	
  4607  044B  1283               	bcf	status, 5	;RP0=0, select bank0
  4608  044C  1303               	bcf	status, 6	;RP1=0, select bank0
  4609  044D  1206               	bcf	(52/8),(52)&7
  4610                           	
  4611  044E                     l4319:	
  4612  044E  1683               	bsf	status, 5	;RP0=1, select bank1
  4613  044F  1303               	bcf	status, 6	;RP1=0, select bank1
  4614  0450  1206               	bcf	(1076/8)^080h,(1076)&7
  4615                           ;i2c.c: 45: if (1 && tmp != 0) {
  4616                           	
  4617  0451                     l1141:	
  4618                           	line	45
  4619  0451  0875               	movf	(i2c_check_ack@tmp),w
  4620  0452  1D03               	skipz
  4621  0453  2C55               	goto	u4310
  4622  0454  2C6C               	goto	l4325
  4623  0455                     u4310:
  4624  0455  2C56               	goto	l1144
  4625                           	line	46
  4626                           ;i2c.c: 46: do {do {asm("nop"); RB1 = 0; TRISB1 = 0; } while(0); do {asm("nop"); TRISB4 
                                 = 1; } while(0); do {asm("nop"); TRISB1 = 1; } while(0);} while(0);
  4627                           	
  4628  0456                     l1143:	
  4629                           	
  4630  0456                     l1144:	
  4631                           # 46 "i2c.c"
  4632  0456  0000               nop ;#
  4633                           psect	text877
  4634  0457  1283               	bcf	status, 5	;RP0=0, select bank0
  4635  0458  1303               	bcf	status, 6	;RP1=0, select bank0
  4636  0459  1086               	bcf	(49/8),(49)&7
  4637  045A  1683               	bsf	status, 5	;RP0=1, select bank1
  4638  045B  1303               	bcf	status, 6	;RP1=0, select bank1
  4639  045C  1086               	bcf	(1073/8)^080h,(1073)&7
  4640  045D  2C5E               	goto	l1146
  4641                           	
  4642  045E                     l1145:	
  4643                           	
  4644  045E                     l1146:	
  4645                           # 46 "i2c.c"
  4646  045E  0000               nop ;#
  4647                           psect	text877
  4648  045F  1683               	bsf	status, 5	;RP0=1, select bank1
  4649  0460  1303               	bcf	status, 6	;RP1=0, select bank1
  4650  0461  1606               	bsf	(1076/8)^080h,(1076)&7
  4651  0462  2C63               	goto	l1148
  4652                           	
  4653  0463                     l1147:	
  4654                           	
  4655  0463                     l1148:	
  4656                           # 46 "i2c.c"
  4657  0463  0000               nop ;#
  4658                           psect	text877
  4659  0464  1683               	bsf	status, 5	;RP0=1, select bank1
  4660  0465  1303               	bcf	status, 6	;RP1=0, select bank1
  4661  0466  1486               	bsf	(1073/8)^080h,(1073)&7
  4662  0467  2C69               	goto	l4321
  4663                           	
  4664  0468                     l1149:	
  4665  0468  2C69               	goto	l4321
  4666                           	
  4667  0469                     l1150:	
  4668                           	line	47
  4669                           	
  4670  0469                     l4321:	
  4671                           ;i2c.c: 47: return 0xFF;
  4672  0469  30FF               	movlw	(0FFh)
  4673  046A  2C6E               	goto	l1151
  4674                           	
  4675  046B                     l4323:	
  4676  046B  2C6E               	goto	l1151
  4677                           	line	48
  4678                           	
  4679  046C                     l1142:	
  4680                           	line	49
  4681                           	
  4682  046C                     l4325:	
  4683                           ;i2c.c: 48: }
  4684                           ;i2c.c: 49: return 0;
  4685  046C  3000               	movlw	(0)
  4686  046D  2C6E               	goto	l1151
  4687                           	
  4688  046E                     l4327:	
  4689                           	line	50
  4690                           	
  4691  046E                     l1151:	
  4692  046E  0008               	return
  4693                           	opt stack 0
  4694                           GLOBAL	__end_of_i2c_check_ack
  4695  046F                     	__end_of_i2c_check_ack:
  4696 ;; =============== function _i2c_check_ack ends ============
  4697                           
  4698                           	signat	_i2c_check_ack,89
  4699                           	global	_i2c_read_bit
  4700                           psect	text878,local,class=CODE,delta=2
  4701                           global __ptext878
  4702  0552                     __ptext878:
  4703                           
  4704 ;; *************** function _i2c_read_bit *****************
  4705 ;; Defined at:
  4706 ;;		line 23 in file "i2c.c"
  4707 ;; Parameters:    Size  Location     Type
  4708 ;;		None
  4709 ;; Auto vars:     Size  Location     Type
  4710 ;;  b               1    5[COMMON] unsigned char 
  4711 ;; Return value:  Size  Location     Type
  4712 ;;                  1    wreg      unsigned char 
  4713 ;; Registers used:
  4714 ;;		wreg
  4715 ;; Tracked objects:
  4716 ;;		On entry : 0/0
  4717 ;;		On exit  : 0/0
  4718 ;;		Unchanged: 0/0
  4719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4720 ;;      Params:         0       0       0       0
  4721 ;;      Locals:         1       0       0       0
  4722 ;;      Temps:          1       0       0       0
  4723 ;;      Totals:         2       0       0       0
  4724 ;;Total ram usage:        2 bytes
  4725 ;; Hardware stack levels used:    1
  4726 ;; Hardware stack levels required when called:    1
  4727 ;; This function calls:
  4728 ;;		Nothing
  4729 ;; This function is called by:
  4730 ;;		_i2c_read_byte
  4731 ;; This function uses a non-reentrant model
  4732 ;;
  4733                           psect	text878
  4734                           	file	"i2c.c"
  4735                           	line	23
  4736                           	global	__size_of_i2c_read_bit
  4737  0026                     	__size_of_i2c_read_bit	equ	__end_of_i2c_read_bit-_i2c_read_bit
  4738                           	
  4739  0552                     _i2c_read_bit:	
  4740                           	opt	stack 2
  4741                           ; Regs used in _i2c_read_bit: [wreg]
  4742                           	line	26
  4743                           ;i2c.c: 24: uns8 b;
  4744                           ;i2c.c: 26: do {asm("nop"); TRISB1 = 1; } while(0);
  4745                           	
  4746  0552                     l1125:	
  4747                           # 26 "i2c.c"
  4748  0552  0000               nop ;#
  4749                           psect	text878
  4750  0553  1683               	bsf	status, 5	;RP0=1, select bank1
  4751  0554  1303               	bcf	status, 6	;RP1=0, select bank1
  4752  0555  1486               	bsf	(1073/8)^080h,(1073)&7
  4753  0556  2D57               	goto	l1127
  4754                           	
  4755  0557                     l1126:	
  4756                           	line	27
  4757                           ;i2c.c: 27: do {asm("nop"); TRISB4 = 1; } while(0);
  4758                           	
  4759  0557                     l1127:	
  4760                           # 27 "i2c.c"
  4761  0557  0000               nop ;#
  4762                           psect	text878
  4763  0558  1683               	bsf	status, 5	;RP0=1, select bank1
  4764  0559  1303               	bcf	status, 6	;RP1=0, select bank1
  4765  055A  1606               	bsf	(1076/8)^080h,(1076)&7
  4766  055B  2D5C               	goto	l4295
  4767                           	
  4768  055C                     l1128:	
  4769                           	line	28
  4770                           	
  4771  055C                     l4295:	
  4772                           ;i2c.c: 28: b = (RB1);
  4773  055C  3000               	movlw	0
  4774  055D  1283               	bcf	status, 5	;RP0=0, select bank0
  4775  055E  1303               	bcf	status, 6	;RP1=0, select bank0
  4776  055F  1886               	btfsc	(49/8),(49)&7
  4777  0560  3001               	movlw	1
  4778  0561  00F4               	movwf	(??_i2c_read_bit+0)+0
  4779  0562  0874               	movf	(??_i2c_read_bit+0)+0,w
  4780  0563  00F5               	movwf	(i2c_read_bit@b)
  4781  0564  2D65               	goto	l4297
  4782                           	line	29
  4783                           ;i2c.c: 29: do {asm("nop"); RB4 = 0; TRISB4 = 0; } while(0);
  4784                           	
  4785  0565                     l1129:	
  4786                           	
  4787  0565                     l4297:	
  4788                           # 29 "i2c.c"
  4789  0565  0000               nop ;#
  4790                           psect	text878
  4791                           	
  4792  0566                     l4299:	
  4793  0566  1283               	bcf	status, 5	;RP0=0, select bank0
  4794  0567  1303               	bcf	status, 6	;RP1=0, select bank0
  4795  0568  1206               	bcf	(52/8),(52)&7
  4796                           	
  4797  0569                     l4301:	
  4798  0569  1683               	bsf	status, 5	;RP0=1, select bank1
  4799  056A  1303               	bcf	status, 6	;RP1=0, select bank1
  4800  056B  1206               	bcf	(1076/8)^080h,(1076)&7
  4801                           	
  4802  056C                     l1130:	
  4803                           	line	31
  4804                           ;i2c.c: 31: if (b)
  4805  056C  0875               	movf	(i2c_read_bit@b),w
  4806  056D  1D03               	skipz
  4807  056E  2D70               	goto	u4300
  4808  056F  2D74               	goto	l4309
  4809  0570                     u4300:
  4810                           	line	32
  4811                           	
  4812  0570                     l4303:	
  4813                           ;i2c.c: 32: return 1;
  4814  0570  3001               	movlw	(01h)
  4815  0571  2D77               	goto	l1132
  4816                           	
  4817  0572                     l4305:	
  4818  0572  2D77               	goto	l1132
  4819                           	
  4820  0573                     l4307:	
  4821  0573  2D77               	goto	l1132
  4822                           	line	33
  4823                           	
  4824  0574                     l1131:	
  4825                           	line	34
  4826                           	
  4827  0574                     l4309:	
  4828                           ;i2c.c: 33: else
  4829                           ;i2c.c: 34: return 0;
  4830  0574  3000               	movlw	(0)
  4831  0575  2D77               	goto	l1132
  4832                           	
  4833  0576                     l4311:	
  4834  0576  2D77               	goto	l1132
  4835                           	
  4836  0577                     l1133:	
  4837                           	line	35
  4838                           	
  4839  0577                     l1132:	
  4840  0577  0008               	return
  4841                           	opt stack 0
  4842                           GLOBAL	__end_of_i2c_read_bit
  4843  0578                     	__end_of_i2c_read_bit:
  4844 ;; =============== function _i2c_read_bit ends ============
  4845                           
  4846                           	signat	_i2c_read_bit,89
  4847                           	global	_i2c_write_bit
  4848                           psect	text879,local,class=CODE,delta=2
  4849                           global __ptext879
  4850  0578                     __ptext879:
  4851                           
  4852 ;; *************** function _i2c_write_bit *****************
  4853 ;; Defined at:
  4854 ;;		line 11 in file "i2c.c"
  4855 ;; Parameters:    Size  Location     Type
  4856 ;;  x               1    wreg     unsigned char 
  4857 ;; Auto vars:     Size  Location     Type
  4858 ;;  x               1    5[COMMON] unsigned char 
  4859 ;; Return value:  Size  Location     Type
  4860 ;;		None               void
  4861 ;; Registers used:
  4862 ;;		wreg, status,2, status,0
  4863 ;; Tracked objects:
  4864 ;;		On entry : 0/0
  4865 ;;		On exit  : 0/0
  4866 ;;		Unchanged: 0/0
  4867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4868 ;;      Params:         0       0       0       0
  4869 ;;      Locals:         1       0       0       0
  4870 ;;      Temps:          1       0       0       0
  4871 ;;      Totals:         2       0       0       0
  4872 ;;Total ram usage:        2 bytes
  4873 ;; Hardware stack levels used:    1
  4874 ;; Hardware stack levels required when called:    1
  4875 ;; This function calls:
  4876 ;;		Nothing
  4877 ;; This function is called by:
  4878 ;;		_i2c_write_byte
  4879 ;;		_i2c_read_byte
  4880 ;; This function uses a non-reentrant model
  4881 ;;
  4882                           psect	text879
  4883                           	file	"i2c.c"
  4884                           	line	11
  4885                           	global	__size_of_i2c_write_bit
  4886  0026                     	__size_of_i2c_write_bit	equ	__end_of_i2c_write_bit-_i2c_write_bit
  4887                           	
  4888  0578                     _i2c_write_bit:	
  4889                           	opt	stack 4
  4890                           ; Regs used in _i2c_write_bit: [wreg+status,2+status,0]
  4891                           ;i2c_write_bit@x stored from wreg
  4892  0578  00F5               	movwf	(i2c_write_bit@x)
  4893                           	line	12
  4894                           	
  4895  0579                     l4293:	
  4896                           ;i2c.c: 12: x &= 0x01;
  4897  0579  3001               	movlw	(01h)
  4898  057A  00F4               	movwf	(??_i2c_write_bit+0)+0
  4899  057B  0874               	movf	(??_i2c_write_bit+0)+0,w
  4900  057C  05F5               	andwf	(i2c_write_bit@x),f
  4901                           	line	13
  4902                           ;i2c.c: 13: if (x)
  4903  057D  0875               	movf	(i2c_write_bit@x),w
  4904  057E  1D03               	skipz
  4905  057F  2D81               	goto	u4290
  4906  0580  2D87               	goto	l1116
  4907  0581                     u4290:
  4908                           	line	14
  4909                           ;i2c.c: 14: do {asm("nop"); TRISB1 = 1; } while(0);
  4910                           	
  4911  0581                     l1113:	
  4912                           # 14 "i2c.c"
  4913  0581  0000               nop ;#
  4914                           psect	text879
  4915  0582  1683               	bsf	status, 5	;RP0=1, select bank1
  4916  0583  1303               	bcf	status, 6	;RP1=0, select bank1
  4917  0584  1486               	bsf	(1073/8)^080h,(1073)&7
  4918  0585  2D90               	goto	l1118
  4919                           	
  4920  0586                     l1114:	
  4921  0586  2D90               	goto	l1118
  4922                           	line	15
  4923                           	
  4924  0587                     l1112:	
  4925                           	line	16
  4926                           ;i2c.c: 15: else
  4927                           ;i2c.c: 16: do {asm("nop"); RB1 = 0; TRISB1 = 0; } while(0);
  4928                           	
  4929  0587                     l1116:	
  4930                           # 16 "i2c.c"
  4931  0587  0000               nop ;#
  4932                           psect	text879
  4933  0588  1283               	bcf	status, 5	;RP0=0, select bank0
  4934  0589  1303               	bcf	status, 6	;RP1=0, select bank0
  4935  058A  1086               	bcf	(49/8),(49)&7
  4936  058B  1683               	bsf	status, 5	;RP0=1, select bank1
  4937  058C  1303               	bcf	status, 6	;RP1=0, select bank1
  4938  058D  1086               	bcf	(1073/8)^080h,(1073)&7
  4939  058E  2D90               	goto	l1118
  4940                           	
  4941  058F                     l1117:	
  4942  058F  2D90               	goto	l1118
  4943                           	
  4944  0590                     l1115:	
  4945                           	line	17
  4946                           ;i2c.c: 17: do {asm("nop"); TRISB4 = 1; } while(0);
  4947                           	
  4948  0590                     l1118:	
  4949                           # 17 "i2c.c"
  4950  0590  0000               nop ;#
  4951                           psect	text879
  4952  0591  1683               	bsf	status, 5	;RP0=1, select bank1
  4953  0592  1303               	bcf	status, 6	;RP1=0, select bank1
  4954  0593  1606               	bsf	(1076/8)^080h,(1076)&7
  4955  0594  2D95               	goto	l1120
  4956                           	
  4957  0595                     l1119:	
  4958                           	line	19
  4959                           ;i2c.c: 19: do {asm("nop"); RB4 = 0; TRISB4 = 0; } while(0);
  4960                           	
  4961  0595                     l1120:	
  4962                           # 19 "i2c.c"
  4963  0595  0000               nop ;#
  4964                           psect	text879
  4965  0596  1283               	bcf	status, 5	;RP0=0, select bank0
  4966  0597  1303               	bcf	status, 6	;RP1=0, select bank0
  4967  0598  1206               	bcf	(52/8),(52)&7
  4968  0599  1683               	bsf	status, 5	;RP0=1, select bank1
  4969  059A  1303               	bcf	status, 6	;RP1=0, select bank1
  4970  059B  1206               	bcf	(1076/8)^080h,(1076)&7
  4971  059C  2D9D               	goto	l1122
  4972                           	
  4973  059D                     l1121:	
  4974                           	line	20
  4975                           	
  4976  059D                     l1122:	
  4977  059D  0008               	return
  4978                           	opt stack 0
  4979                           GLOBAL	__end_of_i2c_write_bit
  4980  059E                     	__end_of_i2c_write_bit:
  4981 ;; =============== function _i2c_write_bit ends ============
  4982                           
  4983                           	signat	_i2c_write_bit,4216
  4984                           	global	_wait_for_event
  4985                           psect	text880,local,class=CODE,delta=2
  4986                           global __ptext880
  4987  01B4                     __ptext880:
  4988                           
  4989 ;; *************** function _wait_for_event *****************
  4990 ;; Defined at:
  4991 ;;		line 591 in file "main.c"
  4992 ;; Parameters:    Size  Location     Type
  4993 ;;		None
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;  _i              1    6[COMMON] unsigned char 
  4996 ;;  rv              1    5[COMMON] unsigned char 
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  1    wreg      unsigned char 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5006 ;;      Params:         0       0       0       0
  5007 ;;      Locals:         2       0       0       0
  5008 ;;      Temps:          1       0       0       0
  5009 ;;      Totals:         3       0       0       0
  5010 ;;Total ram usage:        3 bytes
  5011 ;; Hardware stack levels used:    1
  5012 ;; Hardware stack levels required when called:    1
  5013 ;; This function calls:
  5014 ;;		Nothing
  5015 ;; This function is called by:
  5016 ;;		_main
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           psect	text880
  5020                           	file	"main.c"
  5021                           	line	591
  5022                           	global	__size_of_wait_for_event
  5023  007B                     	__size_of_wait_for_event	equ	__end_of_wait_for_event-_wait_for_event
  5024                           	
  5025  01B4                     _wait_for_event:	
  5026                           	opt	stack 6
  5027                           ; Regs used in _wait_for_event: [wreg+status,2+status,0]
  5028                           	line	594
  5029                           	
  5030  01B4                     l3657:	
  5031                           ;main.c: 594: _a = RB5;
  5032  01B4  1078               	bcf	(__a/8),(__a)&7
  5033  01B5  1283               	bcf	status, 5	;RP0=0, select bank0
  5034  01B6  1303               	bcf	status, 6	;RP1=0, select bank0
  5035  01B7  1E86               	btfss	(53/8),(53)&7
  5036  01B8  29BA               	goto	u3355
  5037  01B9  1478               	bsf	(__a/8),(__a)&7
  5038  01BA                     u3355:
  5039                           
  5040                           	line	595
  5041                           ;main.c: 595: _b = RA6;
  5042  01BA  10F8               	bcf	(__b/8),(__b)&7
  5043  01BB  1283               	bcf	status, 5	;RP0=0, select bank0
  5044  01BC  1303               	bcf	status, 6	;RP1=0, select bank0
  5045  01BD  1F05               	btfss	(46/8),(46)&7
  5046  01BE  29C0               	goto	u3365
  5047  01BF  14F8               	bsf	(__b/8),(__b)&7
  5048  01C0                     u3365:
  5049                           
  5050                           	line	597
  5051                           ;main.c: 597: while(_a == RB5 && _b == RA6)
  5052  01C0  29C2               	goto	l3659
  5053                           	
  5054  01C1                     l609:	
  5055  01C1  29C2               	goto	l3659
  5056                           	line	598
  5057                           ;main.c: 598: ;
  5058                           	
  5059  01C2                     l608:	
  5060                           	line	597
  5061                           	
  5062  01C2                     l3659:	
  5063  01C2  1283               	bcf	status, 5	;RP0=0, select bank0
  5064  01C3  1303               	bcf	status, 6	;RP1=0, select bank0
  5065  01C4  1A86               	btfsc	(53/8),(53)&7
  5066  01C5  29C7               	goto	u3371
  5067  01C6  29C9               	goto	u3370
  5068  01C7                     u3371:
  5069  01C7  3001               	movlw	1
  5070  01C8  29CA               	goto	u3372
  5071  01C9                     u3370:
  5072  01C9  3000               	movlw	0
  5073  01CA                     u3372:
  5074  01CA  00F4               	movwf	(??_wait_for_event+0)+0
  5075  01CB  1878               	btfsc	(__a/8),(__a)&7
  5076  01CC  29CE               	goto	u3381
  5077  01CD  29D0               	goto	u3380
  5078  01CE                     u3381:
  5079  01CE  3001               	movlw	1
  5080  01CF  29D1               	goto	u3382
  5081  01D0                     u3380:
  5082  01D0  3000               	movlw	0
  5083  01D1                     u3382:
  5084  01D1  0674               	xorwf	(??_wait_for_event+0)+0,w
  5085  01D2  1D03               	skipz
  5086  01D3  29D5               	goto	u3391
  5087  01D4  29D6               	goto	u3390
  5088  01D5                     u3391:
  5089  01D5  29EA               	goto	l613
  5090  01D6                     u3390:
  5091                           	
  5092  01D6                     l3661:	
  5093  01D6  1B05               	btfsc	(46/8),(46)&7
  5094  01D7  29D9               	goto	u3401
  5095  01D8  29DB               	goto	u3400
  5096  01D9                     u3401:
  5097  01D9  3001               	movlw	1
  5098  01DA  29DC               	goto	u3402
  5099  01DB                     u3400:
  5100  01DB  3000               	movlw	0
  5101  01DC                     u3402:
  5102  01DC  00F4               	movwf	(??_wait_for_event+0)+0
  5103  01DD  18F8               	btfsc	(__b/8),(__b)&7
  5104  01DE  29E0               	goto	u3411
  5105  01DF  29E2               	goto	u3410
  5106  01E0                     u3411:
  5107  01E0  3001               	movlw	1
  5108  01E1  29E3               	goto	u3412
  5109  01E2                     u3410:
  5110  01E2  3000               	movlw	0
  5111  01E3                     u3412:
  5112  01E3  0674               	xorwf	(??_wait_for_event+0)+0,w
  5113  01E4  1903               	skipnz
  5114  01E5  29E7               	goto	u3421
  5115  01E6  29E8               	goto	u3420
  5116  01E7                     u3421:
  5117  01E7  29C2               	goto	l3659
  5118  01E8                     u3420:
  5119  01E8  29EA               	goto	l613
  5120                           	
  5121  01E9                     l611:	
  5122  01E9  29EA               	goto	l613
  5123                           	
  5124  01EA                     l612:	
  5125                           	line	600
  5126                           ;main.c: 600: do {uns8 _i; for (_i=0; _i<200; _i++);} while(0);
  5127                           	
  5128  01EA                     l613:	
  5129  01EA  01F6               	clrf	(wait_for_event@_i)
  5130                           	
  5131  01EB                     l3663:	
  5132  01EB  30C8               	movlw	(0C8h)
  5133  01EC  0276               	subwf	(wait_for_event@_i),w
  5134  01ED  1C03               	skipc
  5135  01EE  29F0               	goto	u3431
  5136  01EF  29F1               	goto	u3430
  5137  01F0                     u3431:
  5138  01F0  29F3               	goto	l3667
  5139  01F1                     u3430:
  5140  01F1  29FE               	goto	l616
  5141                           	
  5142  01F2                     l3665:	
  5143  01F2  29FE               	goto	l616
  5144                           	
  5145  01F3                     l614:	
  5146                           	
  5147  01F3                     l3667:	
  5148  01F3  3001               	movlw	(01h)
  5149  01F4  00F4               	movwf	(??_wait_for_event+0)+0
  5150  01F5  0874               	movf	(??_wait_for_event+0)+0,w
  5151  01F6  07F6               	addwf	(wait_for_event@_i),f
  5152                           	
  5153  01F7                     l3669:	
  5154  01F7  30C8               	movlw	(0C8h)
  5155  01F8  0276               	subwf	(wait_for_event@_i),w
  5156  01F9  1C03               	skipc
  5157  01FA  29FC               	goto	u3441
  5158  01FB  29FD               	goto	u3440
  5159  01FC                     u3441:
  5160  01FC  29F3               	goto	l3667
  5161  01FD                     u3440:
  5162  01FD  29FE               	goto	l616
  5163                           	
  5164  01FE                     l615:	
  5165                           	
  5166  01FE                     l616:	
  5167                           	line	601
  5168                           ;main.c: 601: uns8 rv = 0;
  5169  01FE  01F5               	clrf	(wait_for_event@rv)
  5170                           	line	603
  5171                           ;main.c: 603: if (_a == 0 && RB5 == 1)
  5172  01FF  1878               	btfsc	(__a/8),(__a)&7
  5173  0200  2A02               	goto	u3451
  5174  0201  2A03               	goto	u3450
  5175  0202                     u3451:
  5176  0202  2A0A               	goto	l617
  5177  0203                     u3450:
  5178                           	
  5179  0203                     l3671:	
  5180  0203  1283               	bcf	status, 5	;RP0=0, select bank0
  5181  0204  1303               	bcf	status, 6	;RP1=0, select bank0
  5182  0205  1E86               	btfss	(53/8),(53)&7
  5183  0206  2A08               	goto	u3461
  5184  0207  2A09               	goto	u3460
  5185  0208                     u3461:
  5186  0208  2A0A               	goto	l617
  5187  0209                     u3460:
  5188                           	line	604
  5189                           	
  5190  0209                     l3673:	
  5191                           ;main.c: 604: rv |= 0x01;
  5192  0209  1475               	bsf	(wait_for_event@rv)+(0/8),(0)&7
  5193                           	
  5194  020A                     l617:	
  5195                           	line	605
  5196                           ;main.c: 605: if (_a == 1 && RB5 == 0)
  5197  020A  1C78               	btfss	(__a/8),(__a)&7
  5198  020B  2A0D               	goto	u3471
  5199  020C  2A0E               	goto	u3470
  5200  020D                     u3471:
  5201  020D  2A15               	goto	l618
  5202  020E                     u3470:
  5203                           	
  5204  020E                     l3675:	
  5205  020E  1283               	bcf	status, 5	;RP0=0, select bank0
  5206  020F  1303               	bcf	status, 6	;RP1=0, select bank0
  5207  0210  1A86               	btfsc	(53/8),(53)&7
  5208  0211  2A13               	goto	u3481
  5209  0212  2A14               	goto	u3480
  5210  0213                     u3481:
  5211  0213  2A15               	goto	l618
  5212  0214                     u3480:
  5213                           	line	606
  5214                           	
  5215  0214                     l3677:	
  5216                           ;main.c: 606: rv |= 0x02;
  5217  0214  14F5               	bsf	(wait_for_event@rv)+(1/8),(1)&7
  5218                           	
  5219  0215                     l618:	
  5220                           	line	608
  5221                           ;main.c: 608: if (_b == 0 && RA6 == 1)
  5222  0215  18F8               	btfsc	(__b/8),(__b)&7
  5223  0216  2A18               	goto	u3491
  5224  0217  2A19               	goto	u3490
  5225  0218                     u3491:
  5226  0218  2A20               	goto	l619
  5227  0219                     u3490:
  5228                           	
  5229  0219                     l3679:	
  5230  0219  1283               	bcf	status, 5	;RP0=0, select bank0
  5231  021A  1303               	bcf	status, 6	;RP1=0, select bank0
  5232  021B  1F05               	btfss	(46/8),(46)&7
  5233  021C  2A1E               	goto	u3501
  5234  021D  2A1F               	goto	u3500
  5235  021E                     u3501:
  5236  021E  2A20               	goto	l619
  5237  021F                     u3500:
  5238                           	line	609
  5239                           	
  5240  021F                     l3681:	
  5241                           ;main.c: 609: rv |= 0x10;
  5242  021F  1675               	bsf	(wait_for_event@rv)+(4/8),(4)&7
  5243                           	
  5244  0220                     l619:	
  5245                           	line	610
  5246                           ;main.c: 610: if (_b == 1 && RA6 == 0)
  5247  0220  1CF8               	btfss	(__b/8),(__b)&7
  5248  0221  2A23               	goto	u3511
  5249  0222  2A24               	goto	u3510
  5250  0223                     u3511:
  5251  0223  2A2C               	goto	l3687
  5252  0224                     u3510:
  5253                           	
  5254  0224                     l3683:	
  5255  0224  1283               	bcf	status, 5	;RP0=0, select bank0
  5256  0225  1303               	bcf	status, 6	;RP1=0, select bank0
  5257  0226  1B05               	btfsc	(46/8),(46)&7
  5258  0227  2A29               	goto	u3521
  5259  0228  2A2A               	goto	u3520
  5260  0229                     u3521:
  5261  0229  2A2C               	goto	l3687
  5262  022A                     u3520:
  5263                           	line	611
  5264                           	
  5265  022A                     l3685:	
  5266                           ;main.c: 611: rv |= 0x20;
  5267  022A  16F5               	bsf	(wait_for_event@rv)+(5/8),(5)&7
  5268  022B  2A2C               	goto	l3687
  5269                           	
  5270  022C                     l620:	
  5271                           	line	612
  5272                           	
  5273  022C                     l3687:	
  5274                           ;main.c: 612: return rv;
  5275  022C  0875               	movf	(wait_for_event@rv),w
  5276  022D  2A2E               	goto	l621
  5277                           	
  5278  022E                     l3689:	
  5279                           	line	613
  5280                           	
  5281  022E                     l621:	
  5282  022E  0008               	return
  5283                           	opt stack 0
  5284                           GLOBAL	__end_of_wait_for_event
  5285  022F                     	__end_of_wait_for_event:
  5286 ;; =============== function _wait_for_event ends ============
  5287                           
  5288                           	signat	_wait_for_event,89
  5289                           	global	_init_setup
  5290                           psect	text881,local,class=CODE,delta=2
  5291                           global __ptext881
  5292  0660                     __ptext881:
  5293                           
  5294 ;; *************** function _init_setup *****************
  5295 ;; Defined at:
  5296 ;;		line 506 in file "main.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;		None
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;		None               void
  5303 ;; Registers used:
  5304 ;;		status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5310 ;;      Params:         0       0       0       0
  5311 ;;      Locals:         0       0       0       0
  5312 ;;      Temps:          0       0       0       0
  5313 ;;      Totals:         0       0       0       0
  5314 ;;Total ram usage:        0 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    1
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_init
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           psect	text881
  5324                           	file	"main.c"
  5325                           	line	506
  5326                           	global	__size_of_init_setup
  5327  0006                     	__size_of_init_setup	equ	__end_of_init_setup-_init_setup
  5328                           	
  5329  0660                     _init_setup:	
  5330                           	opt	stack 5
  5331                           ; Regs used in _init_setup: [status]
  5332                           	line	507
  5333                           	
  5334  0660                     l3643:	
  5335                           ;main.c: 507: mode = 1;
  5336  0660  1283               	bcf	status, 5	;RP0=0, select bank0
  5337  0661  1303               	bcf	status, 6	;RP1=0, select bank0
  5338  0662  01DD               	clrf	(_mode)
  5339  0663  1403               	bsf	status,0
  5340  0664  0DDD               	rlf	(_mode),f
  5341                           	line	510
  5342                           	
  5343  0665                     l590:	
  5344  0665  0008               	return
  5345                           	opt stack 0
  5346                           GLOBAL	__end_of_init_setup
  5347  0666                     	__end_of_init_setup:
  5348 ;; =============== function _init_setup ends ============
  5349                           
  5350                           	signat	_init_setup,88
  5351                           	global	_next_minute
  5352                           psect	text882,local,class=CODE,delta=2
  5353                           global __ptext882
  5354  059E                     __ptext882:
  5355                           
  5356 ;; *************** function _next_minute *****************
  5357 ;; Defined at:
  5358 ;;		line 269 in file "main.c"
  5359 ;; Parameters:    Size  Location     Type
  5360 ;;		None
  5361 ;; Auto vars:     Size  Location     Type
  5362 ;;		None
  5363 ;; Return value:  Size  Location     Type
  5364 ;;		None               void
  5365 ;; Registers used:
  5366 ;;		wreg, status,2, status,0
  5367 ;; Tracked objects:
  5368 ;;		On entry : 0/0
  5369 ;;		On exit  : 0/0
  5370 ;;		Unchanged: 0/0
  5371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5372 ;;      Params:         0       0       0       0
  5373 ;;      Locals:         0       0       0       0
  5374 ;;      Temps:          1       0       0       0
  5375 ;;      Totals:         1       0       0       0
  5376 ;;Total ram usage:        1 bytes
  5377 ;; Hardware stack levels used:    1
  5378 ;; Hardware stack levels required when called:    1
  5379 ;; This function calls:
  5380 ;;		Nothing
  5381 ;; This function is called by:
  5382 ;;		_main
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           psect	text882
  5386                           	file	"main.c"
  5387                           	line	269
  5388                           	global	__size_of_next_minute
  5389  0022                     	__size_of_next_minute	equ	__end_of_next_minute-_next_minute
  5390                           	
  5391  059E                     _next_minute:	
  5392                           	opt	stack 6
  5393                           ; Regs used in _next_minute: [wreg+status,2+status,0]
  5394                           	line	271
  5395                           	
  5396  059E                     l3599:	
  5397                           ;main.c: 271: time.min++;
  5398  059E  3001               	movlw	(01h)
  5399  059F  00F4               	movwf	(??_next_minute+0)+0
  5400  05A0  0874               	movf	(??_next_minute+0)+0,w
  5401  05A1  1283               	bcf	status, 5	;RP0=0, select bank0
  5402  05A2  1303               	bcf	status, 6	;RP1=0, select bank0
  5403  05A3  07E3               	addwf	(_time),f
  5404                           	line	272
  5405                           	
  5406  05A4                     l3601:	
  5407                           ;main.c: 272: if (time.min < 60)
  5408  05A4  303C               	movlw	(03Ch)
  5409  05A5  0263               	subwf	(_time),w
  5410  05A6  1803               	skipnc
  5411  05A7  2DA9               	goto	u3241
  5412  05A8  2DAA               	goto	u3240
  5413  05A9                     u3241:
  5414  05A9  2DAC               	goto	l539
  5415  05AA                     u3240:
  5416  05AA  2DBF               	goto	l540
  5417                           	line	273
  5418                           	
  5419  05AB                     l3603:	
  5420                           ;main.c: 273: return;
  5421  05AB  2DBF               	goto	l540
  5422                           	
  5423  05AC                     l539:	
  5424                           	line	275
  5425                           ;main.c: 275: time.min = 0;
  5426  05AC  01E3               	clrf	(_time)
  5427                           	line	276
  5428                           	
  5429  05AD                     l3605:	
  5430                           ;main.c: 276: time.hrs++;
  5431  05AD  3001               	movlw	(01h)
  5432  05AE  00F4               	movwf	(??_next_minute+0)+0
  5433  05AF  0874               	movf	(??_next_minute+0)+0,w
  5434  05B0  07E4               	addwf	0+(_time)+01h,f
  5435                           	line	277
  5436                           ;main.c: 277: time.hour60 +=5;
  5437  05B1  3005               	movlw	(05h)
  5438  05B2  00F4               	movwf	(??_next_minute+0)+0
  5439  05B3  0874               	movf	(??_next_minute+0)+0,w
  5440  05B4  07E5               	addwf	0+(_time)+02h,f
  5441                           	line	278
  5442                           	
  5443  05B5                     l3607:	
  5444                           ;main.c: 278: if (time.hrs < 12)
  5445  05B5  300C               	movlw	(0Ch)
  5446  05B6  0264               	subwf	0+(_time)+01h,w
  5447  05B7  1803               	skipnc
  5448  05B8  2DBA               	goto	u3251
  5449  05B9  2DBB               	goto	u3250
  5450  05BA                     u3251:
  5451  05BA  2DBD               	goto	l541
  5452  05BB                     u3250:
  5453  05BB  2DBF               	goto	l540
  5454                           	line	279
  5455                           	
  5456  05BC                     l3609:	
  5457                           ;main.c: 279: return;
  5458  05BC  2DBF               	goto	l540
  5459                           	
  5460  05BD                     l541:	
  5461                           	line	280
  5462                           ;main.c: 280: time.hrs = 0;
  5463  05BD  01E4               	clrf	0+(_time)+01h
  5464                           	line	281
  5465                           ;main.c: 281: time.hour60=0;
  5466  05BE  01E5               	clrf	0+(_time)+02h
  5467                           	line	289
  5468                           	
  5469  05BF                     l540:	
  5470  05BF  0008               	return
  5471                           	opt stack 0
  5472                           GLOBAL	__end_of_next_minute
  5473  05C0                     	__end_of_next_minute:
  5474 ;; =============== function _next_minute ends ============
  5475                           
  5476                           	signat	_next_minute,88
  5477                           	global	_set_it_faster
  5478                           psect	text883,local,class=CODE,delta=2
  5479                           global __ptext883
  5480  060D                     __ptext883:
  5481                           
  5482 ;; *************** function _set_it_faster *****************
  5483 ;; Defined at:
  5484 ;;		line 137 in file "main.c"
  5485 ;; Parameters:    Size  Location     Type
  5486 ;;  how_much        1    wreg     unsigned char 
  5487 ;; Auto vars:     Size  Location     Type
  5488 ;;  how_much        1    4[COMMON] unsigned char 
  5489 ;; Return value:  Size  Location     Type
  5490 ;;		None               void
  5491 ;; Registers used:
  5492 ;;		wreg, status,2, status,0
  5493 ;; Tracked objects:
  5494 ;;		On entry : 0/0
  5495 ;;		On exit  : 0/0
  5496 ;;		Unchanged: 0/0
  5497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5498 ;;      Params:         0       0       0       0
  5499 ;;      Locals:         1       0       0       0
  5500 ;;      Temps:          0       0       0       0
  5501 ;;      Totals:         1       0       0       0
  5502 ;;Total ram usage:        1 bytes
  5503 ;; Hardware stack levels used:    1
  5504 ;; Hardware stack levels required when called:    1
  5505 ;; This function calls:
  5506 ;;		Nothing
  5507 ;; This function is called by:
  5508 ;;		_what_time_is_now
  5509 ;;		_init_normal
  5510 ;;		_init
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           psect	text883
  5514                           	file	"main.c"
  5515                           	line	137
  5516                           	global	__size_of_set_it_faster
  5517  0016                     	__size_of_set_it_faster	equ	__end_of_set_it_faster-_set_it_faster
  5518                           	
  5519  060D                     _set_it_faster:	
  5520                           	opt	stack 4
  5521                           ; Regs used in _set_it_faster: [wreg+status,2+status,0]
  5522                           ;set_it_faster@how_much stored from wreg
  5523                           	line	140
  5524  060D  00F4               	movwf	(set_it_faster@how_much)
  5525                           	
  5526  060E                     l3595:	
  5527                           ;main.c: 140: if (how_much == 0)
  5528  060E  08F4               	movf	(set_it_faster@how_much),f
  5529  060F  1D03               	skipz
  5530  0610  2E12               	goto	u3221
  5531  0611  2E13               	goto	u3220
  5532  0612                     u3221:
  5533  0612  2E17               	goto	l500
  5534  0613                     u3220:
  5535                           	line	141
  5536                           	
  5537  0613                     l3597:	
  5538                           ;main.c: 141: OSCCONbits.IRCF2 = 0;
  5539  0613  1683               	bsf	status, 5	;RP0=1, select bank1
  5540  0614  1303               	bcf	status, 6	;RP1=0, select bank1
  5541  0615  130F               	bcf	(143)^080h,6	;volatile
  5542  0616  2E1A               	goto	l501
  5543                           	line	142
  5544                           	
  5545  0617                     l500:	
  5546                           	line	143
  5547                           ;main.c: 142: else
  5548                           ;main.c: 143: OSCCONbits.IRCF2 = 1;
  5549  0617  1683               	bsf	status, 5	;RP0=1, select bank1
  5550  0618  1303               	bcf	status, 6	;RP1=0, select bank1
  5551  0619  170F               	bsf	(143)^080h,6	;volatile
  5552                           	
  5553  061A                     l501:	
  5554                           	line	145
  5555                           ;main.c: 145: OSCCONbits.IRCF1 = 1;
  5556  061A  168F               	bsf	(143)^080h,5	;volatile
  5557                           	line	146
  5558                           ;main.c: 146: OSCCONbits.IRCF0 = 1;
  5559  061B  160F               	bsf	(143)^080h,4	;volatile
  5560                           	line	148
  5561                           ;main.c: 148: while(!IOFS) {
  5562  061C  2E1D               	goto	l502
  5563                           	
  5564  061D                     l503:	
  5565                           	line	150
  5566                           ;main.c: 149: ;
  5567                           	
  5568  061D                     l502:	
  5569                           	line	148
  5570  061D  1D0F               	btfss	(1146/8)^080h,(1146)&7
  5571  061E  2E20               	goto	u3231
  5572  061F  2E21               	goto	u3230
  5573  0620                     u3231:
  5574  0620  2E1D               	goto	l502
  5575  0621                     u3230:
  5576  0621  2E22               	goto	l505
  5577                           	
  5578  0622                     l504:	
  5579                           	line	152
  5580                           	
  5581  0622                     l505:	
  5582  0622  0008               	return
  5583                           	opt stack 0
  5584                           GLOBAL	__end_of_set_it_faster
  5585  0623                     	__end_of_set_it_faster:
  5586 ;; =============== function _set_it_faster ends ============
  5587                           
  5588                           	signat	_set_it_faster,4216
  5589                           	global	_bit_off
  5590                           psect	text884,local,class=CODE,delta=2
  5591                           global __ptext884
  5592  0637                     __ptext884:
  5593                           
  5594 ;; *************** function _bit_off *****************
  5595 ;; Defined at:
  5596 ;;		line 90 in file "main.c"
  5597 ;; Parameters:    Size  Location     Type
  5598 ;;  bt              1    wreg     unsigned char 
  5599 ;; Auto vars:     Size  Location     Type
  5600 ;;  bt              1    5[COMMON] unsigned char 
  5601 ;; Return value:  Size  Location     Type
  5602 ;;		None               void
  5603 ;; Registers used:
  5604 ;;		wreg, status,2, status,0
  5605 ;; Tracked objects:
  5606 ;;		On entry : 0/0
  5607 ;;		On exit  : 0/0
  5608 ;;		Unchanged: 0/0
  5609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5610 ;;      Params:         0       0       0       0
  5611 ;;      Locals:         1       0       0       0
  5612 ;;      Temps:          1       0       0       0
  5613 ;;      Totals:         2       0       0       0
  5614 ;;Total ram usage:        2 bytes
  5615 ;; Hardware stack levels used:    1
  5616 ;; Hardware stack levels required when called:    1
  5617 ;; This function calls:
  5618 ;;		Nothing
  5619 ;; This function is called by:
  5620 ;;		_shift_write
  5621 ;;		_shift_show
  5622 ;;		_main
  5623 ;;		_test_rtc
  5624 ;; This function uses a non-reentrant model
  5625 ;;
  5626                           psect	text884
  5627                           	file	"main.c"
  5628                           	line	90
  5629                           	global	__size_of_bit_off
  5630  000A                     	__size_of_bit_off	equ	__end_of_bit_off-_bit_off
  5631                           	
  5632  0637                     _bit_off:	
  5633                           	opt	stack 4
  5634                           ; Regs used in _bit_off: [wreg+status,2+status,0]
  5635                           ;bit_off@bt stored from wreg
  5636  0637  00F5               	movwf	(bit_off@bt)
  5637                           	line	91
  5638                           	
  5639  0638                     l4257:	
  5640                           ;main.c: 91: a_latch &= ~bt;
  5641  0638  0975               	comf	(bit_off@bt),w
  5642  0639  00F4               	movwf	(??_bit_off+0)+0
  5643  063A  0874               	movf	(??_bit_off+0)+0,w
  5644  063B  1283               	bcf	status, 5	;RP0=0, select bank0
  5645  063C  1303               	bcf	status, 6	;RP1=0, select bank0
  5646  063D  05DC               	andwf	(_a_latch),f
  5647                           	line	92
  5648                           	
  5649  063E                     l4259:	
  5650                           ;main.c: 92: PORTA = a_latch;
  5651  063E  085C               	movf	(_a_latch),w
  5652  063F  0085               	movwf	(5)	;volatile
  5653                           	line	93
  5654                           	
  5655  0640                     l484:	
  5656  0640  0008               	return
  5657                           	opt stack 0
  5658                           GLOBAL	__end_of_bit_off
  5659  0641                     	__end_of_bit_off:
  5660 ;; =============== function _bit_off ends ============
  5661                           
  5662                           	signat	_bit_off,4216
  5663                           	global	_bit_on
  5664                           psect	text885,local,class=CODE,delta=2
  5665                           global __ptext885
  5666  0641                     __ptext885:
  5667                           
  5668 ;; *************** function _bit_on *****************
  5669 ;; Defined at:
  5670 ;;		line 84 in file "main.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  bt              1    wreg     unsigned char 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;  bt              1    5[COMMON] unsigned char 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;		None               void
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5684 ;;      Params:         0       0       0       0
  5685 ;;      Locals:         1       0       0       0
  5686 ;;      Temps:          1       0       0       0
  5687 ;;      Totals:         2       0       0       0
  5688 ;;Total ram usage:        2 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    1
  5691 ;; This function calls:
  5692 ;;		Nothing
  5693 ;; This function is called by:
  5694 ;;		_shift_write
  5695 ;;		_shift_show
  5696 ;;		_what_time_is_now
  5697 ;;		_init_normal
  5698 ;;		_main
  5699 ;;		_test_rtc
  5700 ;; This function uses a non-reentrant model
  5701 ;;
  5702                           psect	text885
  5703                           	file	"main.c"
  5704                           	line	84
  5705                           	global	__size_of_bit_on
  5706  000A                     	__size_of_bit_on	equ	__end_of_bit_on-_bit_on
  5707                           	
  5708  0641                     _bit_on:	
  5709                           	opt	stack 4
  5710                           ; Regs used in _bit_on: [wreg+status,2+status,0]
  5711                           ;bit_on@bt stored from wreg
  5712  0641  00F5               	movwf	(bit_on@bt)
  5713                           	line	85
  5714                           	
  5715  0642                     l4253:	
  5716                           ;main.c: 85: a_latch |= bt;
  5717  0642  0875               	movf	(bit_on@bt),w
  5718  0643  00F4               	movwf	(??_bit_on+0)+0
  5719  0644  0874               	movf	(??_bit_on+0)+0,w
  5720  0645  1283               	bcf	status, 5	;RP0=0, select bank0
  5721  0646  1303               	bcf	status, 6	;RP1=0, select bank0
  5722  0647  04DC               	iorwf	(_a_latch),f
  5723                           	line	86
  5724                           	
  5725  0648                     l4255:	
  5726                           ;main.c: 86: PORTA = a_latch;
  5727  0648  085C               	movf	(_a_latch),w
  5728  0649  0085               	movwf	(5)	;volatile
  5729                           	line	87
  5730                           	
  5731  064A                     l481:	
  5732  064A  0008               	return
  5733                           	opt stack 0
  5734                           GLOBAL	__end_of_bit_on
  5735  064B                     	__end_of_bit_on:
  5736 ;; =============== function _bit_on ends ============
  5737                           
  5738                           	signat	_bit_on,4216
  5739                           	global	_interrupt_handler
  5740                           psect	text886,local,class=CODE,delta=2
  5741                           global __ptext886
  5742  052B                     __ptext886:
  5743                           
  5744 ;; *************** function _interrupt_handler *****************
  5745 ;; Defined at:
  5746 ;;		line 543 in file "main.c"
  5747 ;; Parameters:    Size  Location     Type
  5748 ;;		None
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;		None               void
  5753 ;; Registers used:
  5754 ;;		status,2, status,0
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5760 ;;      Params:         0       0       0       0
  5761 ;;      Locals:         0       0       0       0
  5762 ;;      Temps:          4       0       0       0
  5763 ;;      Totals:         4       0       0       0
  5764 ;;Total ram usage:        4 bytes
  5765 ;; Hardware stack levels used:    1
  5766 ;; This function calls:
  5767 ;;		Nothing
  5768 ;; This function is called by:
  5769 ;;		Interrupt level 1
  5770 ;; This function uses a non-reentrant model
  5771 ;;
  5772                           psect	text886
  5773                           	file	"main.c"
  5774                           	line	543
  5775                           	global	__size_of_interrupt_handler
  5776  0027                     	__size_of_interrupt_handler	equ	__end_of_interrupt_handler-_interrupt_handler
  5777                           	
  5778  052B                     _interrupt_handler:	
  5779                           	opt	stack 1
  5780                           ; Regs used in _interrupt_handler: [status]
  5781                           psect	intentry,class=CODE,delta=2
  5782                           global __pintentry
  5783  0004                     __pintentry:
  5784                           global interrupt_function
  5785  0004                     interrupt_function:
  5786                           	global saved_w
  5787  007E                     	saved_w	set	btemp+0
  5788  0004  00FE               	movwf	saved_w
  5789  0005  0E03               	swapf	status,w
  5790  0006  00F0               	movwf	(??_interrupt_handler+0)
  5791  0007  0804               	movf	fsr0,w
  5792  0008  00F1               	movwf	(??_interrupt_handler+1)
  5793  0009  080A               	movf	pclath,w
  5794  000A  00F2               	movwf	(??_interrupt_handler+2)
  5795  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  5796  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  5797  000D  087F               	movf	btemp+1,w
  5798  000E  00F3               	movwf	(??_interrupt_handler+3)
  5799  000F  2D2B               	ljmp	_interrupt_handler
  5800                           psect	text886
  5801                           	line	545
  5802                           	
  5803  052B                     i1l3645:	
  5804                           ;main.c: 545: if (mode == 0) {
  5805  052B  08DD               	movf	(_mode),f
  5806  052C  1D03               	skipz
  5807  052D  2D2F               	goto	u331_21
  5808  052E  2D30               	goto	u331_20
  5809  052F                     u331_21:
  5810  052F  2D47               	goto	i1l605
  5811  0530                     u331_20:
  5812                           	line	550
  5813                           	
  5814  0530                     i1l3647:	
  5815                           ;main.c: 549: static char c=0;
  5816                           ;main.c: 550: if (RBIF) {
  5817  0530  1C0B               	btfss	(88/8),(88)&7
  5818  0531  2D33               	goto	u332_21
  5819  0532  2D34               	goto	u332_20
  5820  0533                     u332_21:
  5821  0533  2D47               	goto	i1l605
  5822  0534                     u332_20:
  5823                           	line	552
  5824                           	
  5825  0534                     i1l3649:	
  5826                           ;main.c: 552: if (RB7 == 1) {
  5827  0534  1F86               	btfss	(55/8),(55)&7
  5828  0535  2D37               	goto	u333_21
  5829  0536  2D38               	goto	u333_20
  5830  0537                     u333_21:
  5831  0537  2D44               	goto	i1l602
  5832  0538                     u333_20:
  5833                           	line	554
  5834                           	
  5835  0538                     i1l3651:	
  5836                           ;main.c: 554: if(c == 0){
  5837  0538  08F9               	movf	(interrupt_handler@c),f
  5838  0539  1D03               	skipz
  5839  053A  2D3C               	goto	u334_21
  5840  053B  2D3D               	goto	u334_20
  5841  053C                     u334_21:
  5842  053C  2D42               	goto	i1l603
  5843  053D                     u334_20:
  5844                           	line	555
  5845                           	
  5846  053D                     i1l3653:	
  5847                           ;main.c: 555: need_sync = 1;
  5848  053D  15F8               	bsf	(_need_sync/8),(_need_sync)&7
  5849                           	line	557
  5850                           	
  5851  053E                     i1l3655:	
  5852                           ;main.c: 557: c = 1;
  5853  053E  01F9               	clrf	(interrupt_handler@c)
  5854  053F  1403               	bsf	status,0
  5855  0540  0DF9               	rlf	(interrupt_handler@c),f
  5856                           	line	558
  5857                           ;main.c: 558: } else {
  5858  0541  2D44               	goto	i1l602
  5859                           	
  5860  0542                     i1l603:	
  5861                           	line	559
  5862                           ;main.c: 559: c = 0;
  5863  0542  01F9               	clrf	(interrupt_handler@c)
  5864  0543  2D44               	goto	i1l602
  5865                           	line	560
  5866                           	
  5867  0544                     i1l604:	
  5868                           	line	561
  5869                           	
  5870  0544                     i1l602:	
  5871                           	line	562
  5872                           ;main.c: 560: }
  5873                           ;main.c: 561: }
  5874                           ;main.c: 562: RBIF = 0;
  5875  0544  100B               	bcf	(88/8),(88)&7
  5876  0545  2D47               	goto	i1l605
  5877                           	line	563
  5878                           	
  5879  0546                     i1l601:	
  5880  0546  2D47               	goto	i1l605
  5881                           	line	573
  5882                           	
  5883  0547                     i1l598:	
  5884                           	line	575
  5885                           	
  5886  0547                     i1l605:	
  5887  0547  0873               	movf	(??_interrupt_handler+3),w
  5888  0548  00FF               	movwf	btemp+1
  5889  0549  0872               	movf	(??_interrupt_handler+2),w
  5890  054A  008A               	movwf	pclath
  5891  054B  0871               	movf	(??_interrupt_handler+1),w
  5892  054C  0084               	movwf	fsr0
  5893  054D  0E70               	swapf	(??_interrupt_handler+0)^0FFFFFF80h,w
  5894  054E  0083               	movwf	status
  5895  054F  0EFE               	swapf	saved_w,f
  5896  0550  0E7E               	swapf	saved_w,w
  5897  0551  0009               	retfie
  5898                           	opt stack 0
  5899                           GLOBAL	__end_of_interrupt_handler
  5900  0552                     	__end_of_interrupt_handler:
  5901 ;; =============== function _interrupt_handler ends ============
  5902                           
  5903                           	signat	_interrupt_handler,88
  5904                           psect	text887,local,class=CODE,delta=2
  5905                           global __ptext887
  5906  0000                     __ptext887:
  5907                           	global	btemp
  5908  007E                     	btemp set 07Eh
  5909                           
  5910                           	DABS	1,126,2	;btemp
  5911                           	global	wtemp0
  5912  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Jun 11 13:32:25 2013

        ??_what_time_is_now 0027            ??_wait_for_event 0074                           pc 0002  
            i2c_write_bit@x 0075              ___bmul@product 0076                          _RD 0C60  
                        _WR 0C61                          __a 03C0                          __b 03C1  
                        fsr 0004      __size_of_i2c_write_bit 0026             i2c_write_byte@i 0021  
                       l500 0617                         l501 061A                         l502 061D  
                       l510 038B                         l503 061D                         l511 03A6  
                       l504 0622                         l512 03A5                         l505 0622  
                       l513 03A5                         l514 03A6                         l530 02DA  
                       l611 01E9                         l540 05BF                         l620 022C  
                       l612 01EA                         l508 0371                         l532 02D7  
                       l524 02A4                         l541 05BD                         l621 022E  
                       l613 01EA                         l509 039F                         l533 02F6  
                       l525 02FB                         l614 01F3                         l526 02AC  
                       l550 0298                         l630 003E                         l615 01FE  
                       l535 02F1                         l527 02B6                         l551 0299  
                       l631 0045                         l616 01FE                         l608 01C2  
                       l536 02FA                         l528 02C2                         l560 0436  
                       l544 0282                         l640 0093                         l632 0064  
                       l624 0011                         l481 064A                         l617 020A  
                       l609 01C1                         l529 02CE                         l545 0233  
                       l641 0093                         l625 0086                         l633 0060  
                       l618 0215                         l490 03CC                         l546 028D  
                       l650 011C                         l642 009A                         l634 005F  
                       l626 001E                         l539 05AC                         l619 0220  
                       l491 03EF                         l547 0239                         l563 05E3  
                       l651 00CA                         l643 009F                         l635 0083  
                       l627 0025                         l484 0640                         l556 042B  
                       l548 023B                         l564 05F4                         l644 0111  
                       l660 00FE                         l652 00E4                         l636 007C  
                       l628 0048                         l557 0409                         l549 024C  
                       l661 0131                         l645 00A6                         l637 0084  
                       l629 0046                         l590 0665                         l494 065F  
                       l558 0426                         l582 04DF                         l662 0134  
                       l654 00E2                         l646 00B6                         l638 0085  
                       l487 03C1                         l559 0436                         l583 04FA  
                       l639 0136                         l663 0134                         l647 00C9  
                       l488 03EF                         l584 0500                         l664 0135  
                       l656 00D7                         l648 00C5                         l489 03CA  
                       l497 0659                         l585 04FF                         l593 05D8  
                       l657 00E9                         l649 00C8                         l665 0136  
                       l586 04FF                         l594 05DA                         l658 00EA  
                       l587 0500                         l595 05DA                         l659 00F3  
                       _GIE 005F                         _RB1 0031                         _RB3 0033  
                       _RB4 0034                         _RA6 002E                         _RB5 0035  
                       _RB7 0037                         _seg 005A                         fsr0 0004  
                       indf 0000                        S4839 0001     __size_of_i2c_write_byte 0034  
                      l1120 0595                        l1112 0587                        l1200 016F  
                      l1121 059D                        l1113 0581                        l1201 016F  
                      l1122 059D                        l1114 0586                        l1130 056C  
                      l1210 01A5                        l1202 0177                        l1115 0590  
                      l1131 0574                        l1211 01AA                        l1203 0177  
                      l1116 0587                        l1132 0577                        l1140 044A  
                      l1212 01AB                        l1204 017F                        l1117 058F  
                      l1133 0577                        l1125 0552                        l1141 0451  
                      l1213 01B0                        l1205 0180                        l1118 0590  
                      l1126 0557                        l1142 046C                        l1150 0469  
                      l1214 01B1                        l1206 018D                        l1119 0595  
                      l1127 0557                        l1151 046E                        l1143 0456  
                      l1207 019B                        l1128 055C                        l1144 0456  
                      l1136 0437                        l1160 050D                        l1208 019C  
                      l1129 0565                        l1145 045E                        l1137 043C  
                      l1161 0524                        l1209 01A4                        l1146 045E  
                      l1138 043C                        l1154 047B                        l1162 052A  
                      l1170 0314                        l1147 0463                        l1139 0441  
                      l1155 0497                        l1171 031C                        l1148 0463  
                      l1156 04A0                        l1180 034A                        l1172 031D  
                      l1149 0468                        l1157 04A2                        l1181 034F  
                      l1173 0329                        l1165 0304                        l1190 013F  
                      l1182 034F                        l1174 0357                        l1166 0305  
                      l1191 0147                        l1183 0354                        l1175 0335  
                      l1167 030A                        l1192 0147                        l1184 0355  
                      l1176 0341                        l1168 030B                        l1193 014F  
                      l1177 0342                        l1169 0313                        l1194 0150  
                      l1178 0342                        l1195 015D                        l1187 013A  
                      l1179 034A                        l1196 01B3                        l1188 013A  
                      l1197 0169                        l1189 013F                        l1198 016A  
                      l1199 016A                        l4301 0569                        l4311 0576  
                      l4303 0570                        l3601 05A4                        l4305 0572  
                      l4321 0469                        l4313 0441                        l1673 05F7  
                      l4401 015A                        l1674 0600                        l3603 05AB  
                      l4307 0573                        l4323 046B                        l4315 044A  
                      l1675 060A                        l4331 03AE                        l4411 0180  
                      l4403 015C                        l1676 060C                        l4253 0642  
                      l3605 05AD                        l4309 0574                        l4325 046C  
                      l4317 044B                        l4341 03CE                        l4333 03B2  
                      l4421 019C                        l4413 018A                        l4405 015D  
                      l4501 039E                        l4255 0648                        l3607 05B5  
                      l4327 046E                        l4319 044E                        l4343 03D7  
                      l4335 03C0                        l4351 065C                        l4431 01AB  
                      l4423 019D                        l4415 018C                        l4407 0166  
                      l4503 039F                        l4511 02A3                        l4257 0638  
                      l3609 05BC                        l4345 03D9                        l4337 03C7  
                      l4329 03AA                        l4361 048A                        l4353 0472  
                      l4433 01AC                        l4425 01A0                        l4417 018D  
                      l4409 0168                        l4441 0305                        l4505 03A1  
                      l4521 02B3                        l4513 02A4                        l4601 027D  
                      l4259 063E                        l3643 0660                        l3731 0600  
                      l4347 03E1                        l4339 03CA                        l4371 04A0  
                      l4363 0490                        l4355 0473                        l4435 01B1  
                      l4427 01A5                        l4419 0193                        l4451 0314  
                      l4443 0306                        l4507 03A3                        l4531 02C8  
                      l4523 02B6                        l4515 02A6                        l4603 027E  
                      l4611 028D                        l3661 01D6                        l4293 0579  
                      l3733 0602                        l4349 065A                        l4373 04A2  
                      l4357 047A                        l4365 0497                        l4381 050D  
                      l4437 01B3                        l4429 01A6                        l4461 0328  
                      l4453 0315                        l4445 030B                        l4541 02DA  
                      l4533 02C9                        l4525 02BC                        l4517 02AB  
                      l4509 029A                        l4613 0293                        l4605 027F  
                      l4621 05DB                        l4701 05D0                        l3671 0203  
                      l3663 01EB                        l4295 055C                        l3735 0604  
                      l3727 05F6                        l4367 049D                        l4359 047B  
                      l4391 0526                        l4383 0513                        l4375 0501  
                      l4471 033E                        l4463 0329                        l4455 0318  
                      l4447 030C                        l4439 02FF                        l4551 02F6  
                      l4543 02DE                        l4535 02CE                        l4527 02BD  
                      l4519 02AE                        l4615 0299                        l4607 0281  
                      l4631 05EA                        l4623 05E2                        l4703 05D6  
                      l4711 0015                        l3681 021F                        l3673 0209  
                      l3665 01F2                        l3657 01B4                        l4297 0565  
                      l3737 060A                        l3729 05FB                        l4369 049F  
                      l4393 052A                        l4385 0519                        l4377 0505  
                      l4473 0340                        l4465 0332                        l4457 031D  
                      l4449 030F                        l4481 035A                        l4553 02FB  
                      l4545 02E4                        l4537 02D2                        l4529 02C2  
                      l4561 041F                        l4609 0282                        l4641 05F1  
                      l4633 05EB                        l4625 05E4                        l4705 05D8  
                      l4801 00F9                        l4721 0023                        l4713 001A  
                      l3595 060E                        l3683 0224                        l3675 020E  
                      l3667 01F3                        l3659 01C2                        l4299 0566  
                      l3739 060C                        l4387 051D                        l4379 050C  
                      l4395 0656                        l4475 0355                        l4467 0334  
                      l4459 0326                        l4491 0385                        l4483 036B  
                      l4547 02EA                        l4539 02D7                        l4563 0423  
                      l4555 03F0                        l4571 022F                        l4643 05F2  
                      l4635 05EC                        l4627 05E6                        l4651 04DE  
                      l4803 00FE                        l4811 0111                        l4731 0038  
                      l4723 0025                        l4715 001B                        l4707 0011  
                      l3597 0613                        l3685 022A                        l3677 0214  
                      l3669 01F7                        l4389 0524                        l4397 0658  
                      l4477 0357                        l4469 0335                        l4493 038A  
                      l4485 0370                        l4549 02F1                        l4565 0425  
                      l4557 0407                        l4581 0239                        l4573 0233  
                      l4645 05F3                        l4637 05EF                        l4629 05E9  
                      l4661 04E8                        l4653 04DF                        l4805 0108  
                      l4813 011C                        l4741 004E                        l4733 003C  
                      l4725 0029                        l4717 001E                        l4709 0012  
                      l3599 059E                        l3687 022C                        l3679 0219  
                      l4399 0150                        l4495 038B                        l4487 0371  
                      l4479 0358                        l4567 0426                        l4559 0409  
                      l4591 0248                        l4583 023B                        l4575 0235  
                      l4639 05F0                        l4671 04F1                        l4663 04EB  
                      l4655 04E0                        l4647 04D4                        l4815 0128  
                      l4807 010B                        l4751 0060                        l4743 0052  
                      l4735 003E                        l4727 0031                        l4719 0022  
                      l3689 022E                        l4497 0390                        l4489 0376  
                      l4569 042B                        l4593 0279                        l4585 023E  
                      l4577 0236                        l4681 04F9                        l4673 04F4  
                      l4665 04EC                        l4657 04E2                        l4649 04D7  
                      l4817 0131                        l4809 0110                        l4745 0058  
                      l4753 0064                        l4729 0037                        l4737 0046  
                      l4761 0086                        l4499 039B                        l4595 027A  
                      l4587 0241                        l4579 0237                        l4675 04F5  
                      l4667 04ED                        l4659 04E5                        l4683 04FA  
                      l4691 05C5                        l4771 009F                        l4763 008E  
                      l4755 0076                        l4747 0059                        l4739 0048  
                      l4597 027B                        l4589 0242                        l4685 04FC  
                      l4677 04F6                        l4669 04EE                        l4693 05C7  
                      l4781 00BB                        l4773 00A6                        l4765 0090  
                      l4757 007A                        l4749 005D                        l4599 027C  
                      l4679 04F7                        l4695 05C8                        l4687 05C0  
                      l4791 00D7                        l4783 00C0                        l4775 00AC  
                      l4767 009A                        l4759 007C                        l4697 05CB  
                      l4689 05C2                        l4793 00DC                        l4785 00C5  
                      l4777 00B1                        l4769 009C                        l4699 05CC  
                      l4795 00E4                        l4787 00CA                        l4779 00B6  
                      l4797 00EA                        l4789 00D0                        l4799 00EF  
                      _T0CS 040D                        u3220 0613                        u3221 0612  
                      u3230 0621                        u3231 0620                        u3240 05AA  
                      u3400 01DB                        u3241 05A9                        u3401 01D9  
                      u3250 05BB                        u3410 01E2                        u3402 01DC  
                      u3251 05BA                        u3411 01E0                        u3500 021F  
                      u3420 01E8                        u3412 01E3                        u4300 0570  
                      u3501 021E                        u3421 01E7                        u3510 0224  
                      u3430 01F1                        u4310 0455                        u3511 0223  
                      u3431 01F0                        u3520 022A                        u3440 01FD  
                      u4320 03BF                        u4400 0523                        u3521 0229  
                      u3441 01FC                        u4321 03BE                        u4401 0522  
                      u3450 0203                        u3370 01C9                        u4330 03C7  
                      u4410 015A                        u3451 0202                        u3371 01C7  
                      u3355 01BA                        u4331 03C6                        u4411 0159  
                      _IOFS 047A                        u3460 0209                        u3380 01D0  
                      u3372 01CA                        u4340 03EE                        u4420 0166  
                      u4500 02AA                        u3461 0208                        u3381 01CE  
                      u3365 01C0                        u4341 03ED                        u4325 03BB  
                      u4421 0165                        u3470 020E                        u3390 01D6  
                      u3382 01D1                        u4350 0479                        u4430 018A  
                      u4510 02B3                        u3471 020D                        u3391 01D5  
                      u4351 0478                        u4431 0189                        u4511 02B2  
                      u3480 0214                        u3560 05FB                        u4440 0326  
                      u4520 02BC                        u4600 0423                        u3481 0213  
                      u3561 05FA                        u4345 03EA                        u4441 0325  
                      u4521 02BB                        u3490 0219                        u4290 0581  
                      u3570 0609                        u4370 0496                        u4450 0332  
                      u4530 02C8                        u4610 0435                        u3491 0218  
                      u3571 0608                        u4371 0495                        u4451 0331  
                      u4531 02C7                        u4611 0434                        _PEIE 005E  
                      u4380 049D                        u4364 0484                        u4460 033E  
                      u4540 02D2                        u4620 0248                        u4700 05D6  
                      u4381 049C                        u4365 0482                        u4461 033D  
                      u4541 02D1                        u4621 0247                        u4701 05D5  
                      _INTE 005C                        u4390 050B                        u4470 036F  
                      u4550 02D6                        u4710 001A                        u4391 050A  
                      u4551 02D5                        u4711 0019                        _RBIE 005B  
                      u4480 0389                        u4800 0070                        u4720 0022  
                      _RBIF 0058                        u4801 006E                        u4721 0021  
                      u4570 02EA                        u4490 02A2                        u4810 0076  
                      u4802 0071                        u4730 0029                        u4571 02E9  
                      u4491 02A1                        u4635 024F                        u4811 0075  
                      u4731 0028                        u4580 02F0                        u4900 00D0  
                      u4820 007A                        u4740 0031                        u4581 02EF  
                      u4565 02DE                        u4645 0257                        u4901 00CF  
                      u4821 0079                        u4741 0030                        u4590 03FA  
                      u4670 0293                        u4910 00D6                        u4750 0037  
                      u4671 0292                        u4655 0264                        u4911 00D5  
                      u4751 0036                        u4680 05E1                        u4920 00DC  
                      u4840 008E                        u4760 004E                        u4665 026C  
                      u4921 00DB                        u4841 008D                        u4761 004D  
                      u4690 04DD                        u4930 00E2                        u4850 0099  
                      u4770 0058                        u4691 04DC                        u4931 00E1  
                      u4851 0098                        u4835 0082                        u4771 0057  
                      u4940 00EF                        u4860 00AC                        u4780 005D  
                      u4941 00EE                        u4861 00AB                        u4950 00F9  
                      u4870 00B1                        u4790 0069                        u4951 00F8  
                      u4871 00B0                        u4791 0067                        u4880 00BB  
                      u4792 006A                        u4881 00BA                        u4970 0130  
                      u4890 00C0                        u4971 012F                        u4891 00BF  
                      u4965 011F                        _TMR0 0001                        _WREN 0C62  
             _i2c_read_byte 0501                        _main 0011                        _init 05C0  
                      _mode 005D             shift_write@data 0020                        _time 0063  
     set_it_faster@how_much 0074                        btemp 007E                        _sync 022F  
             ?_i2c_read_bit 0070                        start 0010              ?_i2c_check_ack 0070  
         ___bmul@multiplier 0077                       ?_main 0070                       ?_init 0070  
                     _EEADR 010D                       _CARRY 0018                       ?_sync 0070  
                     _T1CON 0010                 i2c_read@dev 0026                       i1l601 0546  
                     i1l602 0544                       i1l603 0542                       i1l604 0544  
                     i1l605 0547                       i1l598 0547                       _TMR1H 000F  
                     _TMR1L 000E                       _PORTA 0005                       _TRISA 0085  
                     _TRISB 0086                ?_init_normal 0070             __end_of_bit_off 0641  
                     _state 0060                       main@i 0041              __pbitbssCOMMON 03C0  
                     pclath 000A              ?_i2c_read_byte 0070               rtc_setup@F789 0046  
             _i2c_write_bit 0578                       status 0003              ??_i2c_read_bit 0074  
                     wtemp0 007E                __end_of_main 0137                __end_of_init 05DB  
              __end_of_sync 029A            __end_of_i2c_read 01B4            i2c_check_ack@tmp 0075  
                    ??_main 003F                      ??_init 0078                      ??_sync 002C  
              ?_next_minute 0070                      _ADCON1 009F          i2c_write_byte@byte 0020  
                    _EEDATA 010C                      _EECON1 018C                      _EECON2 018D  
              i2c_read@addr 0022                i2c_read@data 0023                      i1l3651 0538  
                    i1l3653 053D                      i1l3645 052B                      i1l3655 053E  
                    i1l3647 0530                      i1l3649 0534              ?_i2c_write_bit 0070  
                    u331_20 0530                      u331_21 052F                      u332_20 0534  
                    u332_21 0533                      u333_20 0538                      u333_21 0537  
                    u334_20 053D                      u334_21 053C                      _TMR0IE 005D  
                    _TMR0IF 005A                      _TMR1IE 0460                      _TMR1IF 0060  
                    _TMR1ON 0080                      _TRISB1 0431                      _TRISB4 0434  
           ??_i2c_check_ack 0074          __size_of_i2c_write 005C            wait_for_event@_i 0076  
          wait_for_event@rv 0075                ?_shift_write 0070                      ___bmul 05F5  
                    _bit_on 0641                   ??_bit_off 0074                      main@ev 0042  
                    clrloop 064C                      saved_w 007E              _i2c_write_byte 046F  
           ??_i2c_read_byte 0076                i2c_write@dev 0024              rtc_setup@table 0029  
       ___bmul@multiplicand 0074       __end_of_set_it_faster 0623              __pcstackCOMMON 0070  
              __pidataBANK0 0623        __end_of_i2c_read_bit 0578           __end_of_i2c_write 0358  
    __end_of_i2c_write_byte 04A3   __size_of_what_time_is_now 004F             ??_i2c_write_bit 0074  
      __size_of_init_normal 002D                  __pbssBANK0 005A                   ?_i2c_read 0022  
                __pmaintext 0011               ?_next_segment 0070                     ?___bmul 0074  
                   ?_bit_on 0070                  __pintentry 0004             ?_i2c_write_byte 0070  
        __size_of_rtc_setup 0047               i2c_read_bit@b 0075        __size_of_next_minute 0022  
                ??_i2c_read 0024        what_time_is_now@data 002B          interrupt_handler@c 0079  
            ??_next_segment 0024             __size_of___bmul 0018                     _a_latch 005C  
           __size_of_bit_on 000A        __size_of_shift_write 0049                  _init_setup 0660  
                   _bit_off 0637     __size_of_wait_for_event 007B                     _updated 03C5  
                   main@tmp 0044        end_of_initialization 04D2           __end_of_rtc_setup 0437  
                _shift_send 0653                  _shift_show 065A              shift_send@data 0023  
     __size_of_i2c_read_bit 0026            _what_time_is_now 0358               i2c_write@addr 0022  
             i2c_write@data 0023                   i2c_read@d 0025                _i2c_read_bit 0552  
     __end_of_i2c_check_ack 046F                 rtc_setup@rv 003D           _application_reset 05DB  
            __end_of___bmul 060D              __end_of_bit_on 064B                 ?_init_setup 0070  
        ?_application_reset 0070         start_initialization 04A3         ??_application_reset 0078  
      __end_of_next_segment 02FC                   _i2c_write 02FC       __end_of_i2c_read_byte 052B  
         __size_of_i2c_read 007D          what_time_is_now@rv 002A                 ?_shift_send 0070  
               ?_shift_show 0070   __end_of_application_reset 05F5                    ??___bmul 0075  
                  ??_bit_on 0074                 __pdataBANK0 0046            ??_i2c_write_byte 0076  
             ??_init_normal 0078              _wait_for_event 01B4                 __pbssCOMMON 0079  
             __pcstackBANK0 0020                  ?_i2c_write 0022      __size_of_set_it_faster 0016  
     __end_of_i2c_write_bit 059E         __size_of_init_setup 0006                   __ptext870 0137  
                 __ptext862 05C0                   __ptext871 0653                   __ptext863 04D4  
                 __ptext880 01B4                   __ptext872 0501                   __ptext864 05DB  
                 __ptext881 0660                   __ptext873 046F                   __ptext865 022F  
                 __ptext882 059E                   __ptext874 065A                   __ptext866 03F0  
                 __ptext883 060D                   __ptext875 03A7                   __ptext867 029A  
                 __ptext884 0637                   __ptext876 05F5                   __ptext868 0358  
                 __ptext885 0641                   __ptext877 0437                   __ptext869 02FC  
                 __ptext886 052B                   __ptext878 0552                   __ptext887 0000  
                 __ptext879 0578                    ?_bit_off 0070                   __pswtext1 0001  
    __end_of_wait_for_event 022F           _interrupt_handler 052B          ?_interrupt_handler 0070  
                 _need_sync 03C3               ??_next_minute 0074         __size_of_shift_send 0007  
       __size_of_shift_show 0006         ??_interrupt_handler 0070         __end_of_init_normal 0501  
         interrupt_function 0004    __end_of_what_time_is_now 03A7                   bit_off@bt 0075  
             ??_shift_write 0076  __size_of_application_reset 001A               _set_it_faster 060D  
                 _rtc_setup 03F0              i2c_read_byte@i 0020   __end_of_interrupt_handler 0552  
           ?_wait_for_event 0070       __size_of_next_segment 0062                   main@which 0045  
                rtc_setup@i 003E                 ??_i2c_write 0077                    _i2c_read 0137  
       __end_of_next_minute 05C0                 _need_update 03C4                _tmr0_counter 0061  
            ?_set_it_faster 0070                _tmr1_counter 0062                _next_segment 029A  
                ?_rtc_setup 0070                ??_init_setup 0074         __end_of_shift_write 03F0  
          __size_of_bit_off 000A                 _init_normal 04D4                    _last_clk 03C2  
             __size_of_main 0126               __size_of_init 001B               __size_of_sync 006B  
        __end_of_init_setup 0666                    clear_ram 064B                    bit_on@bt 0075  
              ??_shift_send 0078                ??_shift_show 0076                    main@addr 0043  
__size_of_interrupt_handler 0027                shift_write@i 0021                 _seg_ticks_h 005E  
               _seg_ticks_l 005F            next_segment@data 0025      __size_of_i2c_check_ack 0038  
               _next_minute 059E          __end_of_shift_send 065A          __end_of_shift_show 0660  
                  intlevel1 0000             ??_set_it_faster 0074                  _OSCCONbits 008F  
               _shift_write 03A7                 ??_rtc_setup 0025      __size_of_i2c_read_byte 002A  
         i2c_read_byte@data 0021           ?_what_time_is_now 0070               _i2c_check_ack 0437  
