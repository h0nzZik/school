

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Jun 03 15:09:04 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F819
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 9 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 9 "main.c"
    45  2007  FF98               	dw 0xFFFB & 0xFFFF & 0xFFDF & 0xFFFC & 0xFFBF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_application_reset
    48                           	FNCALL	_main,_bit_on
    49                           	FNCALL	_main,_next_segment
    50                           	FNCALL	_init,_shift_write
    51                           	FNCALL	_init,_hour_start_end_init
    52                           	FNCALL	_init,_sixty_start
    53                           	FNCALL	_init,_sixty_stop
    54                           	FNCALL	_application_reset,_shift_write
    55                           	FNCALL	_next_segment,_show_face
    56                           	FNCALL	_next_segment,_shift_write
    57                           	FNCALL	_show_face,_bit_on
    58                           	FNCALL	_show_face,_bit_off
    59                           	FNCALL	_hour_start_end_init,___bmul
    60                           	FNCALL	_hour_start_end_init,_sixty_start
    61                           	FNCALL	_hour_start_end_init,_sixty_stop
    62                           	FNCALL	_shift_write,_bit_off
    63                           	FNCALL	_shift_write,_bit_on
    64                           	FNROOT	_main
    65                           	FNCALL	_interrupt_handler,_sync
    66                           	FNCALL	_sync,i1_bit_off
    67                           	FNCALL	_sync,i1_bit_on
    68                           	FNCALL	intlevel1,_interrupt_handler
    69                           	global	intlevel1
    70                           	FNROOT	intlevel1
    71                           	global	_hour_end
    72                           	global	_hour_start
    73                           	global	_a_latch
    74                           	global	_nine_start
    75                           	global	_nine_stop
    76                           	global	_running
    77                           	global	_seg
    78                           	global	_seg_ticks_h
    79                           	global	_seg_ticks_l
    80                           	global	_six_start
    81                           	global	_six_stop
    82                           	global	_three_start
    83                           	global	_three_stop
    84                           	global	_tmr0_counter
    85                           	global	_tmr1_counter
    86                           	global	_twelve_start
    87                           	global	_twelve_stop
    88                           	global	interrupt_handler@c
    89                           	global	_PORTA
    90                           psect	text368,local,class=CODE,delta=2
    91                           global __ptext368
    92  0000                     __ptext368:
    93  0005                     _PORTA	set	5
    94                           	global	_T1CON
    95  0010                     _T1CON	set	16
    96                           	global	_TMR0
    97  0001                     _TMR0	set	1
    98                           	global	_TMR1H
    99  000F                     _TMR1H	set	15
   100                           	global	_TMR1L
   101  000E                     _TMR1L	set	14
   102                           	global	_CARRY
   103  0018                     _CARRY	set	24
   104                           	global	_GIE
   105  005F                     _GIE	set	95
   106                           	global	_PEIE
   107  005E                     _PEIE	set	94
   108                           	global	_RB5
   109  0035                     _RB5	set	53
   110                           	global	_RB7
   111  0037                     _RB7	set	55
   112                           	global	_RBIE
   113  005B                     _RBIE	set	91
   114                           	global	_RBIF
   115  0058                     _RBIF	set	88
   116                           	global	_TMR0IE
   117  005D                     _TMR0IE	set	93
   118                           	global	_TMR0IF
   119  005A                     _TMR0IF	set	90
   120                           	global	_TMR1IF
   121  0060                     _TMR1IF	set	96
   122                           	global	_TMR1ON
   123  0080                     _TMR1ON	set	128
   124                           	global	_ADCON1
   125  009F                     _ADCON1	set	159
   126                           	global	_OSCCONbits
   127  008F                     _OSCCONbits	set	143
   128                           	global	_TRISA
   129  0085                     _TRISA	set	133
   130                           	global	_TRISB
   131  0086                     _TRISB	set	134
   132                           	global	_IOFS
   133  047A                     _IOFS	set	1146
   134                           	global	_T0CS
   135  040D                     _T0CS	set	1037
   136                           	global	_TMR1IE
   137  0460                     _TMR1IE	set	1120
   138                           	global	_EEADR
   139  010D                     _EEADR	set	269
   140                           	global	_EEDATA
   141  010C                     _EEDATA	set	268
   142                           	global	_EECON1
   143  018C                     _EECON1	set	396
   144                           	global	_EECON2
   145  018D                     _EECON2	set	397
   146                           	global	_RD
   147  0C60                     _RD	set	3168
   148                           	global	_WR
   149  0C61                     _WR	set	3169
   150                           	global	_WREN
   151  0C62                     _WREN	set	3170
   152                           	file	"C:\Users\vyvoj\AppData\Local\Temp\s234."
   153                           	line	#
   154                           psect cinit,class=CODE,delta=2
   155                           global start_initialization
   156  031A                     start_initialization:
   157                           
   158                           psect	bssCOMMON,class=COMMON,space=1
   159                           global __pbssCOMMON
   160  0079                     __pbssCOMMON:
   161  0079                     interrupt_handler@c:
   162  0079                            ds      1
   163                           
   164                           psect	bssBANK0,class=BANK0,space=1
   165                           global __pbssBANK0
   166  0020                     __pbssBANK0:
   167  0020                     _hour_end:
   168  0020                            ds      12
   169                           
   170  002C                     _hour_start:
   171  002C                            ds      12
   172                           
   173  0038                     _a_latch:
   174  0038                            ds      1
   175                           
   176  0039                     _nine_start:
   177  0039                            ds      1
   178                           
   179  003A                     _nine_stop:
   180  003A                            ds      1
   181                           
   182  003B                     _running:
   183  003B                            ds      1
   184                           
   185  003C                     _seg:
   186  003C                            ds      1
   187                           
   188  003D                     _seg_ticks_h:
   189  003D                            ds      1
   190                           
   191  003E                     _seg_ticks_l:
   192  003E                            ds      1
   193                           
   194  003F                     _six_start:
   195  003F                            ds      1
   196                           
   197  0040                     _six_stop:
   198  0040                            ds      1
   199                           
   200  0041                     _three_start:
   201  0041                            ds      1
   202                           
   203  0042                     _three_stop:
   204  0042                            ds      1
   205                           
   206  0043                     _tmr0_counter:
   207  0043                            ds      1
   208                           
   209  0044                     _tmr1_counter:
   210  0044                            ds      1
   211                           
   212  0045                     _twelve_start:
   213  0045                            ds      1
   214                           
   215  0046                     _twelve_stop:
   216  0046                            ds      1
   217                           
   218                           psect clrtext,class=CODE,delta=2
   219                           global clear_ram
   220                           ;	Called with FSR containing the base address, and
   221                           ;	W with the last address+1
   222  0322                     clear_ram:
   223  0322  0064               	clrwdt			;clear the watchdog before getting into this loop
   224  0323                     clrloop:
   225  0323  0180               	clrf	indf		;clear RAM location pointed to by FSR
   226  0324  0A84               	incf	fsr,f		;increment pointer
   227  0325  0604               	xorwf	fsr,w		;XOR with final address
   228  0326  1903               	btfsc	status,2	;have we reached the end yet?
   229  0327  3400               	retlw	0		;all done for this memory range, return
   230  0328  0604               	xorwf	fsr,w		;XOR again to restore value
   231  0329  2B23               	goto	clrloop		;do the next byte
   232                           
   233                           ; Clear objects allocated to COMMON
   234                           psect cinit,class=CODE,delta=2
   235  031A  01F9               	clrf	((__pbssCOMMON)+0)&07Fh
   236                           ; Clear objects allocated to BANK0
   237                           psect cinit,class=CODE,delta=2
   238  031B  1383               	bcf	status, 7	;select IRP bank0
   239  031C  3020               	movlw	low(__pbssBANK0)
   240  031D  0084               	movwf	fsr
   241  031E  3047               	movlw	low((__pbssBANK0)+027h)
   242  031F  2322               	fcall	clear_ram
   243                           psect cinit,class=CODE,delta=2
   244                           global end_of_initialization
   245                           
   246                           ;End of C runtime variable initialization code
   247                           
   248  0320                     end_of_initialization:
   249  0320  0183               clrf status
   250  0321  29C8               ljmp _main	;jump to C main() function
   251                           psect	cstackCOMMON,class=COMMON,space=1
   252                           global __pcstackCOMMON
   253  0070                     __pcstackCOMMON:
   254                           	global	?_bit_on
   255  0070                     ?_bit_on:	; 0 bytes @ 0x0
   256                           	global	?_bit_off
   257  0070                     ?_bit_off:	; 0 bytes @ 0x0
   258                           	global	?_shift_write
   259  0070                     ?_shift_write:	; 0 bytes @ 0x0
   260                           	global	?_hour_start_end_init
   261  0070                     ?_hour_start_end_init:	; 0 bytes @ 0x0
   262                           	global	?_show_face
   263  0070                     ?_show_face:	; 0 bytes @ 0x0
   264                           	global	?_next_segment
   265  0070                     ?_next_segment:	; 0 bytes @ 0x0
   266                           	global	?_sync
   267  0070                     ?_sync:	; 0 bytes @ 0x0
   268                           	global	?_application_reset
   269  0070                     ?_application_reset:	; 0 bytes @ 0x0
   270                           	global	?_interrupt_handler
   271  0070                     ?_interrupt_handler:	; 0 bytes @ 0x0
   272                           	global	?_init
   273  0070                     ?_init:	; 0 bytes @ 0x0
   274                           	global	?_main
   275  0070                     ?_main:	; 0 bytes @ 0x0
   276                           	global	?i1_bit_on
   277  0070                     ?i1_bit_on:	; 0 bytes @ 0x0
   278                           	global	??i1_bit_on
   279  0070                     ??i1_bit_on:	; 0 bytes @ 0x0
   280                           	global	?i1_bit_off
   281  0070                     ?i1_bit_off:	; 0 bytes @ 0x0
   282                           	global	??i1_bit_off
   283  0070                     ??i1_bit_off:	; 0 bytes @ 0x0
   284                           	global	?_sixty_start
   285  0070                     ?_sixty_start:	; 1 bytes @ 0x0
   286                           	global	?_sixty_stop
   287  0070                     ?_sixty_stop:	; 1 bytes @ 0x0
   288  0070                     	ds	1
   289                           	global	i1bit_on@bt
   290  0071                     i1bit_on@bt:	; 1 bytes @ 0x1
   291                           	global	i1bit_off@bt
   292  0071                     i1bit_off@bt:	; 1 bytes @ 0x1
   293  0071                     	ds	1
   294                           	global	??_sync
   295  0072                     ??_sync:	; 0 bytes @ 0x2
   296  0072                     	ds	3
   297                           	global	??_interrupt_handler
   298  0075                     ??_interrupt_handler:	; 0 bytes @ 0x5
   299  0075                     	ds	4
   300                           psect	cstackBANK0,class=BANK0,space=1
   301                           global __pcstackBANK0
   302  0047                     __pcstackBANK0:
   303                           	global	??_bit_on
   304  0047                     ??_bit_on:	; 0 bytes @ 0x0
   305                           	global	??_bit_off
   306  0047                     ??_bit_off:	; 0 bytes @ 0x0
   307                           	global	??_sixty_start
   308  0047                     ??_sixty_start:	; 0 bytes @ 0x0
   309                           	global	??_sixty_stop
   310  0047                     ??_sixty_stop:	; 0 bytes @ 0x0
   311                           	global	?___bmul
   312  0047                     ?___bmul:	; 1 bytes @ 0x0
   313                           	global	___bmul@multiplicand
   314  0047                     ___bmul@multiplicand:	; 1 bytes @ 0x0
   315  0047                     	ds	1
   316                           	global	??___bmul
   317  0048                     ??___bmul:	; 0 bytes @ 0x1
   318                           	global	bit_on@bt
   319  0048                     bit_on@bt:	; 1 bytes @ 0x1
   320                           	global	bit_off@bt
   321  0048                     bit_off@bt:	; 1 bytes @ 0x1
   322  0048                     	ds	1
   323                           	global	??_shift_write
   324  0049                     ??_shift_write:	; 0 bytes @ 0x2
   325                           	global	??_show_face
   326  0049                     ??_show_face:	; 0 bytes @ 0x2
   327                           	global	sixty_start@x
   328  0049                     sixty_start@x:	; 1 bytes @ 0x2
   329                           	global	sixty_stop@x
   330  0049                     sixty_stop@x:	; 1 bytes @ 0x2
   331                           	global	___bmul@product
   332  0049                     ___bmul@product:	; 1 bytes @ 0x2
   333  0049                     	ds	1
   334                           	global	show_face@i
   335  004A                     show_face@i:	; 1 bytes @ 0x3
   336                           	global	___bmul@multiplier
   337  004A                     ___bmul@multiplier:	; 1 bytes @ 0x3
   338  004A                     	ds	1
   339                           	global	??_hour_start_end_init
   340  004B                     ??_hour_start_end_init:	; 0 bytes @ 0x4
   341                           	global	shift_write@i
   342  004B                     shift_write@i:	; 2 bytes @ 0x4
   343  004B                     	ds	2
   344                           	global	shift_write@data
   345  004D                     shift_write@data:	; 1 bytes @ 0x6
   346                           	global	hour_start_end_init@min
   347  004D                     hour_start_end_init@min:	; 1 bytes @ 0x6
   348  004D                     	ds	1
   349                           	global	??_next_segment
   350  004E                     ??_next_segment:	; 0 bytes @ 0x7
   351                           	global	??_application_reset
   352  004E                     ??_application_reset:	; 0 bytes @ 0x7
   353                           	global	hour_start_end_init@i
   354  004E                     hour_start_end_init@i:	; 1 bytes @ 0x7
   355  004E                     	ds	1
   356                           	global	??_init
   357  004F                     ??_init:	; 0 bytes @ 0x8
   358  004F                     	ds	1
   359                           	global	??_main
   360  0050                     ??_main:	; 0 bytes @ 0x9
   361  0050                     	ds	1
   362                           	global	main@i
   363  0051                     main@i:	; 1 bytes @ 0xA
   364  0051                     	ds	1
   365 ;;Data sizes: Strings 0, constant 0, data 0, bss 40, persistent 0 stack 0
   366 ;;Auto spaces:   Size  Autos    Used
   367 ;; COMMON          14      9      10
   368 ;; BANK0           80     11      50
   369 ;; BANK1           80      0       0
   370 ;; BANK2           80      0       0
   371                           
   372 ;;
   373 ;; Pointer list with targets:
   374                           
   375                           
   376                           
   377 ;;
   378 ;; Critical Paths under _main in COMMON
   379 ;;
   380 ;;   None.
   381 ;;
   382 ;; Critical Paths under _interrupt_handler in COMMON
   383 ;;
   384 ;;   _interrupt_handler->_sync
   385 ;;   _sync->i1_bit_off
   386 ;;   _sync->i1_bit_on
   387 ;;
   388 ;; Critical Paths under _main in BANK0
   389 ;;
   390 ;;   _main->_init
   391 ;;   _init->_hour_start_end_init
   392 ;;   _application_reset->_shift_write
   393 ;;   _next_segment->_shift_write
   394 ;;   _show_face->_bit_on
   395 ;;   _show_face->_bit_off
   396 ;;   _hour_start_end_init->___bmul
   397 ;;   _shift_write->_bit_off
   398 ;;   _shift_write->_bit_on
   399 ;;
   400 ;; Critical Paths under _interrupt_handler in BANK0
   401 ;;
   402 ;;   None.
   403 ;;
   404 ;; Critical Paths under _main in BANK1
   405 ;;
   406 ;;   None.
   407 ;;
   408 ;; Critical Paths under _interrupt_handler in BANK1
   409 ;;
   410 ;;   None.
   411 ;;
   412 ;; Critical Paths under _main in BANK2
   413 ;;
   414 ;;   None.
   415 ;;
   416 ;; Critical Paths under _interrupt_handler in BANK2
   417 ;;
   418 ;;   None.
   419                           
   420 ;;
   421 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   422 ;;
   423                           
   424 ;;
   425 ;;Call Graph Tables:
   426 ;;
   427 ;; ---------------------------------------------------------------------------------
   428 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   429 ;; ---------------------------------------------------------------------------------
   430 ;; (0) _main                                                 2     2      0    1608
   431 ;;                                              9 BANK0      2     2      0
   432 ;;                               _init
   433 ;;                  _application_reset
   434 ;;                             _bit_on
   435 ;;                       _next_segment
   436 ;; ---------------------------------------------------------------------------------
   437 ;; (1) _init                                                 1     1      0    1181
   438 ;;                                              8 BANK0      1     1      0
   439 ;;                        _shift_write
   440 ;;                _hour_start_end_init
   441 ;;                        _sixty_start
   442 ;;                         _sixty_stop
   443 ;; ---------------------------------------------------------------------------------
   444 ;; (1) _application_reset                                    0     0      0     135
   445 ;;                        _shift_write
   446 ;; ---------------------------------------------------------------------------------
   447 ;; (1) _next_segment                                         1     1      0     269
   448 ;;                                              7 BANK0      1     1      0
   449 ;;                          _show_face
   450 ;;                        _shift_write
   451 ;; ---------------------------------------------------------------------------------
   452 ;; (2) _show_face                                            2     2      0     134
   453 ;;                                              2 BANK0      2     2      0
   454 ;;                             _bit_on
   455 ;;                            _bit_off
   456 ;; ---------------------------------------------------------------------------------
   457 ;; (2) _hour_start_end_init                                  4     4      0     670
   458 ;;                                              4 BANK0      4     4      0
   459 ;;                             ___bmul
   460 ;;                        _sixty_start
   461 ;;                         _sixty_stop
   462 ;; ---------------------------------------------------------------------------------
   463 ;; (2) _shift_write                                          5     5      0     135
   464 ;;                                              2 BANK0      5     5      0
   465 ;;                            _bit_off
   466 ;;                             _bit_on
   467 ;; ---------------------------------------------------------------------------------
   468 ;; (3) ___bmul                                               4     3      1      92
   469 ;;                                              0 BANK0      4     3      1
   470 ;; ---------------------------------------------------------------------------------
   471 ;; (2) _sixty_stop                                           3     3      0     177
   472 ;;                                              0 BANK0      3     3      0
   473 ;; ---------------------------------------------------------------------------------
   474 ;; (2) _sixty_start                                          3     3      0     199
   475 ;;                                              0 BANK0      3     3      0
   476 ;; ---------------------------------------------------------------------------------
   477 ;; (3) _bit_off                                              2     2      0      22
   478 ;;                                              0 BANK0      2     2      0
   479 ;; ---------------------------------------------------------------------------------
   480 ;; (3) _bit_on                                               2     2      0      22
   481 ;;                                              0 BANK0      2     2      0
   482 ;; ---------------------------------------------------------------------------------
   483 ;; Estimated maximum stack depth 3
   484 ;; ---------------------------------------------------------------------------------
   485 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   486 ;; ---------------------------------------------------------------------------------
   487 ;; (4) _interrupt_handler                                    4     4      0     146
   488 ;;                                              5 COMMON     4     4      0
   489 ;;                               _sync
   490 ;; ---------------------------------------------------------------------------------
   491 ;; (5) _sync                                                 3     3      0     146
   492 ;;                                              2 COMMON     3     3      0
   493 ;;                          i1_bit_off
   494 ;;                           i1_bit_on
   495 ;; ---------------------------------------------------------------------------------
   496 ;; (6) i1_bit_off                                            2     2      0      73
   497 ;;                                              0 COMMON     2     2      0
   498 ;; ---------------------------------------------------------------------------------
   499 ;; (6) i1_bit_on                                             2     2      0      73
   500 ;;                                              0 COMMON     2     2      0
   501 ;; ---------------------------------------------------------------------------------
   502 ;; Estimated maximum stack depth 6
   503 ;; ---------------------------------------------------------------------------------
   504                           
   505 ;; Call Graph Graphs:
   506                           
   507 ;; _main (ROOT)
   508 ;;   _init
   509 ;;     _shift_write
   510 ;;       _bit_off
   511 ;;       _bit_on
   512 ;;     _hour_start_end_init
   513 ;;       ___bmul
   514 ;;       _sixty_start
   515 ;;       _sixty_stop
   516 ;;     _sixty_start
   517 ;;     _sixty_stop
   518 ;;   _application_reset
   519 ;;     _shift_write
   520 ;;       _bit_off
   521 ;;       _bit_on
   522 ;;   _bit_on
   523 ;;   _next_segment
   524 ;;     _show_face
   525 ;;       _bit_on
   526 ;;       _bit_off
   527 ;;     _shift_write
   528 ;;       _bit_off
   529 ;;       _bit_on
   530 ;;
   531 ;; _interrupt_handler (ROOT)
   532 ;;   _sync
   533 ;;     i1_bit_off
   534 ;;     i1_bit_on
   535 ;;
   536                           
   537 ;; Address spaces:
   538                           
   539 ;;Name               Size   Autos  Total    Cost      Usage
   540 ;;BITCOMMON            E      0       0       0        0.0%
   541 ;;EEDATA             100      0       0       0        0.0%
   542 ;;NULL                 0      0       0       0        0.0%
   543 ;;CODE                 0      0       0       0        0.0%
   544 ;;COMMON               E      9       A       1       71.4%
   545 ;;BITSFR0              0      0       0       1        0.0%
   546 ;;SFR0                 0      0       0       1        0.0%
   547 ;;BITSFR1              0      0       0       2        0.0%
   548 ;;SFR1                 0      0       0       2        0.0%
   549 ;;STACK                0      0       9       2        0.0%
   550 ;;BANK0               50      B      32       3       62.5%
   551 ;;BITBANK1            50      0       0       4        0.0%
   552 ;;BITSFR3              0      0       0       4        0.0%
   553 ;;SFR3                 0      0       0       4        0.0%
   554 ;;BANK1               50      0       0       5        0.0%
   555 ;;BITSFR2              0      0       0       5        0.0%
   556 ;;SFR2                 0      0       0       5        0.0%
   557 ;;BITBANK2            50      0       0       6        0.0%
   558 ;;BANK2               50      0       0       7        0.0%
   559 ;;ABS                  0      0      3C       8        0.0%
   560 ;;BITBANK0            50      0       0       9        0.0%
   561 ;;DATA                 0      0      45      10        0.0%
   562                           
   563                           	global	_main
   564                           psect	maintext,global,class=CODE,delta=2
   565                           global __pmaintext
   566  01C8                     __pmaintext:
   567                           
   568 ;; *************** function _main *****************
   569 ;; Defined at:
   570 ;;		line 402 in file "main.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;		None
   573 ;; Auto vars:     Size  Location     Type
   574 ;;  i               1   10[BANK0 ] unsigned char 
   575 ;; Return value:  Size  Location     Type
   576 ;;		None               void
   577 ;; Registers used:
   578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 17F/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   584 ;;      Params:         0       0       0       0
   585 ;;      Locals:         0       1       0       0
   586 ;;      Temps:          0       1       0       0
   587 ;;      Totals:         0       2       0       0
   588 ;;Total ram usage:        2 bytes
   589 ;; Hardware stack levels required when called:    6
   590 ;; This function calls:
   591 ;;		_init
   592 ;;		_application_reset
   593 ;;		_bit_on
   594 ;;		_next_segment
   595 ;; This function is called by:
   596 ;;		Startup code after reset
   597 ;; This function uses a non-reentrant model
   598 ;;
   599                           psect	maintext
   600                           	file	"main.c"
   601                           	line	402
   602                           	global	__size_of_main
   603  0043                     	__size_of_main	equ	__end_of_main-_main
   604                           	
   605  01C8                     _main:	
   606                           	opt	stack 2
   607                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   608                           	line	404
   609                           	
   610  01C8                     l3006:	
   611                           ;main.c: 404: init();
   612  01C8  2011               	fcall	_init
   613                           	line	405
   614                           	
   615  01C9                     l3008:	
   616                           ;main.c: 405: application_reset();
   617  01C9  22E2               	fcall	_application_reset
   618                           	line	407
   619                           	
   620  01CA                     l3010:	
   621                           ;main.c: 407: uns8 i = 0;
   622  01CA  1283               	bcf	status, 5	;RP0=0, select bank0
   623  01CB  1303               	bcf	status, 6	;RP1=0, select bank0
   624  01CC  01D1               	clrf	(main@i)
   625                           	line	410
   626                           	
   627  01CD                     l3012:	
   628                           ;main.c: 410: bit_on(0x02);
   629  01CD  3002               	movlw	(02h)
   630  01CE  22FC               	fcall	_bit_on
   631  01CF  29D0               	goto	l3014
   632                           	line	412
   633                           ;main.c: 412: while(1) {
   634                           	
   635  01D0                     l574:	
   636                           	line	413
   637                           	
   638  01D0                     l3014:	
   639                           ;main.c: 413: if (TMR0IF) {
   640  01D0  1D0B               	btfss	(90/8),(90)&7
   641  01D1  29D3               	goto	u2991
   642  01D2  29D4               	goto	u2990
   643  01D3                     u2991:
   644  01D3  29F2               	goto	l3030
   645  01D4                     u2990:
   646                           	line	414
   647                           	
   648  01D4                     l3016:	
   649                           ;main.c: 414: if (running == 2) {
   650  01D4  1283               	bcf	status, 5	;RP0=0, select bank0
   651  01D5  1303               	bcf	status, 6	;RP1=0, select bank0
   652  01D6  083B               	movf	(_running),w
   653  01D7  3A02               	xorlw	02h
   654  01D8  1D03               	skipz
   655  01D9  29DB               	goto	u3001
   656  01DA  29DC               	goto	u3000
   657  01DB                     u3001:
   658  01DB  29F0               	goto	l3028
   659  01DC                     u3000:
   660                           	line	416
   661                           	
   662  01DC                     l3018:	
   663                           ;main.c: 416: if (tmr0_counter == seg_ticks_h) {
   664  01DC  0843               	movf	(_tmr0_counter),w
   665  01DD  063D               	xorwf	(_seg_ticks_h),w
   666  01DE  1D03               	skipz
   667  01DF  29E1               	goto	u3011
   668  01E0  29E2               	goto	u3010
   669  01E1                     u3011:
   670  01E1  29E8               	goto	l3026
   671  01E2                     u3010:
   672                           	line	417
   673                           	
   674  01E2                     l3020:	
   675                           ;main.c: 417: tmr0_counter = 0;
   676  01E2  01C3               	clrf	(_tmr0_counter)
   677                           	line	418
   678                           	
   679  01E3                     l3022:	
   680                           ;main.c: 418: TMR0 = 256 - seg_ticks_l;
   681  01E3  033E               	decf	(_seg_ticks_l),w
   682  01E4  3AFF               	xorlw	0ffh
   683  01E5  0081               	movwf	(1)
   684                           	line	419
   685                           	
   686  01E6                     l3024:	
   687                           ;main.c: 419: next_segment();
   688  01E6  20E0               	fcall	_next_segment
   689                           	line	420
   690                           ;main.c: 420: } else {
   691  01E7  29F0               	goto	l3028
   692                           	
   693  01E8                     l577:	
   694                           	line	421
   695                           	
   696  01E8                     l3026:	
   697                           ;main.c: 421: tmr0_counter++;
   698  01E8  3001               	movlw	(01h)
   699  01E9  1283               	bcf	status, 5	;RP0=0, select bank0
   700  01EA  1303               	bcf	status, 6	;RP1=0, select bank0
   701  01EB  00D0               	movwf	(??_main+0)+0
   702  01EC  0850               	movf	(??_main+0)+0,w
   703  01ED  07C3               	addwf	(_tmr0_counter),f
   704  01EE  29F0               	goto	l3028
   705                           	line	422
   706                           	
   707  01EF                     l578:	
   708  01EF  29F0               	goto	l3028
   709                           	line	423
   710                           	
   711  01F0                     l576:	
   712                           	line	424
   713                           	
   714  01F0                     l3028:	
   715                           ;main.c: 422: }
   716                           ;main.c: 423: }
   717                           ;main.c: 424: TMR0IF = 0;
   718  01F0  110B               	bcf	(90/8),(90)&7
   719  01F1  29F2               	goto	l3030
   720                           	line	425
   721                           	
   722  01F2                     l575:	
   723                           	line	428
   724                           	
   725  01F2                     l3030:	
   726                           ;main.c: 425: }
   727                           ;main.c: 428: if (TMR1IF) {
   728  01F2  1283               	bcf	status, 5	;RP0=0, select bank0
   729  01F3  1303               	bcf	status, 6	;RP1=0, select bank0
   730  01F4  1C0C               	btfss	(96/8),(96)&7
   731  01F5  29F7               	goto	u3021
   732  01F6  29F8               	goto	u3020
   733  01F7                     u3021:
   734  01F7  29D0               	goto	l3014
   735  01F8                     u3020:
   736                           	line	429
   737                           	
   738  01F8                     l3032:	
   739                           ;main.c: 429: tmr1_counter++;
   740  01F8  3001               	movlw	(01h)
   741  01F9  00D0               	movwf	(??_main+0)+0
   742  01FA  0850               	movf	(??_main+0)+0,w
   743  01FB  07C4               	addwf	(_tmr1_counter),f
   744                           	line	432
   745                           	
   746  01FC                     l3034:	
   747                           ;main.c: 432: if (tmr1_counter >= 40) {
   748  01FC  3028               	movlw	(028h)
   749  01FD  0244               	subwf	(_tmr1_counter),w
   750  01FE  1C03               	skipc
   751  01FF  2A01               	goto	u3031
   752  0200  2A02               	goto	u3030
   753  0201                     u3031:
   754  0201  2A04               	goto	l3038
   755  0202                     u3030:
   756                           	line	433
   757                           	
   758  0202                     l3036:	
   759                           ;main.c: 433: application_reset();
   760  0202  22E2               	fcall	_application_reset
   761  0203  2A04               	goto	l3038
   762                           	line	434
   763                           	
   764  0204                     l580:	
   765                           	line	435
   766                           	
   767  0204                     l3038:	
   768                           ;main.c: 434: }
   769                           ;main.c: 435: TMR1IF = 0;
   770  0204  1283               	bcf	status, 5	;RP0=0, select bank0
   771  0205  1303               	bcf	status, 6	;RP1=0, select bank0
   772  0206  100C               	bcf	(96/8),(96)&7
   773  0207  29D0               	goto	l3014
   774                           	line	436
   775                           	
   776  0208                     l579:	
   777  0208  29D0               	goto	l3014
   778                           	line	439
   779                           	
   780  0209                     l581:	
   781                           	line	412
   782  0209  29D0               	goto	l3014
   783                           	
   784  020A                     l582:	
   785                           	line	440
   786                           	
   787  020A                     l583:	
   788                           	global	start
   789  020A  2810               	ljmp	start
   790                           	opt stack 0
   791                           GLOBAL	__end_of_main
   792  020B                     	__end_of_main:
   793 ;; =============== function _main ends ============
   794                           
   795                           	signat	_main,88
   796                           	global	_init
   797                           psect	text369,local,class=CODE,delta=2
   798                           global __ptext369
   799  0011                     __ptext369:
   800                           
   801 ;; *************** function _init *****************
   802 ;; Defined at:
   803 ;;		line 345 in file "main.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;		None
   806 ;; Auto vars:     Size  Location     Type
   807 ;;		None
   808 ;; Return value:  Size  Location     Type
   809 ;;		None               void
   810 ;; Registers used:
   811 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   812 ;; Tracked objects:
   813 ;;		On entry : 0/0
   814 ;;		On exit  : 0/0
   815 ;;		Unchanged: 0/0
   816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   817 ;;      Params:         0       0       0       0
   818 ;;      Locals:         0       0       0       0
   819 ;;      Temps:          0       1       0       0
   820 ;;      Totals:         0       1       0       0
   821 ;;Total ram usage:        1 bytes
   822 ;; Hardware stack levels used:    1
   823 ;; Hardware stack levels required when called:    5
   824 ;; This function calls:
   825 ;;		_shift_write
   826 ;;		_hour_start_end_init
   827 ;;		_sixty_start
   828 ;;		_sixty_stop
   829 ;; This function is called by:
   830 ;;		_main
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           psect	text369
   834                           	file	"main.c"
   835                           	line	345
   836                           	global	__size_of_init
   837  006A                     	__size_of_init	equ	__end_of_init-_init
   838                           	
   839  0011                     _init:	
   840                           	opt	stack 2
   841                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   842                           	line	348
   843                           	
   844  0011                     l2946:	
   845                           ;main.c: 348: TRISA = 0;
   846  0011  1683               	bsf	status, 5	;RP0=1, select bank1
   847  0012  1303               	bcf	status, 6	;RP1=0, select bank1
   848  0013  0185               	clrf	(133)^080h	;volatile
   849                           	line	349
   850                           ;main.c: 349: ADCON1 = 0;
   851  0014  019F               	clrf	(159)^080h	;volatile
   852                           	line	350
   853                           	
   854  0015                     l2948:	
   855                           # 350 "main.c"
   856  0015  0000               nop ;#
   857                           psect	text369
   858                           	line	351
   859                           ;main.c: 351: PORTA = 0x00;
   860  0016  1283               	bcf	status, 5	;RP0=0, select bank0
   861  0017  1303               	bcf	status, 6	;RP1=0, select bank0
   862  0018  0185               	clrf	(5)	;volatile
   863                           	line	352
   864                           	
   865  0019                     l2950:	
   866                           ;main.c: 352: a_latch = 0x00;
   867  0019  01B8               	clrf	(_a_latch)
   868                           	line	353
   869                           	
   870  001A                     l2952:	
   871                           # 353 "main.c"
   872  001A  0000               nop ;#
   873                           psect	text369
   874                           	line	356
   875                           	
   876  001B                     l2954:	
   877                           ;main.c: 356: TRISB = 0xFF;
   878  001B  30FF               	movlw	(0FFh)
   879  001C  1683               	bsf	status, 5	;RP0=1, select bank1
   880  001D  1303               	bcf	status, 6	;RP1=0, select bank1
   881  001E  0086               	movwf	(134)^080h	;volatile
   882                           	line	360
   883                           	
   884  001F                     l2956:	
   885                           ;main.c: 360: shift_write(0x05);
   886  001F  3005               	movlw	(05h)
   887  0020  2133               	fcall	_shift_write
   888                           	line	362
   889                           	
   890  0021                     l2958:	
   891                           ;main.c: 362: OSCCONbits.IRCF2 = 1;
   892  0021  1683               	bsf	status, 5	;RP0=1, select bank1
   893  0022  1303               	bcf	status, 6	;RP1=0, select bank1
   894  0023  170F               	bsf	(143)^080h,6	;volatile
   895                           	line	363
   896                           	
   897  0024                     l2960:	
   898                           ;main.c: 363: OSCCONbits.IRCF1 = 1;
   899  0024  168F               	bsf	(143)^080h,5	;volatile
   900                           	line	364
   901                           	
   902  0025                     l2962:	
   903                           ;main.c: 364: OSCCONbits.IRCF0 = 1;
   904  0025  160F               	bsf	(143)^080h,4	;volatile
   905                           	line	366
   906                           ;main.c: 366: while(!IOFS) {
   907  0026  2827               	goto	l568
   908                           	
   909  0027                     l569:	
   910                           	line	368
   911                           ;main.c: 367: ;
   912                           	
   913  0027                     l568:	
   914                           	line	366
   915  0027  1D0F               	btfss	(1146/8)^080h,(1146)&7
   916  0028  282A               	goto	u2981
   917  0029  282B               	goto	u2980
   918  002A                     u2981:
   919  002A  2827               	goto	l568
   920  002B                     u2980:
   921  002B  282C               	goto	l2964
   922                           	
   923  002C                     l570:	
   924                           	line	369
   925                           	
   926  002C                     l2964:	
   927                           ;main.c: 368: }
   928                           ;main.c: 369: shift_write(0x02);
   929  002C  3002               	movlw	(02h)
   930  002D  2133               	fcall	_shift_write
   931                           	line	372
   932                           	
   933  002E                     l2966:	
   934                           ;main.c: 372: hour_start_end_init();
   935  002E  2181               	fcall	_hour_start_end_init
   936                           	line	374
   937                           	
   938  002F                     l2968:	
   939                           ;main.c: 374: twelve_start = sixty_start(0);
   940  002F  3000               	movlw	(0)
   941  0030  2242               	fcall	_sixty_start
   942  0031  1283               	bcf	status, 5	;RP0=0, select bank0
   943  0032  1303               	bcf	status, 6	;RP1=0, select bank0
   944  0033  00CF               	movwf	(??_init+0)+0
   945  0034  084F               	movf	(??_init+0)+0,w
   946  0035  00C5               	movwf	(_twelve_start)
   947                           	line	375
   948                           	
   949  0036                     l2970:	
   950                           ;main.c: 375: twelve_stop = sixty_stop(0);
   951  0036  3000               	movlw	(0)
   952  0037  2275               	fcall	_sixty_stop
   953  0038  1283               	bcf	status, 5	;RP0=0, select bank0
   954  0039  1303               	bcf	status, 6	;RP1=0, select bank0
   955  003A  00CF               	movwf	(??_init+0)+0
   956  003B  084F               	movf	(??_init+0)+0,w
   957  003C  00C6               	movwf	(_twelve_stop)
   958                           	line	376
   959                           	
   960  003D                     l2972:	
   961                           ;main.c: 376: three_start = sixty_start(15);
   962  003D  300F               	movlw	(0Fh)
   963  003E  2242               	fcall	_sixty_start
   964  003F  1283               	bcf	status, 5	;RP0=0, select bank0
   965  0040  1303               	bcf	status, 6	;RP1=0, select bank0
   966  0041  00CF               	movwf	(??_init+0)+0
   967  0042  084F               	movf	(??_init+0)+0,w
   968  0043  00C1               	movwf	(_three_start)
   969                           	line	377
   970                           	
   971  0044                     l2974:	
   972                           ;main.c: 377: three_stop = sixty_stop(15);
   973  0044  300F               	movlw	(0Fh)
   974  0045  2275               	fcall	_sixty_stop
   975  0046  1283               	bcf	status, 5	;RP0=0, select bank0
   976  0047  1303               	bcf	status, 6	;RP1=0, select bank0
   977  0048  00CF               	movwf	(??_init+0)+0
   978  0049  084F               	movf	(??_init+0)+0,w
   979  004A  00C2               	movwf	(_three_stop)
   980                           	line	378
   981                           	
   982  004B                     l2976:	
   983                           ;main.c: 378: six_start = sixty_start(30);
   984  004B  301E               	movlw	(01Eh)
   985  004C  2242               	fcall	_sixty_start
   986  004D  1283               	bcf	status, 5	;RP0=0, select bank0
   987  004E  1303               	bcf	status, 6	;RP1=0, select bank0
   988  004F  00CF               	movwf	(??_init+0)+0
   989  0050  084F               	movf	(??_init+0)+0,w
   990  0051  00BF               	movwf	(_six_start)
   991                           	line	379
   992                           	
   993  0052                     l2978:	
   994                           ;main.c: 379: six_stop = sixty_stop(30);
   995  0052  301E               	movlw	(01Eh)
   996  0053  2275               	fcall	_sixty_stop
   997  0054  1283               	bcf	status, 5	;RP0=0, select bank0
   998  0055  1303               	bcf	status, 6	;RP1=0, select bank0
   999  0056  00CF               	movwf	(??_init+0)+0
  1000  0057  084F               	movf	(??_init+0)+0,w
  1001  0058  00C0               	movwf	(_six_stop)
  1002                           	line	380
  1003                           	
  1004  0059                     l2980:	
  1005                           ;main.c: 380: nine_start = sixty_start(45);
  1006  0059  302D               	movlw	(02Dh)
  1007  005A  2242               	fcall	_sixty_start
  1008  005B  1283               	bcf	status, 5	;RP0=0, select bank0
  1009  005C  1303               	bcf	status, 6	;RP1=0, select bank0
  1010  005D  00CF               	movwf	(??_init+0)+0
  1011  005E  084F               	movf	(??_init+0)+0,w
  1012  005F  00B9               	movwf	(_nine_start)
  1013                           	line	381
  1014                           	
  1015  0060                     l2982:	
  1016                           ;main.c: 381: nine_stop = sixty_stop(45);
  1017  0060  302D               	movlw	(02Dh)
  1018  0061  2275               	fcall	_sixty_stop
  1019  0062  1283               	bcf	status, 5	;RP0=0, select bank0
  1020  0063  1303               	bcf	status, 6	;RP1=0, select bank0
  1021  0064  00CF               	movwf	(??_init+0)+0
  1022  0065  084F               	movf	(??_init+0)+0,w
  1023  0066  00BA               	movwf	(_nine_stop)
  1024                           	line	384
  1025                           	
  1026  0067                     l2984:	
  1027                           ;main.c: 384: TMR1IF = 0;
  1028  0067  100C               	bcf	(96/8),(96)&7
  1029                           	line	385
  1030                           	
  1031  0068                     l2986:	
  1032                           ;main.c: 385: TMR1IE = 0;
  1033  0068  1683               	bsf	status, 5	;RP0=1, select bank1
  1034  0069  1303               	bcf	status, 6	;RP1=0, select bank1
  1035  006A  100C               	bcf	(1120/8)^080h,(1120)&7
  1036                           	line	386
  1037                           	
  1038  006B                     l2988:	
  1039                           ;main.c: 386: T1CON = 0;
  1040  006B  1283               	bcf	status, 5	;RP0=0, select bank0
  1041  006C  1303               	bcf	status, 6	;RP1=0, select bank0
  1042  006D  0190               	clrf	(16)	;volatile
  1043                           	line	387
  1044                           	
  1045  006E                     l2990:	
  1046                           ;main.c: 387: TMR1ON = 1;
  1047  006E  1410               	bsf	(128/8),(128)&7
  1048                           	line	389
  1049                           	
  1050  006F                     l2992:	
  1051                           ;main.c: 389: TMR0IF = 0;
  1052  006F  110B               	bcf	(90/8),(90)&7
  1053                           	line	390
  1054                           	
  1055  0070                     l2994:	
  1056                           ;main.c: 390: TMR0IE = 0;
  1057  0070  128B               	bcf	(93/8),(93)&7
  1058                           	line	391
  1059                           	
  1060  0071                     l2996:	
  1061                           ;main.c: 391: T0CS = 0;
  1062  0071  1683               	bsf	status, 5	;RP0=1, select bank1
  1063  0072  1303               	bcf	status, 6	;RP1=0, select bank1
  1064  0073  1281               	bcf	(1037/8)^080h,(1037)&7
  1065                           	line	392
  1066                           	
  1067  0074                     l2998:	
  1068                           ;main.c: 392: running = 0;
  1069  0074  1283               	bcf	status, 5	;RP0=0, select bank0
  1070  0075  1303               	bcf	status, 6	;RP1=0, select bank0
  1071  0076  01BB               	clrf	(_running)
  1072                           	line	395
  1073                           	
  1074  0077                     l3000:	
  1075                           ;main.c: 395: RBIE = 1;
  1076  0077  158B               	bsf	(91/8),(91)&7
  1077                           	line	397
  1078                           	
  1079  0078                     l3002:	
  1080                           ;main.c: 397: PEIE = 1;
  1081  0078  170B               	bsf	(94/8),(94)&7
  1082                           	line	398
  1083                           	
  1084  0079                     l3004:	
  1085                           ;main.c: 398: GIE = 1;
  1086  0079  178B               	bsf	(95/8),(95)&7
  1087                           	line	399
  1088                           	
  1089  007A                     l571:	
  1090  007A  0008               	return
  1091                           	opt stack 0
  1092                           GLOBAL	__end_of_init
  1093  007B                     	__end_of_init:
  1094 ;; =============== function _init ends ============
  1095                           
  1096                           	signat	_init,88
  1097                           	global	_application_reset
  1098                           psect	text370,local,class=CODE,delta=2
  1099                           global __ptext370
  1100  02E2                     __ptext370:
  1101                           
  1102 ;; *************** function _application_reset *****************
  1103 ;; Defined at:
  1104 ;;		line 299 in file "main.c"
  1105 ;; Parameters:    Size  Location     Type
  1106 ;;		None
  1107 ;; Auto vars:     Size  Location     Type
  1108 ;;		None
  1109 ;; Return value:  Size  Location     Type
  1110 ;;		None               void
  1111 ;; Registers used:
  1112 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1118 ;;      Params:         0       0       0       0
  1119 ;;      Locals:         0       0       0       0
  1120 ;;      Temps:          0       0       0       0
  1121 ;;      Totals:         0       0       0       0
  1122 ;;Total ram usage:        0 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    5
  1125 ;; This function calls:
  1126 ;;		_shift_write
  1127 ;; This function is called by:
  1128 ;;		_main
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           psect	text370
  1132                           	file	"main.c"
  1133                           	line	299
  1134                           	global	__size_of_application_reset
  1135  0010                     	__size_of_application_reset	equ	__end_of_application_reset-_application_reset
  1136                           	
  1137  02E2                     _application_reset:	
  1138                           	opt	stack 2
  1139                           ; Regs used in _application_reset: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1140                           	line	300
  1141                           	
  1142  02E2                     l2926:	
  1143                           ;main.c: 300: running = 0;
  1144  02E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1145  02E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1146  02E4  01BB               	clrf	(_running)
  1147                           	line	301
  1148                           	
  1149  02E5                     l2928:	
  1150                           ;main.c: 301: shift_write(0x5A);
  1151  02E5  305A               	movlw	(05Ah)
  1152  02E6  2133               	fcall	_shift_write
  1153                           	line	302
  1154                           	
  1155  02E7                     l2930:	
  1156                           ;main.c: 302: seg = 0;
  1157  02E7  1283               	bcf	status, 5	;RP0=0, select bank0
  1158  02E8  1303               	bcf	status, 6	;RP1=0, select bank0
  1159  02E9  01BC               	clrf	(_seg)
  1160                           	line	303
  1161                           	
  1162  02EA                     l2932:	
  1163                           ;main.c: 303: tmr1_counter = 0;
  1164  02EA  01C4               	clrf	(_tmr1_counter)
  1165                           	line	304
  1166                           	
  1167  02EB                     l2934:	
  1168                           ;main.c: 304: tmr0_counter = 0;
  1169  02EB  01C3               	clrf	(_tmr0_counter)
  1170                           	line	307
  1171                           	
  1172  02EC                     l2936:	
  1173                           ;main.c: 307: TMR0 = 0;
  1174  02EC  0181               	clrf	(1)	;volatile
  1175                           	line	308
  1176                           	
  1177  02ED                     l2938:	
  1178                           ;main.c: 308: TMR1L = 0;
  1179  02ED  018E               	clrf	(14)	;volatile
  1180                           	line	309
  1181                           	
  1182  02EE                     l2940:	
  1183                           ;main.c: 309: TMR1H = 0;
  1184  02EE  018F               	clrf	(15)	;volatile
  1185                           	line	312
  1186                           	
  1187  02EF                     l2942:	
  1188                           ;main.c: 312: TMR0IF = 0;
  1189  02EF  110B               	bcf	(90/8),(90)&7
  1190                           	line	313
  1191                           	
  1192  02F0                     l2944:	
  1193                           ;main.c: 313: TMR1IF = 0;
  1194  02F0  100C               	bcf	(96/8),(96)&7
  1195                           	line	314
  1196                           	
  1197  02F1                     l553:	
  1198  02F1  0008               	return
  1199                           	opt stack 0
  1200                           GLOBAL	__end_of_application_reset
  1201  02F2                     	__end_of_application_reset:
  1202 ;; =============== function _application_reset ends ============
  1203                           
  1204                           	signat	_application_reset,88
  1205                           	global	_next_segment
  1206                           psect	text371,local,class=CODE,delta=2
  1207                           global __ptext371
  1208  00E0                     __ptext371:
  1209                           
  1210 ;; *************** function _next_segment *****************
  1211 ;; Defined at:
  1212 ;;		line 201 in file "main.c"
  1213 ;; Parameters:    Size  Location     Type
  1214 ;;		None
  1215 ;; Auto vars:     Size  Location     Type
  1216 ;;		None
  1217 ;; Return value:  Size  Location     Type
  1218 ;;		None               void
  1219 ;; Registers used:
  1220 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1221 ;; Tracked objects:
  1222 ;;		On entry : 0/0
  1223 ;;		On exit  : 0/0
  1224 ;;		Unchanged: 0/0
  1225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1226 ;;      Params:         0       0       0       0
  1227 ;;      Locals:         0       0       0       0
  1228 ;;      Temps:          0       1       0       0
  1229 ;;      Totals:         0       1       0       0
  1230 ;;Total ram usage:        1 bytes
  1231 ;; Hardware stack levels used:    1
  1232 ;; Hardware stack levels required when called:    5
  1233 ;; This function calls:
  1234 ;;		_show_face
  1235 ;;		_shift_write
  1236 ;; This function is called by:
  1237 ;;		_main
  1238 ;; This function uses a non-reentrant model
  1239 ;;
  1240                           psect	text371
  1241                           	file	"main.c"
  1242                           	line	201
  1243                           	global	__size_of_next_segment
  1244  0053                     	__size_of_next_segment	equ	__end_of_next_segment-_next_segment
  1245                           	
  1246  00E0                     _next_segment:	
  1247                           	opt	stack 2
  1248                           ; Regs used in _next_segment: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1249                           	line	202
  1250                           	
  1251  00E0                     l2890:	
  1252                           ;main.c: 202: GIE = 0;
  1253  00E0  138B               	bcf	(95/8),(95)&7
  1254                           	line	210
  1255                           	
  1256  00E1                     l2892:	
  1257                           ;main.c: 210: if (seg > 128)
  1258  00E1  3081               	movlw	(081h)
  1259  00E2  1283               	bcf	status, 5	;RP0=0, select bank0
  1260  00E3  1303               	bcf	status, 6	;RP1=0, select bank0
  1261  00E4  023C               	subwf	(_seg),w
  1262  00E5  1C03               	skipc
  1263  00E6  28E8               	goto	u2911
  1264  00E7  28E9               	goto	u2910
  1265  00E8                     u2911:
  1266  00E8  28EB               	goto	l2896
  1267  00E9                     u2910:
  1268  00E9  2930               	goto	l2922
  1269                           	line	211
  1270                           	
  1271  00EA                     l2894:	
  1272                           ;main.c: 211: goto ns_end;
  1273  00EA  2930               	goto	l2922
  1274                           	
  1275  00EB                     l531:	
  1276                           	line	213
  1277                           	
  1278  00EB                     l2896:	
  1279                           ;main.c: 213: if (seg < 128)
  1280  00EB  3080               	movlw	(080h)
  1281  00EC  023C               	subwf	(_seg),w
  1282  00ED  1803               	skipnc
  1283  00EE  28F0               	goto	u2921
  1284  00EF  28F1               	goto	u2920
  1285  00F0                     u2921:
  1286  00F0  28F3               	goto	l2900
  1287  00F1                     u2920:
  1288                           	line	214
  1289                           	
  1290  00F1                     l2898:	
  1291                           ;main.c: 214: show_face();
  1292  00F1  220B               	fcall	_show_face
  1293  00F2  28F3               	goto	l2900
  1294                           	
  1295  00F3                     l533:	
  1296                           	line	216
  1297                           	
  1298  00F3                     l2900:	
  1299                           ;main.c: 216: if (seg == 0x80) {
  1300  00F3  1283               	bcf	status, 5	;RP0=0, select bank0
  1301  00F4  1303               	bcf	status, 6	;RP1=0, select bank0
  1302  00F5  083C               	movf	(_seg),w
  1303  00F6  3A80               	xorlw	080h
  1304  00F7  1D03               	skipz
  1305  00F8  28FA               	goto	u2931
  1306  00F9  28FB               	goto	u2930
  1307  00FA                     u2931:
  1308  00FA  28FE               	goto	l2904
  1309  00FB                     u2930:
  1310                           	line	217
  1311                           	
  1312  00FB                     l2902:	
  1313                           ;main.c: 217: shift_write(0x00);
  1314  00FB  3000               	movlw	(0)
  1315  00FC  2133               	fcall	_shift_write
  1316  00FD  28FE               	goto	l2904
  1317                           	line	218
  1318                           	
  1319  00FE                     l534:	
  1320                           	line	219
  1321                           	
  1322  00FE                     l2904:	
  1323                           ;main.c: 218: }
  1324                           ;main.c: 219: if (seg == 0x00)
  1325  00FE  1283               	bcf	status, 5	;RP0=0, select bank0
  1326  00FF  1303               	bcf	status, 6	;RP1=0, select bank0
  1327  0100  08BC               	movf	(_seg),f
  1328  0101  1D03               	skipz
  1329  0102  2904               	goto	u2941
  1330  0103  2905               	goto	u2940
  1331  0104                     u2941:
  1332  0104  2908               	goto	l2908
  1333  0105                     u2940:
  1334                           	line	220
  1335                           	
  1336  0105                     l2906:	
  1337                           ;main.c: 220: shift_write(0x10);
  1338  0105  3010               	movlw	(010h)
  1339  0106  2133               	fcall	_shift_write
  1340  0107  2908               	goto	l2908
  1341                           	
  1342  0108                     l535:	
  1343                           	line	221
  1344                           	
  1345  0108                     l2908:	
  1346                           ;main.c: 221: if (seg == 0x20)
  1347  0108  1283               	bcf	status, 5	;RP0=0, select bank0
  1348  0109  1303               	bcf	status, 6	;RP1=0, select bank0
  1349  010A  083C               	movf	(_seg),w
  1350  010B  3A20               	xorlw	020h
  1351  010C  1D03               	skipz
  1352  010D  290F               	goto	u2951
  1353  010E  2910               	goto	u2950
  1354  010F                     u2951:
  1355  010F  2913               	goto	l2912
  1356  0110                     u2950:
  1357                           	line	222
  1358                           	
  1359  0110                     l2910:	
  1360                           ;main.c: 222: shift_write(0x20);
  1361  0110  3020               	movlw	(020h)
  1362  0111  2133               	fcall	_shift_write
  1363  0112  2913               	goto	l2912
  1364                           	
  1365  0113                     l536:	
  1366                           	line	223
  1367                           	
  1368  0113                     l2912:	
  1369                           ;main.c: 223: if (seg == 0x40)
  1370  0113  1283               	bcf	status, 5	;RP0=0, select bank0
  1371  0114  1303               	bcf	status, 6	;RP1=0, select bank0
  1372  0115  083C               	movf	(_seg),w
  1373  0116  3A40               	xorlw	040h
  1374  0117  1D03               	skipz
  1375  0118  291A               	goto	u2961
  1376  0119  291B               	goto	u2960
  1377  011A                     u2961:
  1378  011A  291E               	goto	l2916
  1379  011B                     u2960:
  1380                           	line	224
  1381                           	
  1382  011B                     l2914:	
  1383                           ;main.c: 224: shift_write(0x40);
  1384  011B  3040               	movlw	(040h)
  1385  011C  2133               	fcall	_shift_write
  1386  011D  291E               	goto	l2916
  1387                           	
  1388  011E                     l537:	
  1389                           	line	225
  1390                           	
  1391  011E                     l2916:	
  1392                           ;main.c: 225: if (seg == 0x60)
  1393  011E  1283               	bcf	status, 5	;RP0=0, select bank0
  1394  011F  1303               	bcf	status, 6	;RP1=0, select bank0
  1395  0120  083C               	movf	(_seg),w
  1396  0121  3A60               	xorlw	060h
  1397  0122  1D03               	skipz
  1398  0123  2925               	goto	u2971
  1399  0124  2926               	goto	u2970
  1400  0125                     u2971:
  1401  0125  2929               	goto	l2920
  1402  0126                     u2970:
  1403                           	line	226
  1404                           	
  1405  0126                     l2918:	
  1406                           ;main.c: 226: shift_write(0x80);
  1407  0126  3080               	movlw	(080h)
  1408  0127  2133               	fcall	_shift_write
  1409  0128  2929               	goto	l2920
  1410                           	
  1411  0129                     l538:	
  1412                           	line	228
  1413                           	
  1414  0129                     l2920:	
  1415                           ;main.c: 228: seg++;
  1416  0129  3001               	movlw	(01h)
  1417  012A  1283               	bcf	status, 5	;RP0=0, select bank0
  1418  012B  1303               	bcf	status, 6	;RP1=0, select bank0
  1419  012C  00CE               	movwf	(??_next_segment+0)+0
  1420  012D  084E               	movf	(??_next_segment+0)+0,w
  1421  012E  07BC               	addwf	(_seg),f
  1422  012F  2930               	goto	l2922
  1423                           	line	230
  1424                           ;main.c: 230: ns_end:
  1425                           	
  1426  0130                     l532:	
  1427                           	line	231
  1428                           	
  1429  0130                     l2922:	
  1430                           ;main.c: 231: GIE = 1;
  1431  0130  178B               	bsf	(95/8),(95)&7
  1432  0131  2932               	goto	l539
  1433                           	line	232
  1434                           	
  1435  0132                     l2924:	
  1436                           	line	233
  1437                           ;main.c: 232: return;
  1438                           	
  1439  0132                     l539:	
  1440  0132  0008               	return
  1441                           	opt stack 0
  1442                           GLOBAL	__end_of_next_segment
  1443  0133                     	__end_of_next_segment:
  1444 ;; =============== function _next_segment ends ============
  1445                           
  1446                           	signat	_next_segment,88
  1447                           	global	_show_face
  1448                           psect	text372,local,class=CODE,delta=2
  1449                           global __ptext372
  1450  020B                     __ptext372:
  1451                           
  1452 ;; *************** function _show_face *****************
  1453 ;; Defined at:
  1454 ;;		line 186 in file "main.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;  i               1    3[BANK0 ] unsigned char 
  1459 ;; Return value:  Size  Location     Type
  1460 ;;		None               void
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1468 ;;      Params:         0       0       0       0
  1469 ;;      Locals:         0       1       0       0
  1470 ;;      Temps:          0       1       0       0
  1471 ;;      Totals:         0       2       0       0
  1472 ;;Total ram usage:        2 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    4
  1475 ;; This function calls:
  1476 ;;		_bit_on
  1477 ;;		_bit_off
  1478 ;; This function is called by:
  1479 ;;		_next_segment
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           psect	text372
  1483                           	file	"main.c"
  1484                           	line	186
  1485                           	global	__size_of_show_face
  1486  0037                     	__size_of_show_face	equ	__end_of_show_face-_show_face
  1487                           	
  1488  020B                     _show_face:	
  1489                           	opt	stack 2
  1490                           ; Regs used in _show_face: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1491                           	line	188
  1492                           	
  1493  020B                     l2868:	
  1494                           ;main.c: 187: uns8 i;
  1495                           ;main.c: 188: for (i=0; i<12; i++) {
  1496  020B  1283               	bcf	status, 5	;RP0=0, select bank0
  1497  020C  1303               	bcf	status, 6	;RP1=0, select bank0
  1498  020D  01CA               	clrf	(show_face@i)
  1499                           	
  1500  020E                     l2870:	
  1501  020E  300C               	movlw	(0Ch)
  1502  020F  024A               	subwf	(show_face@i),w
  1503  0210  1C03               	skipc
  1504  0211  2A13               	goto	u2871
  1505  0212  2A14               	goto	u2870
  1506  0213                     u2871:
  1507  0213  2A16               	goto	l2874
  1508  0214                     u2870:
  1509  0214  2A41               	goto	l527
  1510                           	
  1511  0215                     l2872:	
  1512  0215  2A41               	goto	l527
  1513                           	
  1514  0216                     l524:	
  1515                           	line	189
  1516                           	
  1517  0216                     l2874:	
  1518                           ;main.c: 189: if (hour_start[i] == seg) {
  1519  0216  084A               	movf	(show_face@i),w
  1520  0217  3E2C               	addlw	_hour_start&0ffh
  1521  0218  0084               	movwf	fsr0
  1522  0219  1383               	bcf	status, 7	;select IRP bank0
  1523  021A  0800               	movf	indf,w
  1524  021B  063C               	xorwf	(_seg),w
  1525  021C  1D03               	skipz
  1526  021D  2A1F               	goto	u2881
  1527  021E  2A20               	goto	u2880
  1528  021F                     u2881:
  1529  021F  2A24               	goto	l2880
  1530  0220                     u2880:
  1531                           	line	190
  1532                           	
  1533  0220                     l2876:	
  1534                           ;main.c: 190: bit_on(0x02);
  1535  0220  3002               	movlw	(02h)
  1536  0221  22FC               	fcall	_bit_on
  1537  0222  2A41               	goto	l527
  1538                           	line	191
  1539                           	
  1540  0223                     l2878:	
  1541                           ;main.c: 191: return;
  1542  0223  2A41               	goto	l527
  1543                           	line	192
  1544                           	
  1545  0224                     l526:	
  1546                           	line	193
  1547                           	
  1548  0224                     l2880:	
  1549                           ;main.c: 192: }
  1550                           ;main.c: 193: if (hour_end[i] == seg) {
  1551  0224  1283               	bcf	status, 5	;RP0=0, select bank0
  1552  0225  1303               	bcf	status, 6	;RP1=0, select bank0
  1553  0226  084A               	movf	(show_face@i),w
  1554  0227  3E20               	addlw	_hour_end&0ffh
  1555  0228  0084               	movwf	fsr0
  1556  0229  1383               	bcf	status, 7	;select IRP bank0
  1557  022A  0800               	movf	indf,w
  1558  022B  063C               	xorwf	(_seg),w
  1559  022C  1D03               	skipz
  1560  022D  2A2F               	goto	u2891
  1561  022E  2A30               	goto	u2890
  1562  022F                     u2891:
  1563  022F  2A34               	goto	l2886
  1564  0230                     u2890:
  1565                           	line	194
  1566                           	
  1567  0230                     l2882:	
  1568                           ;main.c: 194: bit_off(0x02);
  1569  0230  3002               	movlw	(02h)
  1570  0231  22F2               	fcall	_bit_off
  1571  0232  2A41               	goto	l527
  1572                           	line	195
  1573                           	
  1574  0233                     l2884:	
  1575                           ;main.c: 195: return;
  1576  0233  2A41               	goto	l527
  1577                           	line	196
  1578                           	
  1579  0234                     l528:	
  1580                           	line	188
  1581                           	
  1582  0234                     l2886:	
  1583  0234  3001               	movlw	(01h)
  1584  0235  1283               	bcf	status, 5	;RP0=0, select bank0
  1585  0236  1303               	bcf	status, 6	;RP1=0, select bank0
  1586  0237  00C9               	movwf	(??_show_face+0)+0
  1587  0238  0849               	movf	(??_show_face+0)+0,w
  1588  0239  07CA               	addwf	(show_face@i),f
  1589                           	
  1590  023A                     l2888:	
  1591  023A  300C               	movlw	(0Ch)
  1592  023B  024A               	subwf	(show_face@i),w
  1593  023C  1C03               	skipc
  1594  023D  2A3F               	goto	u2901
  1595  023E  2A40               	goto	u2900
  1596  023F                     u2901:
  1597  023F  2A16               	goto	l2874
  1598  0240                     u2900:
  1599  0240  2A41               	goto	l527
  1600                           	
  1601  0241                     l525:	
  1602                           	line	198
  1603                           	
  1604  0241                     l527:	
  1605  0241  0008               	return
  1606                           	opt stack 0
  1607                           GLOBAL	__end_of_show_face
  1608  0242                     	__end_of_show_face:
  1609 ;; =============== function _show_face ends ============
  1610                           
  1611                           	signat	_show_face,88
  1612                           	global	_hour_start_end_init
  1613                           psect	text373,local,class=CODE,delta=2
  1614                           global __ptext373
  1615  0181                     __ptext373:
  1616                           
  1617 ;; *************** function _hour_start_end_init *****************
  1618 ;; Defined at:
  1619 ;;		line 175 in file "main.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;		None
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  min             1    6[BANK0 ] unsigned char 
  1624 ;;  i               1    7[BANK0 ] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;		None               void
  1627 ;; Registers used:
  1628 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1634 ;;      Params:         0       0       0       0
  1635 ;;      Locals:         0       2       0       0
  1636 ;;      Temps:          0       2       0       0
  1637 ;;      Totals:         0       4       0       0
  1638 ;;Total ram usage:        4 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    4
  1641 ;; This function calls:
  1642 ;;		___bmul
  1643 ;;		_sixty_start
  1644 ;;		_sixty_stop
  1645 ;; This function is called by:
  1646 ;;		_init
  1647 ;; This function uses a non-reentrant model
  1648 ;;
  1649                           psect	text373
  1650                           	file	"main.c"
  1651                           	line	175
  1652                           	global	__size_of_hour_start_end_init
  1653  0047                     	__size_of_hour_start_end_init	equ	__end_of_hour_start_end_init-_hour_start_end_init
  1654                           	
  1655  0181                     _hour_start_end_init:	
  1656                           	opt	stack 2
  1657                           ; Regs used in _hour_start_end_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1658                           	line	177
  1659                           	
  1660  0181                     l2850:	
  1661                           ;main.c: 176: uns8 i;
  1662                           ;main.c: 177: for (i=0; i<12; i++) {
  1663  0181  1283               	bcf	status, 5	;RP0=0, select bank0
  1664  0182  1303               	bcf	status, 6	;RP1=0, select bank0
  1665  0183  01CE               	clrf	(hour_start_end_init@i)
  1666                           	
  1667  0184                     l2852:	
  1668  0184  300C               	movlw	(0Ch)
  1669  0185  024E               	subwf	(hour_start_end_init@i),w
  1670  0186  1C03               	skipc
  1671  0187  2989               	goto	u2841
  1672  0188  298A               	goto	u2840
  1673  0189                     u2841:
  1674  0189  298C               	goto	l2856
  1675  018A                     u2840:
  1676  018A  29C7               	goto	l521
  1677                           	
  1678  018B                     l2854:	
  1679  018B  29C7               	goto	l521
  1680                           	
  1681  018C                     l519:	
  1682                           	line	179
  1683                           	
  1684  018C                     l2856:	
  1685                           ;main.c: 178: uns8 min;
  1686                           ;main.c: 179: min = i << 2 + i;
  1687  018C  084E               	movf	(hour_start_end_init@i),w
  1688  018D  00CB               	movwf	(??_hour_start_end_init+0)+0
  1689  018E  084E               	movf	(hour_start_end_init@i),w
  1690  018F  3E02               	addlw	02h
  1691  0190  3E01               	addlw	1
  1692  0191  2994               	goto	u2854
  1693  0192                     u2855:
  1694  0192  1003               	clrc
  1695  0193  0DCB               	rlf	(??_hour_start_end_init+0)+0,f
  1696  0194                     u2854:
  1697  0194  3EFF               	addlw	-1
  1698  0195  1D03               	skipz
  1699  0196  2992               	goto	u2855
  1700  0197  084B               	movf	0+(??_hour_start_end_init+0)+0,w
  1701  0198  00CC               	movwf	(??_hour_start_end_init+1)+0
  1702  0199  084C               	movf	(??_hour_start_end_init+1)+0,w
  1703  019A  00CD               	movwf	(hour_start_end_init@min)
  1704                           	line	180
  1705                           	
  1706  019B                     l2858:	
  1707                           ;main.c: 180: min = i*5;
  1708  019B  3005               	movlw	(05h)
  1709  019C  00CB               	movwf	(??_hour_start_end_init+0)+0
  1710  019D  084B               	movf	(??_hour_start_end_init+0)+0,w
  1711  019E  00C7               	movwf	(?___bmul)
  1712  019F  084E               	movf	(hour_start_end_init@i),w
  1713  01A0  22C8               	fcall	___bmul
  1714  01A1  1283               	bcf	status, 5	;RP0=0, select bank0
  1715  01A2  1303               	bcf	status, 6	;RP1=0, select bank0
  1716  01A3  00CC               	movwf	(??_hour_start_end_init+1)+0
  1717  01A4  084C               	movf	(??_hour_start_end_init+1)+0,w
  1718  01A5  00CD               	movwf	(hour_start_end_init@min)
  1719                           	line	181
  1720                           	
  1721  01A6                     l2860:	
  1722                           ;main.c: 181: hour_start[i] = sixty_start(min);
  1723  01A6  084D               	movf	(hour_start_end_init@min),w
  1724  01A7  2242               	fcall	_sixty_start
  1725  01A8  1283               	bcf	status, 5	;RP0=0, select bank0
  1726  01A9  1303               	bcf	status, 6	;RP1=0, select bank0
  1727  01AA  00CB               	movwf	(??_hour_start_end_init+0)+0
  1728  01AB  084E               	movf	(hour_start_end_init@i),w
  1729  01AC  3E2C               	addlw	_hour_start&0ffh
  1730  01AD  0084               	movwf	fsr0
  1731  01AE  084B               	movf	(??_hour_start_end_init+0)+0,w
  1732  01AF  1383               	bcf	status, 7	;select IRP bank0
  1733  01B0  0080               	movwf	indf
  1734                           	line	182
  1735                           	
  1736  01B1                     l2862:	
  1737                           ;main.c: 182: hour_end[i] = sixty_stop(min);
  1738  01B1  084D               	movf	(hour_start_end_init@min),w
  1739  01B2  2275               	fcall	_sixty_stop
  1740  01B3  1283               	bcf	status, 5	;RP0=0, select bank0
  1741  01B4  1303               	bcf	status, 6	;RP1=0, select bank0
  1742  01B5  00CB               	movwf	(??_hour_start_end_init+0)+0
  1743  01B6  084E               	movf	(hour_start_end_init@i),w
  1744  01B7  3E20               	addlw	_hour_end&0ffh
  1745  01B8  0084               	movwf	fsr0
  1746  01B9  084B               	movf	(??_hour_start_end_init+0)+0,w
  1747  01BA  1383               	bcf	status, 7	;select IRP bank0
  1748  01BB  0080               	movwf	indf
  1749                           	line	177
  1750                           	
  1751  01BC                     l2864:	
  1752  01BC  3001               	movlw	(01h)
  1753  01BD  00CB               	movwf	(??_hour_start_end_init+0)+0
  1754  01BE  084B               	movf	(??_hour_start_end_init+0)+0,w
  1755  01BF  07CE               	addwf	(hour_start_end_init@i),f
  1756                           	
  1757  01C0                     l2866:	
  1758  01C0  300C               	movlw	(0Ch)
  1759  01C1  024E               	subwf	(hour_start_end_init@i),w
  1760  01C2  1C03               	skipc
  1761  01C3  29C5               	goto	u2861
  1762  01C4  29C6               	goto	u2860
  1763  01C5                     u2861:
  1764  01C5  298C               	goto	l2856
  1765  01C6                     u2860:
  1766  01C6  29C7               	goto	l521
  1767                           	
  1768  01C7                     l520:	
  1769                           	line	184
  1770                           	
  1771  01C7                     l521:	
  1772  01C7  0008               	return
  1773                           	opt stack 0
  1774                           GLOBAL	__end_of_hour_start_end_init
  1775  01C8                     	__end_of_hour_start_end_init:
  1776 ;; =============== function _hour_start_end_init ends ============
  1777                           
  1778                           	signat	_hour_start_end_init,88
  1779                           	global	_shift_write
  1780                           psect	text374,local,class=CODE,delta=2
  1781                           global __ptext374
  1782  0133                     __ptext374:
  1783                           
  1784 ;; *************** function _shift_write *****************
  1785 ;; Defined at:
  1786 ;;		line 67 in file "main.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  data            1    wreg     unsigned char 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  data            1    6[BANK0 ] unsigned char 
  1791 ;;  i               2    4[BANK0 ] int 
  1792 ;; Return value:  Size  Location     Type
  1793 ;;		None               void
  1794 ;; Registers used:
  1795 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1796 ;; Tracked objects:
  1797 ;;		On entry : 0/0
  1798 ;;		On exit  : 0/0
  1799 ;;		Unchanged: 0/0
  1800 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1801 ;;      Params:         0       0       0       0
  1802 ;;      Locals:         0       3       0       0
  1803 ;;      Temps:          0       2       0       0
  1804 ;;      Totals:         0       5       0       0
  1805 ;;Total ram usage:        5 bytes
  1806 ;; Hardware stack levels used:    1
  1807 ;; Hardware stack levels required when called:    4
  1808 ;; This function calls:
  1809 ;;		_bit_off
  1810 ;;		_bit_on
  1811 ;; This function is called by:
  1812 ;;		_next_segment
  1813 ;;		_application_reset
  1814 ;;		_init
  1815 ;; This function uses a non-reentrant model
  1816 ;;
  1817                           psect	text374
  1818                           	file	"main.c"
  1819                           	line	67
  1820                           	global	__size_of_shift_write
  1821  004E                     	__size_of_shift_write	equ	__end_of_shift_write-_shift_write
  1822                           	
  1823  0133                     _shift_write:	
  1824                           	opt	stack 2
  1825                           ; Regs used in _shift_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1826                           ;shift_write@data stored from wreg
  1827                           	line	73
  1828  0133  1283               	bcf	status, 5	;RP0=0, select bank0
  1829  0134  1303               	bcf	status, 6	;RP1=0, select bank0
  1830  0135  00CD               	movwf	(shift_write@data)
  1831                           	
  1832  0136                     l2826:	
  1833                           ;main.c: 71: int i;
  1834                           ;main.c: 73: bit_off(0x08);
  1835  0136  3008               	movlw	(08h)
  1836  0137  22F2               	fcall	_bit_off
  1837                           	line	74
  1838                           ;main.c: 74: bit_off(0x10);
  1839  0138  3010               	movlw	(010h)
  1840  0139  22F2               	fcall	_bit_off
  1841                           	line	75
  1842                           	
  1843  013A                     l2828:	
  1844                           ;main.c: 75: for (i=0; i<8; i++) {
  1845  013A  1283               	bcf	status, 5	;RP0=0, select bank0
  1846  013B  1303               	bcf	status, 6	;RP1=0, select bank0
  1847  013C  01CB               	clrf	(shift_write@i)
  1848  013D  01CC               	clrf	(shift_write@i+1)
  1849                           	
  1850  013E                     l2830:	
  1851  013E  084C               	movf	(shift_write@i+1),w
  1852  013F  3A80               	xorlw	80h
  1853  0140  00FF               	movwf	btemp+1
  1854  0141  3080               	movlw	(high(08h))^80h
  1855  0142  027F               	subwf	btemp+1,w
  1856  0143  1D03               	skipz
  1857  0144  2947               	goto	u2815
  1858  0145  3008               	movlw	low(08h)
  1859  0146  024B               	subwf	(shift_write@i),w
  1860  0147                     u2815:
  1861                           
  1862  0147  1C03               	skipc
  1863  0148  294A               	goto	u2811
  1864  0149  294B               	goto	u2810
  1865  014A                     u2811:
  1866  014A  294D               	goto	l487
  1867  014B                     u2810:
  1868  014B  297B               	goto	l2846
  1869                           	
  1870  014C                     l2832:	
  1871  014C  297B               	goto	l2846
  1872                           	
  1873  014D                     l487:	
  1874                           	line	76
  1875                           ;main.c: 76: if ((data & 0x01) != 0) {
  1876  014D  1283               	bcf	status, 5	;RP0=0, select bank0
  1877  014E  1303               	bcf	status, 6	;RP1=0, select bank0
  1878  014F  1C4D               	btfss	(shift_write@data),(0)&7
  1879  0150  2952               	goto	u2821
  1880  0151  2953               	goto	u2820
  1881  0152                     u2821:
  1882  0152  2956               	goto	l2836
  1883  0153                     u2820:
  1884                           	line	77
  1885                           	
  1886  0153                     l2834:	
  1887                           ;main.c: 77: bit_on(0x04);
  1888  0153  3004               	movlw	(04h)
  1889  0154  22FC               	fcall	_bit_on
  1890                           	line	78
  1891                           ;main.c: 78: } else {
  1892  0155  2958               	goto	l490
  1893                           	
  1894  0156                     l489:	
  1895                           	line	79
  1896                           	
  1897  0156                     l2836:	
  1898                           ;main.c: 79: bit_off(0x04);
  1899  0156  3004               	movlw	(04h)
  1900  0157  22F2               	fcall	_bit_off
  1901                           	line	80
  1902                           	
  1903  0158                     l490:	
  1904                           	line	82
  1905                           ;main.c: 80: }
  1906                           ;main.c: 82: bit_on(0x10);
  1907  0158  3010               	movlw	(010h)
  1908  0159  22FC               	fcall	_bit_on
  1909                           	line	84
  1910                           	
  1911  015A                     l2838:	
  1912                           ;main.c: 84: data = data >> 1;
  1913  015A  1283               	bcf	status, 5	;RP0=0, select bank0
  1914  015B  1303               	bcf	status, 6	;RP1=0, select bank0
  1915  015C  084D               	movf	(shift_write@data),w
  1916  015D  00C9               	movwf	(??_shift_write+0)+0
  1917  015E  1003               	clrc
  1918  015F  0C49               	rrf	(??_shift_write+0)+0,w
  1919  0160  00CA               	movwf	(??_shift_write+1)+0
  1920  0161  084A               	movf	(??_shift_write+1)+0,w
  1921  0162  00CD               	movwf	(shift_write@data)
  1922                           	line	85
  1923                           	
  1924  0163                     l2840:	
  1925                           ;main.c: 85: bit_off(0x10);
  1926  0163  3010               	movlw	(010h)
  1927  0164  22F2               	fcall	_bit_off
  1928                           	line	75
  1929                           	
  1930  0165                     l2842:	
  1931  0165  3001               	movlw	low(01h)
  1932  0166  1283               	bcf	status, 5	;RP0=0, select bank0
  1933  0167  1303               	bcf	status, 6	;RP1=0, select bank0
  1934  0168  07CB               	addwf	(shift_write@i),f
  1935  0169  1803               	skipnc
  1936  016A  0ACC               	incf	(shift_write@i+1),f
  1937  016B  3000               	movlw	high(01h)
  1938  016C  07CC               	addwf	(shift_write@i+1),f
  1939                           	
  1940  016D                     l2844:	
  1941  016D  084C               	movf	(shift_write@i+1),w
  1942  016E  3A80               	xorlw	80h
  1943  016F  00FF               	movwf	btemp+1
  1944  0170  3080               	movlw	(high(08h))^80h
  1945  0171  027F               	subwf	btemp+1,w
  1946  0172  1D03               	skipz
  1947  0173  2976               	goto	u2835
  1948  0174  3008               	movlw	low(08h)
  1949  0175  024B               	subwf	(shift_write@i),w
  1950  0176                     u2835:
  1951                           
  1952  0176  1C03               	skipc
  1953  0177  2979               	goto	u2831
  1954  0178  297A               	goto	u2830
  1955  0179                     u2831:
  1956  0179  294D               	goto	l487
  1957  017A                     u2830:
  1958  017A  297B               	goto	l2846
  1959                           	
  1960  017B                     l488:	
  1961                           	line	88
  1962                           	
  1963  017B                     l2846:	
  1964                           ;main.c: 87: }
  1965                           ;main.c: 88: bit_on(0x08);
  1966  017B  3008               	movlw	(08h)
  1967  017C  22FC               	fcall	_bit_on
  1968                           	line	89
  1969                           	
  1970  017D                     l2848:	
  1971                           # 89 "main.c"
  1972  017D  0000               nop ;#
  1973                           psect	text374
  1974                           	line	90
  1975                           ;main.c: 90: bit_off(0x08);
  1976  017E  3008               	movlw	(08h)
  1977  017F  22F2               	fcall	_bit_off
  1978                           	line	92
  1979                           	
  1980  0180                     l491:	
  1981  0180  0008               	return
  1982                           	opt stack 0
  1983                           GLOBAL	__end_of_shift_write
  1984  0181                     	__end_of_shift_write:
  1985 ;; =============== function _shift_write ends ============
  1986                           
  1987                           	signat	_shift_write,4216
  1988                           	global	___bmul
  1989                           psect	text375,local,class=CODE,delta=2
  1990                           global __ptext375
  1991  02C8                     __ptext375:
  1992                           
  1993 ;; *************** function ___bmul *****************
  1994 ;; Defined at:
  1995 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  1996 ;; Parameters:    Size  Location     Type
  1997 ;;  multiplier      1    wreg     unsigned char 
  1998 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1999 ;; Auto vars:     Size  Location     Type
  2000 ;;  multiplier      1    3[BANK0 ] unsigned char 
  2001 ;;  product         1    2[BANK0 ] unsigned char 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;                  1    wreg      unsigned char 
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2011 ;;      Params:         0       1       0       0
  2012 ;;      Locals:         0       2       0       0
  2013 ;;      Temps:          0       1       0       0
  2014 ;;      Totals:         0       4       0       0
  2015 ;;Total ram usage:        4 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    3
  2018 ;; This function calls:
  2019 ;;		Nothing
  2020 ;; This function is called by:
  2021 ;;		_hour_start_end_init
  2022 ;; This function uses a non-reentrant model
  2023 ;;
  2024                           psect	text375
  2025                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  2026                           	line	3
  2027                           	global	__size_of___bmul
  2028  001A                     	__size_of___bmul	equ	__end_of___bmul-___bmul
  2029                           	
  2030  02C8                     ___bmul:	
  2031                           	opt	stack 2
  2032                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2033                           ;___bmul@multiplier stored from wreg
  2034  02C8  1283               	bcf	status, 5	;RP0=0, select bank0
  2035  02C9  1303               	bcf	status, 6	;RP1=0, select bank0
  2036  02CA  00CA               	movwf	(___bmul@multiplier)
  2037                           	line	4
  2038                           	
  2039  02CB                     l2804:	
  2040  02CB  01C9               	clrf	(___bmul@product)
  2041                           	line	6
  2042                           	
  2043  02CC                     l1042:	
  2044                           	line	7
  2045  02CC  1C4A               	btfss	(___bmul@multiplier),(0)&7
  2046  02CD  2ACF               	goto	u2791
  2047  02CE  2AD0               	goto	u2790
  2048  02CF                     u2791:
  2049  02CF  2AD5               	goto	l2808
  2050  02D0                     u2790:
  2051                           	line	8
  2052                           	
  2053  02D0                     l2806:	
  2054  02D0  0847               	movf	(___bmul@multiplicand),w
  2055  02D1  00C8               	movwf	(??___bmul+0)+0
  2056  02D2  0848               	movf	(??___bmul+0)+0,w
  2057  02D3  07C9               	addwf	(___bmul@product),f
  2058  02D4  2AD5               	goto	l2808
  2059                           	
  2060  02D5                     l1043:	
  2061                           	line	9
  2062                           	
  2063  02D5                     l2808:	
  2064  02D5  1003               	clrc
  2065  02D6  0DC7               	rlf	(___bmul@multiplicand),f
  2066                           
  2067                           	line	10
  2068                           	
  2069  02D7                     l2810:	
  2070  02D7  1003               	clrc
  2071  02D8  0CCA               	rrf	(___bmul@multiplier),f
  2072                           
  2073                           	line	11
  2074                           	
  2075  02D9                     l2812:	
  2076  02D9  08CA               	movf	(___bmul@multiplier),f
  2077  02DA  1D03               	skipz
  2078  02DB  2ADD               	goto	u2801
  2079  02DC  2ADE               	goto	u2800
  2080  02DD                     u2801:
  2081  02DD  2ACC               	goto	l1042
  2082  02DE                     u2800:
  2083  02DE  2ADF               	goto	l2814
  2084                           	
  2085  02DF                     l1044:	
  2086                           	line	12
  2087                           	
  2088  02DF                     l2814:	
  2089  02DF  0849               	movf	(___bmul@product),w
  2090  02E0  2AE1               	goto	l1045
  2091                           	
  2092  02E1                     l2816:	
  2093                           	line	13
  2094                           	
  2095  02E1                     l1045:	
  2096  02E1  0008               	return
  2097                           	opt stack 0
  2098                           GLOBAL	__end_of___bmul
  2099  02E2                     	__end_of___bmul:
  2100 ;; =============== function ___bmul ends ============
  2101                           
  2102                           	signat	___bmul,8313
  2103                           	global	_sixty_stop
  2104                           psect	text376,local,class=CODE,delta=2
  2105                           global __ptext376
  2106  0275                     __ptext376:
  2107                           
  2108 ;; *************** function _sixty_stop *****************
  2109 ;; Defined at:
  2110 ;;		line 148 in file "main.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  x               1    wreg     unsigned char 
  2113 ;; Auto vars:     Size  Location     Type
  2114 ;;  x               1    2[BANK0 ] unsigned char 
  2115 ;; Return value:  Size  Location     Type
  2116 ;;                  1    wreg      unsigned char 
  2117 ;; Registers used:
  2118 ;;		wreg, status,2, status,0
  2119 ;; Tracked objects:
  2120 ;;		On entry : 0/0
  2121 ;;		On exit  : 0/0
  2122 ;;		Unchanged: 0/0
  2123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2124 ;;      Params:         0       0       0       0
  2125 ;;      Locals:         0       1       0       0
  2126 ;;      Temps:          0       2       0       0
  2127 ;;      Totals:         0       3       0       0
  2128 ;;Total ram usage:        3 bytes
  2129 ;; Hardware stack levels used:    1
  2130 ;; Hardware stack levels required when called:    3
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_hour_start_end_init
  2135 ;;		_init
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           psect	text376
  2139                           	file	"main.c"
  2140                           	line	148
  2141                           	global	__size_of_sixty_stop
  2142  002B                     	__size_of_sixty_stop	equ	__end_of_sixty_stop-_sixty_stop
  2143                           	
  2144  0275                     _sixty_stop:	
  2145                           	opt	stack 3
  2146                           ; Regs used in _sixty_stop: [wreg+status,2+status,0]
  2147                           ;sixty_stop@x stored from wreg
  2148  0275  1283               	bcf	status, 5	;RP0=0, select bank0
  2149  0276  1303               	bcf	status, 6	;RP1=0, select bank0
  2150  0277  00C9               	movwf	(sixty_stop@x)
  2151                           	line	149
  2152                           	
  2153  0278                     l2724:	
  2154                           ;main.c: 149: x = x << 1;
  2155  0278  0849               	movf	(sixty_stop@x),w
  2156  0279  00C7               	movwf	(??_sixty_stop+0)+0
  2157  027A  0747               	addwf	(??_sixty_stop+0)+0,w
  2158  027B  00C8               	movwf	(??_sixty_stop+1)+0
  2159  027C  0848               	movf	(??_sixty_stop+1)+0,w
  2160  027D  00C9               	movwf	(sixty_stop@x)
  2161                           	line	150
  2162                           	
  2163  027E                     l2726:	
  2164                           ;main.c: 150: if (x < 30)
  2165  027E  301E               	movlw	(01Eh)
  2166  027F  0249               	subwf	(sixty_stop@x),w
  2167  0280  1803               	skipnc
  2168  0281  2A83               	goto	u2661
  2169  0282  2A84               	goto	u2660
  2170  0283                     u2661:
  2171  0283  2A88               	goto	l2732
  2172  0284                     u2660:
  2173                           	line	151
  2174                           	
  2175  0284                     l2728:	
  2176                           ;main.c: 151: return x+2;
  2177  0284  0849               	movf	(sixty_stop@x),w
  2178  0285  3E02               	addlw	02h
  2179  0286  2A9F               	goto	l514
  2180                           	
  2181  0287                     l2730:	
  2182  0287  2A9F               	goto	l514
  2183                           	
  2184  0288                     l513:	
  2185                           	line	152
  2186                           	
  2187  0288                     l2732:	
  2188                           ;main.c: 152: if (x < 60)
  2189  0288  303C               	movlw	(03Ch)
  2190  0289  0249               	subwf	(sixty_stop@x),w
  2191  028A  1803               	skipnc
  2192  028B  2A8D               	goto	u2671
  2193  028C  2A8E               	goto	u2670
  2194  028D                     u2671:
  2195  028D  2A92               	goto	l2738
  2196  028E                     u2670:
  2197                           	line	153
  2198                           	
  2199  028E                     l2734:	
  2200                           ;main.c: 153: return x+4;
  2201  028E  0849               	movf	(sixty_stop@x),w
  2202  028F  3E04               	addlw	04h
  2203  0290  2A9F               	goto	l514
  2204                           	
  2205  0291                     l2736:	
  2206  0291  2A9F               	goto	l514
  2207                           	
  2208  0292                     l515:	
  2209                           	line	154
  2210                           	
  2211  0292                     l2738:	
  2212                           ;main.c: 154: if (x < 90)
  2213  0292  305A               	movlw	(05Ah)
  2214  0293  0249               	subwf	(sixty_stop@x),w
  2215  0294  1803               	skipnc
  2216  0295  2A97               	goto	u2681
  2217  0296  2A98               	goto	u2680
  2218  0297                     u2681:
  2219  0297  2A9C               	goto	l2744
  2220  0298                     u2680:
  2221                           	line	155
  2222                           	
  2223  0298                     l2740:	
  2224                           ;main.c: 155: return x+6;
  2225  0298  0849               	movf	(sixty_stop@x),w
  2226  0299  3E06               	addlw	06h
  2227  029A  2A9F               	goto	l514
  2228                           	
  2229  029B                     l2742:	
  2230  029B  2A9F               	goto	l514
  2231                           	
  2232  029C                     l516:	
  2233                           	line	157
  2234                           	
  2235  029C                     l2744:	
  2236                           ;main.c: 157: return x+8;
  2237  029C  0849               	movf	(sixty_stop@x),w
  2238  029D  3E08               	addlw	08h
  2239  029E  2A9F               	goto	l514
  2240                           	
  2241  029F                     l2746:	
  2242                           	line	158
  2243                           	
  2244  029F                     l514:	
  2245  029F  0008               	return
  2246                           	opt stack 0
  2247                           GLOBAL	__end_of_sixty_stop
  2248  02A0                     	__end_of_sixty_stop:
  2249 ;; =============== function _sixty_stop ends ============
  2250                           
  2251                           	signat	_sixty_stop,4217
  2252                           	global	_sixty_start
  2253                           psect	text377,local,class=CODE,delta=2
  2254                           global __ptext377
  2255  0242                     __ptext377:
  2256                           
  2257 ;; *************** function _sixty_start *****************
  2258 ;; Defined at:
  2259 ;;		line 127 in file "main.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  x               1    wreg     unsigned char 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  x               1    2[BANK0 ] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      unsigned char 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2273 ;;      Params:         0       0       0       0
  2274 ;;      Locals:         0       1       0       0
  2275 ;;      Temps:          0       2       0       0
  2276 ;;      Totals:         0       3       0       0
  2277 ;;Total ram usage:        3 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    3
  2280 ;; This function calls:
  2281 ;;		Nothing
  2282 ;; This function is called by:
  2283 ;;		_hour_start_end_init
  2284 ;;		_init
  2285 ;; This function uses a non-reentrant model
  2286 ;;
  2287                           psect	text377
  2288                           	file	"main.c"
  2289                           	line	127
  2290                           	global	__size_of_sixty_start
  2291  0033                     	__size_of_sixty_start	equ	__end_of_sixty_start-_sixty_start
  2292                           	
  2293  0242                     _sixty_start:	
  2294                           	opt	stack 3
  2295                           ; Regs used in _sixty_start: [wreg+status,2+status,0]
  2296                           ;sixty_start@x stored from wreg
  2297                           	line	129
  2298  0242  1283               	bcf	status, 5	;RP0=0, select bank0
  2299  0243  1303               	bcf	status, 6	;RP1=0, select bank0
  2300  0244  00C9               	movwf	(sixty_start@x)
  2301                           	
  2302  0245                     l2694:	
  2303                           ;main.c: 129: x = x << 1;
  2304  0245  0849               	movf	(sixty_start@x),w
  2305  0246  00C7               	movwf	(??_sixty_start+0)+0
  2306  0247  0747               	addwf	(??_sixty_start+0)+0,w
  2307  0248  00C8               	movwf	(??_sixty_start+1)+0
  2308  0249  0848               	movf	(??_sixty_start+1)+0,w
  2309  024A  00C9               	movwf	(sixty_start@x)
  2310                           	line	130
  2311                           	
  2312  024B                     l2696:	
  2313                           ;main.c: 130: if (x == 0)
  2314  024B  08C9               	movf	(sixty_start@x),f
  2315  024C  1D03               	skipz
  2316  024D  2A4F               	goto	u2621
  2317  024E  2A50               	goto	u2620
  2318  024F                     u2621:
  2319  024F  2A53               	goto	l2702
  2320  0250                     u2620:
  2321                           	line	131
  2322                           	
  2323  0250                     l2698:	
  2324                           ;main.c: 131: return 127;
  2325  0250  307F               	movlw	(07Fh)
  2326  0251  2A74               	goto	l507
  2327                           	
  2328  0252                     l2700:	
  2329  0252  2A74               	goto	l507
  2330                           	
  2331  0253                     l506:	
  2332                           	line	132
  2333                           	
  2334  0253                     l2702:	
  2335                           ;main.c: 132: if (x <= 30)
  2336  0253  301F               	movlw	(01Fh)
  2337  0254  0249               	subwf	(sixty_start@x),w
  2338  0255  1803               	skipnc
  2339  0256  2A58               	goto	u2631
  2340  0257  2A59               	goto	u2630
  2341  0258                     u2631:
  2342  0258  2A5D               	goto	l2708
  2343  0259                     u2630:
  2344                           	line	133
  2345                           	
  2346  0259                     l2704:	
  2347                           ;main.c: 133: return x+1;
  2348  0259  0849               	movf	(sixty_start@x),w
  2349  025A  3E01               	addlw	01h
  2350  025B  2A74               	goto	l507
  2351                           	
  2352  025C                     l2706:	
  2353  025C  2A74               	goto	l507
  2354                           	
  2355  025D                     l508:	
  2356                           	line	134
  2357                           	
  2358  025D                     l2708:	
  2359                           ;main.c: 134: if (x <= 60)
  2360  025D  303D               	movlw	(03Dh)
  2361  025E  0249               	subwf	(sixty_start@x),w
  2362  025F  1803               	skipnc
  2363  0260  2A62               	goto	u2641
  2364  0261  2A63               	goto	u2640
  2365  0262                     u2641:
  2366  0262  2A67               	goto	l2714
  2367  0263                     u2640:
  2368                           	line	135
  2369                           	
  2370  0263                     l2710:	
  2371                           ;main.c: 135: return x+3;
  2372  0263  0849               	movf	(sixty_start@x),w
  2373  0264  3E03               	addlw	03h
  2374  0265  2A74               	goto	l507
  2375                           	
  2376  0266                     l2712:	
  2377  0266  2A74               	goto	l507
  2378                           	
  2379  0267                     l509:	
  2380                           	line	136
  2381                           	
  2382  0267                     l2714:	
  2383                           ;main.c: 136: if (x <= 90)
  2384  0267  305B               	movlw	(05Bh)
  2385  0268  0249               	subwf	(sixty_start@x),w
  2386  0269  1803               	skipnc
  2387  026A  2A6C               	goto	u2651
  2388  026B  2A6D               	goto	u2650
  2389  026C                     u2651:
  2390  026C  2A71               	goto	l2720
  2391  026D                     u2650:
  2392                           	line	137
  2393                           	
  2394  026D                     l2716:	
  2395                           ;main.c: 137: return x+5;
  2396  026D  0849               	movf	(sixty_start@x),w
  2397  026E  3E05               	addlw	05h
  2398  026F  2A74               	goto	l507
  2399                           	
  2400  0270                     l2718:	
  2401  0270  2A74               	goto	l507
  2402                           	
  2403  0271                     l510:	
  2404                           	line	139
  2405                           	
  2406  0271                     l2720:	
  2407                           ;main.c: 139: return x + 7;
  2408  0271  0849               	movf	(sixty_start@x),w
  2409  0272  3E07               	addlw	07h
  2410  0273  2A74               	goto	l507
  2411                           	
  2412  0274                     l2722:	
  2413                           	line	140
  2414                           	
  2415  0274                     l507:	
  2416  0274  0008               	return
  2417                           	opt stack 0
  2418                           GLOBAL	__end_of_sixty_start
  2419  0275                     	__end_of_sixty_start:
  2420 ;; =============== function _sixty_start ends ============
  2421                           
  2422                           	signat	_sixty_start,4217
  2423                           	global	_bit_off
  2424                           psect	text378,local,class=CODE,delta=2
  2425                           global __ptext378
  2426  02F2                     __ptext378:
  2427                           
  2428 ;; *************** function _bit_off *****************
  2429 ;; Defined at:
  2430 ;;		line 34 in file "main.c"
  2431 ;; Parameters:    Size  Location     Type
  2432 ;;  bt              1    wreg     unsigned char 
  2433 ;; Auto vars:     Size  Location     Type
  2434 ;;  bt              1    1[BANK0 ] unsigned char 
  2435 ;; Return value:  Size  Location     Type
  2436 ;;		None               void
  2437 ;; Registers used:
  2438 ;;		wreg, status,2, status,0
  2439 ;; Tracked objects:
  2440 ;;		On entry : 0/0
  2441 ;;		On exit  : 0/0
  2442 ;;		Unchanged: 0/0
  2443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2444 ;;      Params:         0       0       0       0
  2445 ;;      Locals:         0       1       0       0
  2446 ;;      Temps:          0       1       0       0
  2447 ;;      Totals:         0       2       0       0
  2448 ;;Total ram usage:        2 bytes
  2449 ;; Hardware stack levels used:    1
  2450 ;; Hardware stack levels required when called:    3
  2451 ;; This function calls:
  2452 ;;		Nothing
  2453 ;; This function is called by:
  2454 ;;		_shift_write
  2455 ;;		_show_face
  2456 ;; This function uses a non-reentrant model
  2457 ;;
  2458                           psect	text378
  2459                           	file	"main.c"
  2460                           	line	34
  2461                           	global	__size_of_bit_off
  2462  000A                     	__size_of_bit_off	equ	__end_of_bit_off-_bit_off
  2463                           	
  2464  02F2                     _bit_off:	
  2465                           	opt	stack 2
  2466                           ; Regs used in _bit_off: [wreg+status,2+status,0]
  2467                           ;bit_off@bt stored from wreg
  2468  02F2  1283               	bcf	status, 5	;RP0=0, select bank0
  2469  02F3  1303               	bcf	status, 6	;RP1=0, select bank0
  2470  02F4  00C8               	movwf	(bit_off@bt)
  2471                           	line	35
  2472                           	
  2473  02F5                     l2690:	
  2474                           ;main.c: 35: a_latch &= ~bt;
  2475  02F5  0948               	comf	(bit_off@bt),w
  2476  02F6  00C7               	movwf	(??_bit_off+0)+0
  2477  02F7  0847               	movf	(??_bit_off+0)+0,w
  2478  02F8  05B8               	andwf	(_a_latch),f
  2479                           	line	36
  2480                           	
  2481  02F9                     l2692:	
  2482                           ;main.c: 36: PORTA = a_latch;
  2483  02F9  0838               	movf	(_a_latch),w
  2484  02FA  0085               	movwf	(5)	;volatile
  2485                           	line	37
  2486                           	
  2487  02FB                     l484:	
  2488  02FB  0008               	return
  2489                           	opt stack 0
  2490                           GLOBAL	__end_of_bit_off
  2491  02FC                     	__end_of_bit_off:
  2492 ;; =============== function _bit_off ends ============
  2493                           
  2494                           	signat	_bit_off,4216
  2495                           	global	_bit_on
  2496                           psect	text379,local,class=CODE,delta=2
  2497                           global __ptext379
  2498  02FC                     __ptext379:
  2499                           
  2500 ;; *************** function _bit_on *****************
  2501 ;; Defined at:
  2502 ;;		line 28 in file "main.c"
  2503 ;; Parameters:    Size  Location     Type
  2504 ;;  bt              1    wreg     unsigned char 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  bt              1    1[BANK0 ] unsigned char 
  2507 ;; Return value:  Size  Location     Type
  2508 ;;		None               void
  2509 ;; Registers used:
  2510 ;;		wreg, status,2, status,0
  2511 ;; Tracked objects:
  2512 ;;		On entry : 0/0
  2513 ;;		On exit  : 0/0
  2514 ;;		Unchanged: 0/0
  2515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2516 ;;      Params:         0       0       0       0
  2517 ;;      Locals:         0       1       0       0
  2518 ;;      Temps:          0       1       0       0
  2519 ;;      Totals:         0       2       0       0
  2520 ;;Total ram usage:        2 bytes
  2521 ;; Hardware stack levels used:    1
  2522 ;; Hardware stack levels required when called:    3
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_shift_write
  2527 ;;		_show_face
  2528 ;;		_main
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           psect	text379
  2532                           	file	"main.c"
  2533                           	line	28
  2534                           	global	__size_of_bit_on
  2535  000A                     	__size_of_bit_on	equ	__end_of_bit_on-_bit_on
  2536                           	
  2537  02FC                     _bit_on:	
  2538                           	opt	stack 2
  2539                           ; Regs used in _bit_on: [wreg+status,2+status,0]
  2540                           ;bit_on@bt stored from wreg
  2541  02FC  1283               	bcf	status, 5	;RP0=0, select bank0
  2542  02FD  1303               	bcf	status, 6	;RP1=0, select bank0
  2543  02FE  00C8               	movwf	(bit_on@bt)
  2544                           	line	29
  2545                           	
  2546  02FF                     l2686:	
  2547                           ;main.c: 29: a_latch |= bt;
  2548  02FF  0848               	movf	(bit_on@bt),w
  2549  0300  00C7               	movwf	(??_bit_on+0)+0
  2550  0301  0847               	movf	(??_bit_on+0)+0,w
  2551  0302  04B8               	iorwf	(_a_latch),f
  2552                           	line	30
  2553                           	
  2554  0303                     l2688:	
  2555                           ;main.c: 30: PORTA = a_latch;
  2556  0303  0838               	movf	(_a_latch),w
  2557  0304  0085               	movwf	(5)	;volatile
  2558                           	line	31
  2559                           	
  2560  0305                     l481:	
  2561  0305  0008               	return
  2562                           	opt stack 0
  2563                           GLOBAL	__end_of_bit_on
  2564  0306                     	__end_of_bit_on:
  2565 ;; =============== function _bit_on ends ============
  2566                           
  2567                           	signat	_bit_on,4216
  2568                           	global	_interrupt_handler
  2569                           psect	text380,local,class=CODE,delta=2
  2570                           global __ptext380
  2571  02A0                     __ptext380:
  2572                           
  2573 ;; *************** function _interrupt_handler *****************
  2574 ;; Defined at:
  2575 ;;		line 317 in file "main.c"
  2576 ;; Parameters:    Size  Location     Type
  2577 ;;		None
  2578 ;; Auto vars:     Size  Location     Type
  2579 ;;		None
  2580 ;; Return value:  Size  Location     Type
  2581 ;;		None               void
  2582 ;; Registers used:
  2583 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2584 ;; Tracked objects:
  2585 ;;		On entry : 0/0
  2586 ;;		On exit  : 0/0
  2587 ;;		Unchanged: 0/0
  2588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2589 ;;      Params:         0       0       0       0
  2590 ;;      Locals:         0       0       0       0
  2591 ;;      Temps:          4       0       0       0
  2592 ;;      Totals:         4       0       0       0
  2593 ;;Total ram usage:        4 bytes
  2594 ;; Hardware stack levels used:    1
  2595 ;; Hardware stack levels required when called:    2
  2596 ;; This function calls:
  2597 ;;		_sync
  2598 ;; This function is called by:
  2599 ;;		Interrupt level 1
  2600 ;; This function uses a non-reentrant model
  2601 ;;
  2602                           psect	text380
  2603                           	file	"main.c"
  2604                           	line	317
  2605                           	global	__size_of_interrupt_handler
  2606  0028                     	__size_of_interrupt_handler	equ	__end_of_interrupt_handler-_interrupt_handler
  2607                           	
  2608  02A0                     _interrupt_handler:	
  2609                           	opt	stack 2
  2610                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2611                           psect	intentry,class=CODE,delta=2
  2612                           global __pintentry
  2613  0004                     __pintentry:
  2614                           global interrupt_function
  2615  0004                     interrupt_function:
  2616                           	global saved_w
  2617  007E                     	saved_w	set	btemp+0
  2618  0004  00FE               	movwf	saved_w
  2619  0005  0E03               	swapf	status,w
  2620  0006  00F5               	movwf	(??_interrupt_handler+0)
  2621  0007  0804               	movf	fsr0,w
  2622  0008  00F6               	movwf	(??_interrupt_handler+1)
  2623  0009  080A               	movf	pclath,w
  2624  000A  00F7               	movwf	(??_interrupt_handler+2)
  2625  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  2626  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  2627  000D  087F               	movf	btemp+1,w
  2628  000E  00F8               	movwf	(??_interrupt_handler+3)
  2629  000F  2AA0               	ljmp	_interrupt_handler
  2630                           psect	text380
  2631                           	line	320
  2632                           	
  2633  02A0                     i1l2792:	
  2634                           ;main.c: 319: static char c=0;
  2635                           ;main.c: 320: if (RBIF) {
  2636  02A0  1C0B               	btfss	(88/8),(88)&7
  2637  02A1  2AA3               	goto	u275_21
  2638  02A2  2AA4               	goto	u275_20
  2639  02A3                     u275_21:
  2640  02A3  2ABB               	goto	i1l565
  2641  02A4                     u275_20:
  2642                           	line	321
  2643                           	
  2644  02A4                     i1l2794:	
  2645                           ;main.c: 321: if (RB7 == 1) {
  2646                           	line	324
  2647                           ;main.c: 323: ;
  2648                           	
  2649  02A4                     i1l559:	
  2650                           	line	326
  2651                           ;main.c: 324: }
  2652                           ;main.c: 326: if (RB5 == 0 || RB7 == 1) {
  2653  02A4  1E86               	btfss	(53/8),(53)&7
  2654  02A5  2AA7               	goto	u276_21
  2655  02A6  2AA8               	goto	u276_20
  2656  02A7                     u276_21:
  2657  02A7  2AAD               	goto	i1l2798
  2658  02A8                     u276_20:
  2659                           	
  2660  02A8                     i1l2796:	
  2661  02A8  1F86               	btfss	(55/8),(55)&7
  2662  02A9  2AAB               	goto	u277_21
  2663  02AA  2AAC               	goto	u277_20
  2664  02AB                     u277_21:
  2665  02AB  2AB9               	goto	i1l560
  2666  02AC                     u277_20:
  2667  02AC  2AAD               	goto	i1l2798
  2668                           	
  2669  02AD                     i1l562:	
  2670                           	line	331
  2671                           	
  2672  02AD                     i1l2798:	
  2673                           ;main.c: 331: if(c == 0){
  2674  02AD  08F9               	movf	(interrupt_handler@c),f
  2675  02AE  1D03               	skipz
  2676  02AF  2AB1               	goto	u278_21
  2677  02B0  2AB2               	goto	u278_20
  2678  02B1                     u278_21:
  2679  02B1  2AB7               	goto	i1l563
  2680  02B2                     u278_20:
  2681                           	line	332
  2682                           	
  2683  02B2                     i1l2800:	
  2684                           ;main.c: 332: sync();
  2685  02B2  207B               	fcall	_sync
  2686                           	line	333
  2687                           	
  2688  02B3                     i1l2802:	
  2689                           ;main.c: 333: c = 1;
  2690  02B3  01F9               	clrf	(interrupt_handler@c)
  2691  02B4  1403               	bsf	status,0
  2692  02B5  0DF9               	rlf	(interrupt_handler@c),f
  2693                           	line	334
  2694                           ;main.c: 334: } else {
  2695  02B6  2AB9               	goto	i1l560
  2696                           	
  2697  02B7                     i1l563:	
  2698                           	line	335
  2699                           ;main.c: 335: c = 0;
  2700  02B7  01F9               	clrf	(interrupt_handler@c)
  2701  02B8  2AB9               	goto	i1l560
  2702                           	line	336
  2703                           	
  2704  02B9                     i1l564:	
  2705                           	line	337
  2706                           	
  2707  02B9                     i1l560:	
  2708                           	line	338
  2709                           ;main.c: 336: }
  2710                           ;main.c: 337: }
  2711                           ;main.c: 338: RBIF = 0;
  2712  02B9  100B               	bcf	(88/8),(88)&7
  2713  02BA  2ABB               	goto	i1l565
  2714                           	line	339
  2715                           	
  2716  02BB                     i1l558:	
  2717                           	line	340
  2718                           	
  2719  02BB                     i1l565:	
  2720  02BB  0878               	movf	(??_interrupt_handler+3),w
  2721  02BC  1283               	bcf	status, 5	;RP0=0, select bank0
  2722  02BD  1303               	bcf	status, 6	;RP1=0, select bank0
  2723  02BE  00FF               	movwf	btemp+1
  2724  02BF  0877               	movf	(??_interrupt_handler+2),w
  2725  02C0  008A               	movwf	pclath
  2726  02C1  0876               	movf	(??_interrupt_handler+1),w
  2727  02C2  0084               	movwf	fsr0
  2728  02C3  0E75               	swapf	(??_interrupt_handler+0)^0FFFFFF80h,w
  2729  02C4  0083               	movwf	status
  2730  02C5  0EFE               	swapf	saved_w,f
  2731  02C6  0E7E               	swapf	saved_w,w
  2732  02C7  0009               	retfie
  2733                           	opt stack 0
  2734                           GLOBAL	__end_of_interrupt_handler
  2735  02C8                     	__end_of_interrupt_handler:
  2736 ;; =============== function _interrupt_handler ends ============
  2737                           
  2738                           	signat	_interrupt_handler,88
  2739                           	global	_sync
  2740                           psect	text381,local,class=CODE,delta=2
  2741                           global __ptext381
  2742  007B                     __ptext381:
  2743                           
  2744 ;; *************** function _sync *****************
  2745 ;; Defined at:
  2746 ;;		line 238 in file "main.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;		None
  2749 ;; Auto vars:     Size  Location     Type
  2750 ;;		None
  2751 ;; Return value:  Size  Location     Type
  2752 ;;		None               void
  2753 ;; Registers used:
  2754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2760 ;;      Params:         0       0       0       0
  2761 ;;      Locals:         0       0       0       0
  2762 ;;      Temps:          3       0       0       0
  2763 ;;      Totals:         3       0       0       0
  2764 ;;Total ram usage:        3 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    1
  2767 ;; This function calls:
  2768 ;;		i1_bit_off
  2769 ;;		i1_bit_on
  2770 ;; This function is called by:
  2771 ;;		_interrupt_handler
  2772 ;; This function uses a non-reentrant model
  2773 ;;
  2774                           psect	text381
  2775                           	file	"main.c"
  2776                           	line	238
  2777                           	global	__size_of_sync
  2778  0065                     	__size_of_sync	equ	__end_of_sync-_sync
  2779                           	
  2780  007B                     _sync:	
  2781                           	opt	stack 2
  2782                           ; Regs used in _sync: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2783                           	line	239
  2784                           	
  2785  007B                     i1l2748:	
  2786                           ;main.c: 239: bit_off(0x02);
  2787  007B  3002               	movlw	(02h)
  2788  007C  2306               	fcall	i1_bit_off
  2789                           	line	242
  2790                           	
  2791  007D                     i1l2750:	
  2792                           ;main.c: 242: TMR1ON = 0;
  2793  007D  1283               	bcf	status, 5	;RP0=0, select bank0
  2794  007E  1303               	bcf	status, 6	;RP1=0, select bank0
  2795  007F  1010               	bcf	(128/8),(128)&7
  2796                           	line	244
  2797                           ;main.c: 244: switch (running) {
  2798  0080  28C6               	goto	i1l2778
  2799                           	line	245
  2800                           ;main.c: 245: case 0:
  2801                           	
  2802  0081                     i1l543:	
  2803                           	line	247
  2804                           	
  2805  0081                     i1l2752:	
  2806                           ;main.c: 247: TMR1H = 0;
  2807  0081  018F               	clrf	(15)	;volatile
  2808                           	line	248
  2809                           ;main.c: 248: TMR1L = 0;
  2810  0082  018E               	clrf	(14)	;volatile
  2811                           	line	249
  2812                           	
  2813  0083                     i1l2754:	
  2814                           ;main.c: 249: tmr1_counter = 0;
  2815  0083  01C4               	clrf	(_tmr1_counter)
  2816                           	line	250
  2817                           	
  2818  0084                     i1l2756:	
  2819                           ;main.c: 250: TMR1IF = 0;
  2820  0084  100C               	bcf	(96/8),(96)&7
  2821                           	line	251
  2822                           	
  2823  0085                     i1l2758:	
  2824                           ;main.c: 251: TMR1ON = 1;
  2825  0085  1410               	bsf	(128/8),(128)&7
  2826                           	line	252
  2827                           ;main.c: 252: break;
  2828  0086  28D1               	goto	i1l2780
  2829                           	line	254
  2830                           ;main.c: 254: case 1:
  2831                           	
  2832  0087                     i1l545:	
  2833                           	line	255
  2834                           	
  2835  0087                     i1l546:	
  2836                           	line	257
  2837                           ;main.c: 255: case 2:
  2838                           ;main.c: 257: if (TMR1IF == 1)
  2839  0087  1C0C               	btfss	(96/8),(96)&7
  2840  0088  288A               	goto	u269_21
  2841  0089  288B               	goto	u269_20
  2842  008A                     u269_21:
  2843  008A  288F               	goto	i1l547
  2844  008B                     u269_20:
  2845                           	line	258
  2846                           	
  2847  008B                     i1l2760:	
  2848                           ;main.c: 258: tmr1_counter++;
  2849  008B  3001               	movlw	(01h)
  2850  008C  00F2               	movwf	(??_sync+0)+0
  2851  008D  0872               	movf	(??_sync+0)+0,w
  2852  008E  07C4               	addwf	(_tmr1_counter),f
  2853                           	
  2854  008F                     i1l547:	
  2855                           	line	260
  2856                           ;main.c: 260: seg_ticks_l = (TMR1L >> 7) | ((TMR1H << 1) & 0xFF);
  2857  008F  080F               	movf	(15),w	;volatile
  2858  0090  00F2               	movwf	(??_sync+0)+0
  2859  0091  3001               	movlw	01h
  2860  0092                     u270_25:
  2861  0092  1003               	clrc
  2862  0093  0DF2               	rlf	(??_sync+0)+0,f
  2863  0094  3EFF               	addlw	-1
  2864  0095  1D03               	skipz
  2865  0096  2892               	goto	u270_25
  2866  0097  080E               	movf	(14),w	;volatile
  2867  0098  00F3               	movwf	(??_sync+1)+0
  2868  0099  3007               	movlw	07h
  2869  009A                     u271_25:
  2870  009A  1003               	clrc
  2871  009B  0CF3               	rrf	(??_sync+1)+0,f
  2872  009C  3EFF               	addlw	-1
  2873  009D  1D03               	skipz
  2874  009E  289A               	goto	u271_25
  2875  009F  0873               	movf	0+(??_sync+1)+0,w
  2876  00A0  0472               	iorwf	0+(??_sync+0)+0,w
  2877  00A1  00F4               	movwf	(??_sync+2)+0
  2878  00A2  0874               	movf	(??_sync+2)+0,w
  2879  00A3  00BE               	movwf	(_seg_ticks_l)
  2880                           	line	261
  2881                           ;main.c: 261: seg_ticks_h = (TMR1H >> 7) | ((tmr1_counter << 1) & 0xFF);
  2882  00A4  0844               	movf	(_tmr1_counter),w
  2883  00A5  00F2               	movwf	(??_sync+0)+0
  2884  00A6  3001               	movlw	01h
  2885  00A7                     u272_25:
  2886  00A7  1003               	clrc
  2887  00A8  0DF2               	rlf	(??_sync+0)+0,f
  2888  00A9  3EFF               	addlw	-1
  2889  00AA  1D03               	skipz
  2890  00AB  28A7               	goto	u272_25
  2891  00AC  080F               	movf	(15),w	;volatile
  2892  00AD  00F3               	movwf	(??_sync+1)+0
  2893  00AE  3007               	movlw	07h
  2894  00AF                     u273_25:
  2895  00AF  1003               	clrc
  2896  00B0  0CF3               	rrf	(??_sync+1)+0,f
  2897  00B1  3EFF               	addlw	-1
  2898  00B2  1D03               	skipz
  2899  00B3  28AF               	goto	u273_25
  2900  00B4  0873               	movf	0+(??_sync+1)+0,w
  2901  00B5  0472               	iorwf	0+(??_sync+0)+0,w
  2902  00B6  00F4               	movwf	(??_sync+2)+0
  2903  00B7  0874               	movf	(??_sync+2)+0,w
  2904  00B8  00BD               	movwf	(_seg_ticks_h)
  2905                           	line	263
  2906                           	
  2907  00B9                     i1l2762:	
  2908                           ;main.c: 263: seg = 0;
  2909  00B9  01BC               	clrf	(_seg)
  2910                           	line	267
  2911                           	
  2912  00BA                     i1l2764:	
  2913                           ;main.c: 267: TMR1L = 0;
  2914  00BA  018E               	clrf	(14)	;volatile
  2915                           	line	268
  2916                           	
  2917  00BB                     i1l2766:	
  2918                           ;main.c: 268: TMR1H = 0;
  2919  00BB  018F               	clrf	(15)	;volatile
  2920                           	line	269
  2921                           	
  2922  00BC                     i1l2768:	
  2923                           ;main.c: 269: tmr1_counter = 0;
  2924  00BC  01C4               	clrf	(_tmr1_counter)
  2925                           	line	270
  2926                           	
  2927  00BD                     i1l2770:	
  2928                           ;main.c: 270: TMR1IF = 0;
  2929  00BD  100C               	bcf	(96/8),(96)&7
  2930                           	line	271
  2931                           	
  2932  00BE                     i1l2772:	
  2933                           ;main.c: 271: TMR1ON = 1;
  2934  00BE  1410               	bsf	(128/8),(128)&7
  2935                           	line	274
  2936                           ;main.c: 274: TMR0 = 256 - seg_ticks_l;
  2937  00BF  033E               	decf	(_seg_ticks_l),w
  2938  00C0  3AFF               	xorlw	0ffh
  2939  00C1  0081               	movwf	(1)
  2940                           	line	275
  2941                           	
  2942  00C2                     i1l2774:	
  2943                           ;main.c: 275: tmr0_counter = 0;
  2944  00C2  01C3               	clrf	(_tmr0_counter)
  2945                           	line	276
  2946                           	
  2947  00C3                     i1l2776:	
  2948                           ;main.c: 276: TMR0IF = 0;
  2949  00C3  110B               	bcf	(90/8),(90)&7
  2950                           	line	279
  2951                           ;main.c: 279: break;
  2952  00C4  28D1               	goto	i1l2780
  2953                           	line	280
  2954                           ;main.c: 280: default:
  2955                           	
  2956  00C5                     i1l548:	
  2957                           	line	282
  2958                           ;main.c: 281: ;
  2959                           ;main.c: 282: }
  2960  00C5  28D1               	goto	i1l2780
  2961                           	line	244
  2962                           	
  2963  00C6                     i1l542:	
  2964                           	
  2965  00C6                     i1l2778:	
  2966  00C6  083B               	movf	(_running),w
  2967                           	; Switch size 1, requested type "space"
  2968                           ; Number of cases is 3, Range of values is 0 to 2
  2969                           ; switch strategies available:
  2970                           ; Name         Instructions Cycles
  2971                           ; direct_byte            9     6 (fixed)
  2972                           ; simple_byte           10     6 (average)
  2973                           ; jumptable            260     6 (fixed)
  2974                           ; rangetable             7     6 (fixed)
  2975                           ; spacedrange           12     9 (fixed)
  2976                           ; locatedrange           3     3 (fixed)
  2977                           ;	Chosen strategy is direct_byte
  2978                           
  2979  00C7  0084               	movwf fsr
  2980  00C8  3003               	movlw	3
  2981  00C9  0204               	subwf	fsr,w
  2982  00CA  1803               skipnc
  2983  00CB  28D1               goto i1l2780
  2984  00CC  3000               movlw high(i1S3060)
  2985  00CD  008A               movwf pclath
  2986  00CE  3001               	movlw low(i1S3060)
  2987  00CF  0704               	addwf fsr,w
  2988  00D0  0082               	movwf pc
  2989                           psect	swtext1,local,class=CONST,delta=2
  2990                           global __pswtext1
  2991  0001                     __pswtext1:
  2992  0001                     i1S3060:
  2993  0001  2881               	ljmp	i1l2752
  2994  0002  2887               	ljmp	i1l546
  2995  0003  2887               	ljmp	i1l546
  2996                           psect	text381
  2997                           
  2998                           	line	282
  2999                           	
  3000  00D1                     i1l544:	
  3001                           	line	285
  3002                           	
  3003  00D1                     i1l2780:	
  3004                           ;main.c: 285: if (running != 2)
  3005  00D1  083B               	movf	(_running),w
  3006  00D2  3A02               	xorlw	02h
  3007  00D3  1903               	skipnz
  3008  00D4  28D6               	goto	u274_21
  3009  00D5  28D7               	goto	u274_20
  3010  00D6                     u274_21:
  3011  00D6  28DC               	goto	i1l2784
  3012  00D7                     u274_20:
  3013                           	line	286
  3014                           	
  3015  00D7                     i1l2782:	
  3016                           ;main.c: 286: running++;
  3017  00D7  3001               	movlw	(01h)
  3018  00D8  00F2               	movwf	(??_sync+0)+0
  3019  00D9  0872               	movf	(??_sync+0)+0,w
  3020  00DA  07BB               	addwf	(_running),f
  3021  00DB  28DC               	goto	i1l2784
  3022                           	
  3023  00DC                     i1l549:	
  3024                           	line	289
  3025                           	
  3026  00DC                     i1l2784:	
  3027                           ;main.c: 289: bit_on(0x02);
  3028  00DC  3002               	movlw	(02h)
  3029  00DD  2310               	fcall	i1_bit_on
  3030  00DE  28DF               	goto	i1l550
  3031                           	line	290
  3032                           	
  3033  00DF                     i1l2786:	
  3034                           	line	291
  3035                           ;main.c: 290: return;
  3036                           	
  3037  00DF                     i1l550:	
  3038  00DF  0008               	return
  3039                           	opt stack 0
  3040                           GLOBAL	__end_of_sync
  3041  00E0                     	__end_of_sync:
  3042 ;; =============== function _sync ends ============
  3043                           
  3044                           	signat	_sync,88
  3045                           	global	i1_bit_off
  3046                           psect	text382,local,class=CODE,delta=2
  3047                           global __ptext382
  3048  0306                     __ptext382:
  3049                           
  3050 ;; *************** function i1_bit_off *****************
  3051 ;; Defined at:
  3052 ;;		line 34 in file "main.c"
  3053 ;; Parameters:    Size  Location     Type
  3054 ;;  bit_off         1    wreg     unsigned char 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  bit_off         1    1[COMMON] unsigned char 
  3057 ;; Return value:  Size  Location     Type
  3058 ;;		None               void
  3059 ;; Registers used:
  3060 ;;		wreg, status,2, status,0
  3061 ;; Tracked objects:
  3062 ;;		On entry : 0/0
  3063 ;;		On exit  : 0/0
  3064 ;;		Unchanged: 0/0
  3065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3066 ;;      Params:         0       0       0       0
  3067 ;;      Locals:         1       0       0       0
  3068 ;;      Temps:          1       0       0       0
  3069 ;;      Totals:         2       0       0       0
  3070 ;;Total ram usage:        2 bytes
  3071 ;; Hardware stack levels used:    1
  3072 ;; This function calls:
  3073 ;;		Nothing
  3074 ;; This function is called by:
  3075 ;;		_sync
  3076 ;; This function uses a non-reentrant model
  3077 ;;
  3078                           psect	text382
  3079                           	file	"main.c"
  3080                           	line	34
  3081                           	global	__size_ofi1_bit_off
  3082  000A                     	__size_ofi1_bit_off	equ	__end_ofi1_bit_off-i1_bit_off
  3083                           	
  3084  0306                     i1_bit_off:	
  3085                           	opt	stack 2
  3086                           ; Regs used in i1_bit_off: [wreg+status,2+status,0]
  3087                           ;i1bit_off@bt stored from wreg
  3088  0306  00F1               	movwf	(i1bit_off@bt)
  3089                           	line	35
  3090                           	
  3091  0307                     i1l2822:	
  3092                           ;main.c: 35: a_latch &= ~bt;
  3093  0307  0971               	comf	(i1bit_off@bt),w
  3094  0308  00F0               	movwf	(??i1_bit_off+0)+0
  3095  0309  0870               	movf	(??i1_bit_off+0)+0,w
  3096  030A  1283               	bcf	status, 5	;RP0=0, select bank0
  3097  030B  1303               	bcf	status, 6	;RP1=0, select bank0
  3098  030C  05B8               	andwf	(_a_latch),f
  3099                           	line	36
  3100                           	
  3101  030D                     i1l2824:	
  3102                           ;main.c: 36: PORTA = a_latch;
  3103  030D  0838               	movf	(_a_latch),w
  3104  030E  0085               	movwf	(5)	;volatile
  3105                           	line	37
  3106                           	
  3107  030F                     i1l484:	
  3108  030F  0008               	return
  3109                           	opt stack 0
  3110                           GLOBAL	__end_ofi1_bit_off
  3111  0310                     	__end_ofi1_bit_off:
  3112 ;; =============== function i1_bit_off ends ============
  3113                           
  3114                           	signat	i1_bit_off,88
  3115                           	global	i1_bit_on
  3116                           psect	text383,local,class=CODE,delta=2
  3117                           global __ptext383
  3118  0310                     __ptext383:
  3119                           
  3120 ;; *************** function i1_bit_on *****************
  3121 ;; Defined at:
  3122 ;;		line 28 in file "main.c"
  3123 ;; Parameters:    Size  Location     Type
  3124 ;;  bit_on          1    wreg     unsigned char 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  bit_on          1    1[COMMON] unsigned char 
  3127 ;; Return value:  Size  Location     Type
  3128 ;;		None               void
  3129 ;; Registers used:
  3130 ;;		wreg, status,2, status,0
  3131 ;; Tracked objects:
  3132 ;;		On entry : 0/0
  3133 ;;		On exit  : 0/0
  3134 ;;		Unchanged: 0/0
  3135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3136 ;;      Params:         0       0       0       0
  3137 ;;      Locals:         1       0       0       0
  3138 ;;      Temps:          1       0       0       0
  3139 ;;      Totals:         2       0       0       0
  3140 ;;Total ram usage:        2 bytes
  3141 ;; Hardware stack levels used:    1
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_sync
  3146 ;; This function uses a non-reentrant model
  3147 ;;
  3148                           psect	text383
  3149                           	file	"main.c"
  3150                           	line	28
  3151                           	global	__size_ofi1_bit_on
  3152  000A                     	__size_ofi1_bit_on	equ	__end_ofi1_bit_on-i1_bit_on
  3153                           	
  3154  0310                     i1_bit_on:	
  3155                           	opt	stack 2
  3156                           ; Regs used in i1_bit_on: [wreg+status,2+status,0]
  3157                           ;i1bit_on@bt stored from wreg
  3158  0310  00F1               	movwf	(i1bit_on@bt)
  3159                           	line	29
  3160                           	
  3161  0311                     i1l2818:	
  3162                           ;main.c: 29: a_latch |= bt;
  3163  0311  0871               	movf	(i1bit_on@bt),w
  3164  0312  00F0               	movwf	(??i1_bit_on+0)+0
  3165  0313  0870               	movf	(??i1_bit_on+0)+0,w
  3166  0314  1283               	bcf	status, 5	;RP0=0, select bank0
  3167  0315  1303               	bcf	status, 6	;RP1=0, select bank0
  3168  0316  04B8               	iorwf	(_a_latch),f
  3169                           	line	30
  3170                           	
  3171  0317                     i1l2820:	
  3172                           ;main.c: 30: PORTA = a_latch;
  3173  0317  0838               	movf	(_a_latch),w
  3174  0318  0085               	movwf	(5)	;volatile
  3175                           	line	31
  3176                           	
  3177  0319                     i1l481:	
  3178  0319  0008               	return
  3179                           	opt stack 0
  3180                           GLOBAL	__end_ofi1_bit_on
  3181  031A                     	__end_ofi1_bit_on:
  3182 ;; =============== function i1_bit_on ends ============
  3183                           
  3184                           	signat	i1_bit_on,88
  3185                           psect	text384,local,class=CODE,delta=2
  3186                           global __ptext384
  3187  0000                     __ptext384:
  3188                           	global	btemp
  3189  007E                     	btemp set 07Eh
  3190                           
  3191                           	DABS	1,126,2	;btemp
  3192                           	global	wtemp0
  3193  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Jun 03 15:09:04 2013

                           pc 0002  __size_of_hour_start_end_init 0047                ___bmul@product 0049  
                          _RD 0C60                            _WR 0C61                            fsr 0004  
                         l510 0271                           l520 01C7                           l513 0288  
                         l521 01C7                           l506 0253                           l514 029F  
                         l507 0274                           l515 0292                           l531 00EB  
                         l508 025D                           l516 029C                           l524 0216  
                         l532 0130                           l509 0267                           l525 0241  
                         l533 00F3                           l526 0224                           l534 00FE  
                         l519 018C                           l527 0241                           l535 0108  
                         l528 0234                           l536 0113                           l481 0305  
                         l537 011E                           l553 02F1                           l490 0158  
                         l538 0129                           l570 002C                           l491 0180  
                         l539 0132                           l571 007A                           l484 02FB  
                         l580 0204                           l581 0209                           l582 020A  
                         l574 01D0                           l487 014D                           l583 020A  
                         l575 01F2                           l488 017B                           l568 0027  
                         l576 01F0                           l489 0156                           l569 0027  
                         l577 01E8                           l578 01EF                           l579 0208  
                         _GIE 005F                           _RB5 0035                           _RB7 0037  
                         _seg 003C                           fsr0 0004                           indf 0000  
                        l1042 02CC                          l1043 02D5                          l1044 02DF  
                        l1045 02E1                          l3000 0077                          l3002 0078  
                        l3010 01CA                          l3004 0079                          l3020 01E2  
                        l3012 01CD                          l3022 01E3                          l3030 01F2  
                        l3014 01D0                          l3006 01C8                          l3032 01F8  
                        l3024 01E6                          l3016 01D4                          l3008 01C9  
                 _sixty_start 0242                          l3034 01FC                          l3026 01E8  
                        l3018 01DC                          l3036 0202                          l3028 01F0  
                        l3038 0204                          l2700 0252                          l2710 0263  
                        l2702 0253                          l2720 0271                          l2712 0266  
                        l2704 0259                          l2722 0274                          l2714 0267  
                        l2706 025C                          l2730 0287                          l2810 02D7  
                        l2716 026D                          l2708 025D                          l2740 0298  
                        l2732 0288                          l2724 0278                          l2812 02D9  
                        l2804 02CB                          l2900 00F3                          l2718 0270  
                        l2742 029B                          l2734 028E                          l2726 027E  
                        l2814 02DF                          l2806 02D0                          l2830 013E  
                        l2910 0110                          l2902 00FB                          l2744 029C  
                        l2736 0291                          l2728 0284                          l2816 02E1  
                        l2808 02D5                          l2840 0163                          l2832 014C  
                        l2920 0129                          l2912 0113                          l2904 00FE  
                        l2690 02F5                          l2746 029F                          l2738 0292  
                        l2842 0165                          l2834 0153                          l2826 0136  
                        l2850 0181                          l2914 011B                          l2906 0105  
                        l2922 0130                          l2930 02E7                          l2692 02F9  
                        l2844 016D                          l2836 0156                          l2828 013A  
                        l2860 01A6                          l2852 0184                          l2924 0132  
                        l2916 011E                          l2908 0108                          l2940 02EE  
                        l2932 02EA                          l2686 02FF                          l2694 0245  
                        l2838 015A                          l2846 017B                          l2862 01B1  
                        l2854 018B                          l2870 020E                          l2918 0126  
                        l2942 02EF                          l2934 02EB                          l2926 02E2  
                        l2950 0019                          l2688 0303                          l2696 024B  
                        l2848 017D                          l2864 01BC                          l2856 018C  
                        l2880 0224                          l2872 0215                          l2944 02F0  
                        l2936 02EC                          l2928 02E5                          l2960 0024  
                        l2952 001A                          l2698 0250                          l2866 01C0  
                        l2858 019B                          l2882 0230                          l2874 0216  
                        l2890 00E0                          l2938 02ED                          l2970 0036  
                        l2962 0025                          l2954 001B                          l2946 0011  
                        l2884 0233                          l2876 0220                          l2868 020B  
                        l2892 00E1                          l2980 0059                          l2972 003D  
                        l2964 002C                          l2956 001F                          l2948 0015  
                        l2886 0234                          l2878 0223                          l2894 00EA  
                        l2990 006E                          l2982 0060                          l2974 0044  
                        l2966 002E                          l2958 0021                          l2888 023A  
                        l2896 00EB                          l2992 006F                          l2984 0067  
                        l2976 004B                          l2968 002F                          l2898 00F1  
                        l2994 0070                          l2986 0068                          l2978 0052  
                        l2996 0071                          l2988 006B                          l2998 0074  
                        _T0CS 040D                          u3000 01DC                          u3001 01DB  
                        u3010 01E2                          u3011 01E1                          u3020 01F8  
                        u3021 01F7                          u3030 0202                          u3031 0201  
                        u2620 0250                          u2621 024F                          u2630 0259  
                        u2631 0258                          u2640 0263                          u2800 02DE  
                        u2641 0262                          u2801 02DD                          u2650 026D  
                        u2810 014B                          u2651 026C                          u2811 014A  
                        _IOFS 047A                          u2660 0284                          u2820 0153  
                        u2900 0240                          u2661 0283                          u2821 0152  
                        u2901 023F                          u2670 028E                          u2830 017A  
                        u2910 00E9                          u2671 028D                          u2831 0179  
                        u2815 0147                          u2911 00E8                          u2680 0298  
                        u2840 018A                          u2920 00F1                          u2681 0297  
                        u2841 0189                          u2921 00F0                          u2930 00FB  
                        u2835 0176                          u2931 00FA                          _PEIE 005E  
                        u2860 01C6                          u2940 0105                          u2861 01C5  
                        u2941 0104                          u2790 02D0                          u2854 0194  
                        u2870 0214                          u2950 0110                          u2791 02CF  
                        u2855 0192                          u2871 0213                          u2951 010F  
                        _RBIE 005B                          u2880 0220                          u2960 011B  
                        _RBIF 0058                          u2881 021F                          u2961 011A  
                        u2890 0230                          u2970 0126                          u2891 022F  
                        u2971 0125                          u2980 002B                          u2981 002A  
                        u2990 01D4                          u2991 01D3                          _TMR0 0001  
                        _WREN 0C62                          _main 01C8                          _init 0011  
             shift_write@data 004D                          btemp 007E                          _sync 007B  
                  i1bit_on@bt 0071                          start 0010             ___bmul@multiplier 004A  
                 _twelve_stop 0046                         ?_main 0070                         ?_init 0070  
                       _EEADR 010D                         _CARRY 0018                         ?_sync 0070  
                       _T1CON 0010                         i1l550 00DF                         i1l542 00C6  
                       i1l543 0081                         i1l544 00D1                         i1l560 02B9  
                       i1l481 0319                         i1l545 0087                         i1l546 0087  
                       i1l562 02AD                         i1l547 008F                         i1l563 02B7  
                       i1l484 030F                         i1l548 00C5                         i1l564 02B9  
                       i1l549 00DC                         i1l565 02BB                         i1l558 02BB  
                       i1l559 02A4                         _TMR1H 000F                         _TMR1L 000E  
                       _PORTA 0005                         _TRISA 0085                         _TRISB 0086  
             __end_of_bit_off 02FC                         main@i 0051                         pclath 000A  
                 i1bit_off@bt 0071              __end_ofi1_bit_on 031A                         status 0003  
                       wtemp0 007E            __size_ofi1_bit_off 000A                  __end_of_main 020B  
                __end_of_init 007B        hour_start_end_init@min 004D                  __end_of_sync 00E0  
                _twelve_start 0045                        ??_main 0050                        ??_init 004F  
                      ??_sync 0072                        _ADCON1 009F                        i1S3060 0001  
                      _EEDATA 010C                        _EECON1 018C                        _EECON2 018D  
                      i1l2800 02B2                        i1l2802 02B3                        i1l2820 0317  
                      i1l2822 0307                        i1l2750 007D                        i1l2824 030D  
                      i1l2760 008B                        i1l2752 0081                        i1l2818 0311  
                      i1l2770 00BD                        i1l2762 00B9                        i1l2754 0083  
                      i1l2772 00BE                        i1l2764 00BA                        i1l2780 00D1  
                      i1l2756 0084                        i1l2748 007B                        i1l2782 00D7  
                      i1l2774 00C2                        i1l2766 00BB                        i1l2758 0085  
                      i1l2784 00DC                        i1l2776 00C3                        i1l2768 00BC  
                      i1l2792 02A0                        i1l2786 00DF                        i1l2778 00C6  
                      i1l2794 02A4                        i1l2796 02A8                        i1l2798 02AD  
                      u270_25 0092                        u271_25 009A                        u272_25 00A7  
                      u273_25 00AF                        u274_20 00D7                        u274_21 00D6  
                      u275_20 02A4                        u275_21 02A3                        u276_20 02A8  
                      u276_21 02A7                        u269_20 008B                        u277_20 02AC  
                      u269_21 008A                        u277_21 02AB                        u278_20 02B2  
                      u278_21 02B1                        _TMR0IE 005D                        _TMR0IF 005A  
                      _TMR1IE 0460                        _TMR1IF 0060                        _TMR1ON 0080  
                ?_shift_write 0070                        ___bmul 02C8                        _bit_on 02FC  
                   ??_bit_off 0047                        clrloop 0323                        saved_w 007E  
           __end_ofi1_bit_off 0310           _hour_start_end_init 0181           ___bmul@multiplicand 0047  
              __pcstackCOMMON 0070          ?_hour_start_end_init 0070                     ?i1_bit_on 0070  
                sixty_start@x 0049                  ?_sixty_start 0070                    __pbssBANK0 0020  
                  __pmaintext 01C8                 ?_next_segment 0070                       ?___bmul 0047  
       ??_hour_start_end_init 004B                       ?_bit_on 0070                    __pintentry 0004  
                  ??i1_bit_on 0070            __size_of_show_face 0037            interrupt_handler@c 0079  
              ??_next_segment 004E               __size_of___bmul 001A                       _a_latch 0038  
             __size_of_bit_on 000A          __size_of_shift_write 004E                       _bit_off 02F2  
                  _nine_start 0039                    _hour_start 002C                       _running 003B  
        end_of_initialization 0320             __end_of_show_face 0242                    _three_stop 0042  
                   i1_bit_off 0306          __size_of_sixty_start 0033                    _sixty_stop 0275  
        hour_start_end_init@i 004E             _application_reset 02E2                __end_of___bmul 02E2  
              __end_of_bit_on 0306            ?_application_reset 0070           start_initialization 031A  
           __size_ofi1_bit_on 000A           ??_application_reset 004E          __end_of_next_segment 0133  
                  ?i1_bit_off 0070     __end_of_application_reset 02F2                      ??___bmul 0048  
                    ??_bit_on 0047                   __pbssCOMMON 0079                 __pcstackBANK0 0047  
                 sixty_stop@x 0049                   ?_sixty_stop 0070   __end_of_hour_start_end_init 01C8  
                   __ptext370 02E2                     __ptext371 00E0                     __ptext380 02A0  
                   __ptext372 020B                     __ptext381 007B                     __ptext373 0181  
                   __ptext382 0306                     __ptext374 0133                     __ptext383 0310  
                   __ptext375 02C8                     __ptext384 0000                     __ptext376 0275  
                   __ptext368 0000                     __ptext377 0242                     __ptext369 0011  
                   __ptext378 02F2                     __ptext379 02FC                      ?_bit_off 0070  
                   __pswtext1 0001             _interrupt_handler 02A0            ?_interrupt_handler 0070  
                 ??i1_bit_off 0070           ??_interrupt_handler 0075                     _nine_stop 003A  
           interrupt_function 0004                     bit_off@bt 0048                 ??_shift_write 0049  
  __size_of_application_reset 0010                     _show_face 020B     __end_of_interrupt_handler 02C8  
                   _six_start 003F                    show_face@i 004A         __size_of_next_segment 0053  
                    i1_bit_on 0310           __size_of_sixty_stop 002B                  _tmr0_counter 0043  
                _tmr1_counter 0044                  _next_segment 00E0                    ?_show_face 0070  
         __end_of_shift_write 0181              __size_of_bit_off 000A                 ??_sixty_start 0047  
               __size_of_main 0043                 __size_of_init 006A                 __size_of_sync 0065  
                    _hour_end 0020                      clear_ram 0322                      bit_on@bt 0048  
                    _six_stop 0040    __size_of_interrupt_handler 0028                  shift_write@i 004B  
                 _seg_ticks_h 003D                   _seg_ticks_l 003E                      intlevel1 0000  
                ??_sixty_stop 0047           __end_of_sixty_start 0275                    _OSCCONbits 008F  
                 _shift_write 0133                   ??_show_face 0049            __end_of_sixty_stop 02A0  
                 _three_start 0041  
