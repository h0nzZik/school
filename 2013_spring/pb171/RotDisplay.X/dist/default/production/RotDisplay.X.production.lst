

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Jun 03 16:11:46 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F819
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 9 "main.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 9 "main.c"
    45  2007  FF98               	dw 0xFFFB & 0xFFFF & 0xFFDF & 0xFFFC & 0xFFBF ;#
    46                           	FNCALL	_main,_init
    47                           	FNCALL	_main,_application_reset
    48                           	FNCALL	_main,_bit_on
    49                           	FNCALL	_main,_next_segment
    50                           	FNCALL	_init,_shift_write
    51                           	FNCALL	_init,_hour_start_end_init
    52                           	FNCALL	_application_reset,_shift_write
    53                           	FNCALL	_next_segment,_show_face
    54                           	FNCALL	_next_segment,_shift_write
    55                           	FNCALL	_show_face,_bit_on
    56                           	FNCALL	_show_face,_bit_off
    57                           	FNCALL	_hour_start_end_init,___bmul
    58                           	FNCALL	_hour_start_end_init,_sixty_start
    59                           	FNCALL	_hour_start_end_init,_sixty_stop
    60                           	FNCALL	_shift_write,_bit_off
    61                           	FNCALL	_shift_write,_bit_on
    62                           	FNROOT	_main
    63                           	FNCALL	_interrupt_handler,_sync
    64                           	FNCALL	_sync,i1_bit_off
    65                           	FNCALL	_sync,i1_bit_on
    66                           	FNCALL	intlevel1,_interrupt_handler
    67                           	global	intlevel1
    68                           	FNROOT	intlevel1
    69                           	global	_hour_end
    70                           	global	_hour_start
    71                           	global	_segment
    72                           	global	_a_latch
    73                           	global	_seg_ticks_h
    74                           	global	_seg_ticks_l
    75                           	global	_state
    76                           	global	_tmr0_counter
    77                           	global	_tmr1_counter
    78                           	global	interrupt_handler@c
    79                           	global	_PORTA
    80                           psect	text368,local,class=CODE,delta=2
    81                           global __ptext368
    82  0000                     __ptext368:
    83  0005                     _PORTA	set	5
    84                           	global	_T1CON
    85  0010                     _T1CON	set	16
    86                           	global	_TMR0
    87  0001                     _TMR0	set	1
    88                           	global	_TMR1H
    89  000F                     _TMR1H	set	15
    90                           	global	_TMR1L
    91  000E                     _TMR1L	set	14
    92                           	global	_CARRY
    93  0018                     _CARRY	set	24
    94                           	global	_GIE
    95  005F                     _GIE	set	95
    96                           	global	_PEIE
    97  005E                     _PEIE	set	94
    98                           	global	_RB5
    99  0035                     _RB5	set	53
   100                           	global	_RB7
   101  0037                     _RB7	set	55
   102                           	global	_RBIE
   103  005B                     _RBIE	set	91
   104                           	global	_RBIF
   105  0058                     _RBIF	set	88
   106                           	global	_TMR0IE
   107  005D                     _TMR0IE	set	93
   108                           	global	_TMR0IF
   109  005A                     _TMR0IF	set	90
   110                           	global	_TMR1IF
   111  0060                     _TMR1IF	set	96
   112                           	global	_TMR1ON
   113  0080                     _TMR1ON	set	128
   114                           	global	_ADCON1
   115  009F                     _ADCON1	set	159
   116                           	global	_OSCCONbits
   117  008F                     _OSCCONbits	set	143
   118                           	global	_TRISA
   119  0085                     _TRISA	set	133
   120                           	global	_TRISB
   121  0086                     _TRISB	set	134
   122                           	global	_IOFS
   123  047A                     _IOFS	set	1146
   124                           	global	_T0CS
   125  040D                     _T0CS	set	1037
   126                           	global	_TMR1IE
   127  0460                     _TMR1IE	set	1120
   128                           	global	_EEADR
   129  010D                     _EEADR	set	269
   130                           	global	_EEDATA
   131  010C                     _EEDATA	set	268
   132                           	global	_EECON1
   133  018C                     _EECON1	set	396
   134                           	global	_EECON2
   135  018D                     _EECON2	set	397
   136                           	global	_RD
   137  0C60                     _RD	set	3168
   138                           	global	_WR
   139  0C61                     _WR	set	3169
   140                           	global	_WREN
   141  0C62                     _WREN	set	3170
   142                           	file	"C:\Users\vyvoj\AppData\Local\Temp\s1qo."
   143                           	line	#
   144                           psect cinit,class=CODE,delta=2
   145                           global start_initialization
   146  02D6                     start_initialization:
   147                           
   148                           psect	bssCOMMON,class=COMMON,space=1
   149                           global __pbssCOMMON
   150  0079                     __pbssCOMMON:
   151  0079                     interrupt_handler@c:
   152  0079                            ds      1
   153                           
   154                           psect	bssBANK0,class=BANK0,space=1
   155                           global __pbssBANK0
   156  0020                     __pbssBANK0:
   157  0020                     _hour_end:
   158  0020                            ds      12
   159                           
   160  002C                     _hour_start:
   161  002C                            ds      12
   162                           
   163  0038                     _segment:
   164  0038                            ds      2
   165                           
   166  003A                     _a_latch:
   167  003A                            ds      1
   168                           
   169  003B                     _seg_ticks_h:
   170  003B                            ds      1
   171                           
   172  003C                     _seg_ticks_l:
   173  003C                            ds      1
   174                           
   175  003D                     _state:
   176  003D                            ds      1
   177                           
   178  003E                     _tmr0_counter:
   179  003E                            ds      1
   180                           
   181  003F                     _tmr1_counter:
   182  003F                            ds      1
   183                           
   184                           psect clrtext,class=CODE,delta=2
   185                           global clear_ram
   186                           ;	Called with FSR containing the base address, and
   187                           ;	W with the last address+1
   188  02DE                     clear_ram:
   189  02DE  0064               	clrwdt			;clear the watchdog before getting into this loop
   190  02DF                     clrloop:
   191  02DF  0180               	clrf	indf		;clear RAM location pointed to by FSR
   192  02E0  0A84               	incf	fsr,f		;increment pointer
   193  02E1  0604               	xorwf	fsr,w		;XOR with final address
   194  02E2  1903               	btfsc	status,2	;have we reached the end yet?
   195  02E3  3400               	retlw	0		;all done for this memory range, return
   196  02E4  0604               	xorwf	fsr,w		;XOR again to restore value
   197  02E5  2ADF               	goto	clrloop		;do the next byte
   198                           
   199                           ; Clear objects allocated to COMMON
   200                           psect cinit,class=CODE,delta=2
   201  02D6  01F9               	clrf	((__pbssCOMMON)+0)&07Fh
   202                           ; Clear objects allocated to BANK0
   203                           psect cinit,class=CODE,delta=2
   204  02D7  1383               	bcf	status, 7	;select IRP bank0
   205  02D8  3020               	movlw	low(__pbssBANK0)
   206  02D9  0084               	movwf	fsr
   207  02DA  3040               	movlw	low((__pbssBANK0)+020h)
   208  02DB  22DE               	fcall	clear_ram
   209                           psect cinit,class=CODE,delta=2
   210                           global end_of_initialization
   211                           
   212                           ;End of C runtime variable initialization code
   213                           
   214  02DC                     end_of_initialization:
   215  02DC  0183               clrf status
   216  02DD  2958               ljmp _main	;jump to C main() function
   217                           psect	cstackCOMMON,class=COMMON,space=1
   218                           global __pcstackCOMMON
   219  0070                     __pcstackCOMMON:
   220                           	global	?_bit_on
   221  0070                     ?_bit_on:	; 0 bytes @ 0x0
   222                           	global	?_bit_off
   223  0070                     ?_bit_off:	; 0 bytes @ 0x0
   224                           	global	?_shift_write
   225  0070                     ?_shift_write:	; 0 bytes @ 0x0
   226                           	global	?_hour_start_end_init
   227  0070                     ?_hour_start_end_init:	; 0 bytes @ 0x0
   228                           	global	?_show_face
   229  0070                     ?_show_face:	; 0 bytes @ 0x0
   230                           	global	?_next_segment
   231  0070                     ?_next_segment:	; 0 bytes @ 0x0
   232                           	global	?_sync
   233  0070                     ?_sync:	; 0 bytes @ 0x0
   234                           	global	?_application_reset
   235  0070                     ?_application_reset:	; 0 bytes @ 0x0
   236                           	global	?_interrupt_handler
   237  0070                     ?_interrupt_handler:	; 0 bytes @ 0x0
   238                           	global	?_init
   239  0070                     ?_init:	; 0 bytes @ 0x0
   240                           	global	?_main
   241  0070                     ?_main:	; 0 bytes @ 0x0
   242                           	global	?i1_bit_on
   243  0070                     ?i1_bit_on:	; 0 bytes @ 0x0
   244                           	global	??i1_bit_on
   245  0070                     ??i1_bit_on:	; 0 bytes @ 0x0
   246                           	global	?i1_bit_off
   247  0070                     ?i1_bit_off:	; 0 bytes @ 0x0
   248                           	global	??i1_bit_off
   249  0070                     ??i1_bit_off:	; 0 bytes @ 0x0
   250                           	global	?_sixty_start
   251  0070                     ?_sixty_start:	; 1 bytes @ 0x0
   252                           	global	?_sixty_stop
   253  0070                     ?_sixty_stop:	; 1 bytes @ 0x0
   254  0070                     	ds	1
   255                           	global	i1bit_on@bt
   256  0071                     i1bit_on@bt:	; 1 bytes @ 0x1
   257                           	global	i1bit_off@bt
   258  0071                     i1bit_off@bt:	; 1 bytes @ 0x1
   259  0071                     	ds	1
   260                           	global	??_sync
   261  0072                     ??_sync:	; 0 bytes @ 0x2
   262  0072                     	ds	3
   263                           	global	??_interrupt_handler
   264  0075                     ??_interrupt_handler:	; 0 bytes @ 0x5
   265  0075                     	ds	4
   266                           psect	cstackBANK0,class=BANK0,space=1
   267                           global __pcstackBANK0
   268  0040                     __pcstackBANK0:
   269                           	global	??_bit_on
   270  0040                     ??_bit_on:	; 0 bytes @ 0x0
   271                           	global	??_bit_off
   272  0040                     ??_bit_off:	; 0 bytes @ 0x0
   273                           	global	??_sixty_start
   274  0040                     ??_sixty_start:	; 0 bytes @ 0x0
   275                           	global	??_sixty_stop
   276  0040                     ??_sixty_stop:	; 0 bytes @ 0x0
   277                           	global	?___bmul
   278  0040                     ?___bmul:	; 1 bytes @ 0x0
   279                           	global	___bmul@multiplicand
   280  0040                     ___bmul@multiplicand:	; 1 bytes @ 0x0
   281  0040                     	ds	1
   282                           	global	??___bmul
   283  0041                     ??___bmul:	; 0 bytes @ 0x1
   284                           	global	bit_on@bt
   285  0041                     bit_on@bt:	; 1 bytes @ 0x1
   286                           	global	bit_off@bt
   287  0041                     bit_off@bt:	; 1 bytes @ 0x1
   288  0041                     	ds	1
   289                           	global	??_shift_write
   290  0042                     ??_shift_write:	; 0 bytes @ 0x2
   291                           	global	??_show_face
   292  0042                     ??_show_face:	; 0 bytes @ 0x2
   293                           	global	sixty_start@x
   294  0042                     sixty_start@x:	; 1 bytes @ 0x2
   295                           	global	sixty_stop@x
   296  0042                     sixty_stop@x:	; 1 bytes @ 0x2
   297                           	global	___bmul@product
   298  0042                     ___bmul@product:	; 1 bytes @ 0x2
   299  0042                     	ds	1
   300                           	global	___bmul@multiplier
   301  0043                     ___bmul@multiplier:	; 1 bytes @ 0x3
   302  0043                     	ds	1
   303                           	global	??_hour_start_end_init
   304  0044                     ??_hour_start_end_init:	; 0 bytes @ 0x4
   305                           	global	shift_write@i
   306  0044                     shift_write@i:	; 2 bytes @ 0x4
   307  0044                     	ds	2
   308                           	global	shift_write@data
   309  0046                     shift_write@data:	; 1 bytes @ 0x6
   310                           	global	hour_start_end_init@min
   311  0046                     hour_start_end_init@min:	; 1 bytes @ 0x6
   312  0046                     	ds	1
   313                           	global	??_next_segment
   314  0047                     ??_next_segment:	; 0 bytes @ 0x7
   315                           	global	??_application_reset
   316  0047                     ??_application_reset:	; 0 bytes @ 0x7
   317                           	global	hour_start_end_init@i
   318  0047                     hour_start_end_init@i:	; 1 bytes @ 0x7
   319  0047                     	ds	1
   320                           	global	??_init
   321  0048                     ??_init:	; 0 bytes @ 0x8
   322                           	global	??_main
   323  0048                     ??_main:	; 0 bytes @ 0x8
   324  0048                     	ds	1
   325                           	global	main@i
   326  0049                     main@i:	; 1 bytes @ 0x9
   327  0049                     	ds	1
   328 ;;Data sizes: Strings 0, constant 0, data 0, bss 33, persistent 0 stack 0
   329 ;;Auto spaces:   Size  Autos    Used
   330 ;; COMMON          14      9      10
   331 ;; BANK0           80     10      42
   332 ;; BANK1           80      0       0
   333 ;; BANK2           80      0       0
   334                           
   335 ;;
   336 ;; Pointer list with targets:
   337                           
   338                           
   339                           
   340 ;;
   341 ;; Critical Paths under _main in COMMON
   342 ;;
   343 ;;   None.
   344 ;;
   345 ;; Critical Paths under _interrupt_handler in COMMON
   346 ;;
   347 ;;   _interrupt_handler->_sync
   348 ;;   _sync->i1_bit_off
   349 ;;   _sync->i1_bit_on
   350 ;;
   351 ;; Critical Paths under _main in BANK0
   352 ;;
   353 ;;   _main->_next_segment
   354 ;;   _init->_hour_start_end_init
   355 ;;   _application_reset->_shift_write
   356 ;;   _next_segment->_shift_write
   357 ;;   _show_face->_bit_on
   358 ;;   _show_face->_bit_off
   359 ;;   _hour_start_end_init->___bmul
   360 ;;   _shift_write->_bit_off
   361 ;;   _shift_write->_bit_on
   362 ;;
   363 ;; Critical Paths under _interrupt_handler in BANK0
   364 ;;
   365 ;;   None.
   366 ;;
   367 ;; Critical Paths under _main in BANK1
   368 ;;
   369 ;;   None.
   370 ;;
   371 ;; Critical Paths under _interrupt_handler in BANK1
   372 ;;
   373 ;;   None.
   374 ;;
   375 ;; Critical Paths under _main in BANK2
   376 ;;
   377 ;;   None.
   378 ;;
   379 ;; Critical Paths under _interrupt_handler in BANK2
   380 ;;
   381 ;;   None.
   382                           
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   385 ;;
   386                           
   387 ;;
   388 ;;Call Graph Tables:
   389 ;;
   390 ;; ---------------------------------------------------------------------------------
   391 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   392 ;; ---------------------------------------------------------------------------------
   393 ;; (0) _main                                                 2     2      0    1142
   394 ;;                                              8 BANK0      2     2      0
   395 ;;                               _init
   396 ;;                  _application_reset
   397 ;;                             _bit_on
   398 ;;                       _next_segment
   399 ;; ---------------------------------------------------------------------------------
   400 ;; (1) _init                                                 0     0      0     805
   401 ;;                        _shift_write
   402 ;;                _hour_start_end_init
   403 ;; ---------------------------------------------------------------------------------
   404 ;; (1) _application_reset                                    0     0      0     135
   405 ;;                        _shift_write
   406 ;; ---------------------------------------------------------------------------------
   407 ;; (1) _next_segment                                         1     1      0     179
   408 ;;                                              7 BANK0      1     1      0
   409 ;;                          _show_face
   410 ;;                        _shift_write
   411 ;; ---------------------------------------------------------------------------------
   412 ;; (2) _show_face                                            1     1      0      44
   413 ;;                                              2 BANK0      1     1      0
   414 ;;                             _bit_on
   415 ;;                            _bit_off
   416 ;; ---------------------------------------------------------------------------------
   417 ;; (2) _hour_start_end_init                                  4     4      0     670
   418 ;;                                              4 BANK0      4     4      0
   419 ;;                             ___bmul
   420 ;;                        _sixty_start
   421 ;;                         _sixty_stop
   422 ;; ---------------------------------------------------------------------------------
   423 ;; (2) _shift_write                                          5     5      0     135
   424 ;;                                              2 BANK0      5     5      0
   425 ;;                            _bit_off
   426 ;;                             _bit_on
   427 ;; ---------------------------------------------------------------------------------
   428 ;; (3) ___bmul                                               4     3      1      92
   429 ;;                                              0 BANK0      4     3      1
   430 ;; ---------------------------------------------------------------------------------
   431 ;; (3) _sixty_stop                                           3     3      0     177
   432 ;;                                              0 BANK0      3     3      0
   433 ;; ---------------------------------------------------------------------------------
   434 ;; (3) _sixty_start                                          3     3      0     199
   435 ;;                                              0 BANK0      3     3      0
   436 ;; ---------------------------------------------------------------------------------
   437 ;; (3) _bit_off                                              2     2      0      22
   438 ;;                                              0 BANK0      2     2      0
   439 ;; ---------------------------------------------------------------------------------
   440 ;; (3) _bit_on                                               2     2      0      22
   441 ;;                                              0 BANK0      2     2      0
   442 ;; ---------------------------------------------------------------------------------
   443 ;; Estimated maximum stack depth 3
   444 ;; ---------------------------------------------------------------------------------
   445 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   446 ;; ---------------------------------------------------------------------------------
   447 ;; (4) _interrupt_handler                                    4     4      0     146
   448 ;;                                              5 COMMON     4     4      0
   449 ;;                               _sync
   450 ;; ---------------------------------------------------------------------------------
   451 ;; (5) _sync                                                 3     3      0     146
   452 ;;                                              2 COMMON     3     3      0
   453 ;;                          i1_bit_off
   454 ;;                           i1_bit_on
   455 ;; ---------------------------------------------------------------------------------
   456 ;; (6) i1_bit_off                                            2     2      0      73
   457 ;;                                              0 COMMON     2     2      0
   458 ;; ---------------------------------------------------------------------------------
   459 ;; (6) i1_bit_on                                             2     2      0      73
   460 ;;                                              0 COMMON     2     2      0
   461 ;; ---------------------------------------------------------------------------------
   462 ;; Estimated maximum stack depth 6
   463 ;; ---------------------------------------------------------------------------------
   464                           
   465 ;; Call Graph Graphs:
   466                           
   467 ;; _main (ROOT)
   468 ;;   _init
   469 ;;     _shift_write
   470 ;;       _bit_off
   471 ;;       _bit_on
   472 ;;     _hour_start_end_init
   473 ;;       ___bmul
   474 ;;       _sixty_start
   475 ;;       _sixty_stop
   476 ;;   _application_reset
   477 ;;     _shift_write
   478 ;;       _bit_off
   479 ;;       _bit_on
   480 ;;   _bit_on
   481 ;;   _next_segment
   482 ;;     _show_face
   483 ;;       _bit_on
   484 ;;       _bit_off
   485 ;;     _shift_write
   486 ;;       _bit_off
   487 ;;       _bit_on
   488 ;;
   489 ;; _interrupt_handler (ROOT)
   490 ;;   _sync
   491 ;;     i1_bit_off
   492 ;;     i1_bit_on
   493 ;;
   494                           
   495 ;; Address spaces:
   496                           
   497 ;;Name               Size   Autos  Total    Cost      Usage
   498 ;;BITCOMMON            E      0       0       0        0.0%
   499 ;;EEDATA             100      0       0       0        0.0%
   500 ;;NULL                 0      0       0       0        0.0%
   501 ;;CODE                 0      0       0       0        0.0%
   502 ;;COMMON               E      9       A       1       71.4%
   503 ;;BITSFR0              0      0       0       1        0.0%
   504 ;;SFR0                 0      0       0       1        0.0%
   505 ;;BITSFR1              0      0       0       2        0.0%
   506 ;;SFR1                 0      0       0       2        0.0%
   507 ;;STACK                0      0       9       2        0.0%
   508 ;;BANK0               50      A      2A       3       52.5%
   509 ;;BITBANK1            50      0       0       4        0.0%
   510 ;;BITSFR3              0      0       0       4        0.0%
   511 ;;SFR3                 0      0       0       4        0.0%
   512 ;;BANK1               50      0       0       5        0.0%
   513 ;;BITSFR2              0      0       0       5        0.0%
   514 ;;SFR2                 0      0       0       5        0.0%
   515 ;;BITBANK2            50      0       0       6        0.0%
   516 ;;BANK2               50      0       0       7        0.0%
   517 ;;ABS                  0      0      34       8        0.0%
   518 ;;BITBANK0            50      0       0       9        0.0%
   519 ;;DATA                 0      0      3D      10        0.0%
   520                           
   521                           	global	_main
   522                           psect	maintext,global,class=CODE,delta=2
   523                           global __pmaintext
   524  0158                     __pmaintext:
   525                           
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 403 in file "main.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;  i               1    9[BANK0 ] unsigned char 
   533 ;; Return value:  Size  Location     Type
   534 ;;		None               void
   535 ;; Registers used:
   536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 17F/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   542 ;;      Params:         0       0       0       0
   543 ;;      Locals:         0       1       0       0
   544 ;;      Temps:          0       1       0       0
   545 ;;      Totals:         0       2       0       0
   546 ;;Total ram usage:        2 bytes
   547 ;; Hardware stack levels required when called:    6
   548 ;; This function calls:
   549 ;;		_init
   550 ;;		_application_reset
   551 ;;		_bit_on
   552 ;;		_next_segment
   553 ;; This function is called by:
   554 ;;		Startup code after reset
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           psect	maintext
   558                           	file	"main.c"
   559                           	line	403
   560                           	global	__size_of_main
   561  0043                     	__size_of_main	equ	__end_of_main-_main
   562                           	
   563  0158                     _main:	
   564                           	opt	stack 2
   565                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   566                           	line	405
   567                           	
   568  0158                     l2945:	
   569                           ;main.c: 405: init();
   570  0158  219B               	fcall	_init
   571                           	line	406
   572                           	
   573  0159                     l2947:	
   574                           ;main.c: 406: application_reset();
   575  0159  229D               	fcall	_application_reset
   576                           	line	408
   577                           	
   578  015A                     l2949:	
   579                           ;main.c: 408: uns8 i = 0;
   580  015A  1283               	bcf	status, 5	;RP0=0, select bank0
   581  015B  1303               	bcf	status, 6	;RP1=0, select bank0
   582  015C  01C9               	clrf	(main@i)
   583                           	line	411
   584                           	
   585  015D                     l2951:	
   586                           ;main.c: 411: bit_on(0x02);
   587  015D  3002               	movlw	(02h)
   588  015E  22B8               	fcall	_bit_on
   589  015F  2960               	goto	l2953
   590                           	line	413
   591                           ;main.c: 413: while(1) {
   592                           	
   593  0160                     l557:	
   594                           	line	414
   595                           	
   596  0160                     l2953:	
   597                           ;main.c: 414: if (TMR0IF) {
   598  0160  1D0B               	btfss	(90/8),(90)&7
   599  0161  2963               	goto	u2951
   600  0162  2964               	goto	u2950
   601  0163                     u2951:
   602  0163  2982               	goto	l2969
   603  0164                     u2950:
   604                           	line	415
   605                           	
   606  0164                     l2955:	
   607                           ;main.c: 415: if (state == 2) {
   608  0164  1283               	bcf	status, 5	;RP0=0, select bank0
   609  0165  1303               	bcf	status, 6	;RP1=0, select bank0
   610  0166  083D               	movf	(_state),w
   611  0167  3A02               	xorlw	02h
   612  0168  1D03               	skipz
   613  0169  296B               	goto	u2961
   614  016A  296C               	goto	u2960
   615  016B                     u2961:
   616  016B  2980               	goto	l2967
   617  016C                     u2960:
   618                           	line	417
   619                           	
   620  016C                     l2957:	
   621                           ;main.c: 417: if (tmr0_counter == seg_ticks_h) {
   622  016C  083E               	movf	(_tmr0_counter),w
   623  016D  063B               	xorwf	(_seg_ticks_h),w
   624  016E  1D03               	skipz
   625  016F  2971               	goto	u2971
   626  0170  2972               	goto	u2970
   627  0171                     u2971:
   628  0171  2978               	goto	l2965
   629  0172                     u2970:
   630                           	line	418
   631                           	
   632  0172                     l2959:	
   633                           ;main.c: 418: tmr0_counter = 0;
   634  0172  01BE               	clrf	(_tmr0_counter)
   635                           	line	419
   636                           	
   637  0173                     l2961:	
   638                           ;main.c: 419: TMR0 = 256 - seg_ticks_l;
   639  0173  033C               	decf	(_seg_ticks_l),w
   640  0174  3AFF               	xorlw	0ffh
   641  0175  0081               	movwf	(1)
   642                           	line	420
   643                           	
   644  0176                     l2963:	
   645                           ;main.c: 420: next_segment();
   646  0176  20C5               	fcall	_next_segment
   647                           	line	421
   648                           ;main.c: 421: } else {
   649  0177  2980               	goto	l2967
   650                           	
   651  0178                     l560:	
   652                           	line	422
   653                           	
   654  0178                     l2965:	
   655                           ;main.c: 422: tmr0_counter++;
   656  0178  3001               	movlw	(01h)
   657  0179  1283               	bcf	status, 5	;RP0=0, select bank0
   658  017A  1303               	bcf	status, 6	;RP1=0, select bank0
   659  017B  00C8               	movwf	(??_main+0)+0
   660  017C  0848               	movf	(??_main+0)+0,w
   661  017D  07BE               	addwf	(_tmr0_counter),f
   662  017E  2980               	goto	l2967
   663                           	line	423
   664                           	
   665  017F                     l561:	
   666  017F  2980               	goto	l2967
   667                           	line	424
   668                           	
   669  0180                     l559:	
   670                           	line	425
   671                           	
   672  0180                     l2967:	
   673                           ;main.c: 423: }
   674                           ;main.c: 424: }
   675                           ;main.c: 425: TMR0IF = 0;
   676  0180  110B               	bcf	(90/8),(90)&7
   677  0181  2982               	goto	l2969
   678                           	line	426
   679                           	
   680  0182                     l558:	
   681                           	line	429
   682                           	
   683  0182                     l2969:	
   684                           ;main.c: 426: }
   685                           ;main.c: 429: if (TMR1IF) {
   686  0182  1283               	bcf	status, 5	;RP0=0, select bank0
   687  0183  1303               	bcf	status, 6	;RP1=0, select bank0
   688  0184  1C0C               	btfss	(96/8),(96)&7
   689  0185  2987               	goto	u2981
   690  0186  2988               	goto	u2980
   691  0187                     u2981:
   692  0187  2960               	goto	l2953
   693  0188                     u2980:
   694                           	line	430
   695                           	
   696  0188                     l2971:	
   697                           ;main.c: 430: tmr1_counter++;
   698  0188  3001               	movlw	(01h)
   699  0189  00C8               	movwf	(??_main+0)+0
   700  018A  0848               	movf	(??_main+0)+0,w
   701  018B  07BF               	addwf	(_tmr1_counter),f
   702                           	line	433
   703                           	
   704  018C                     l2973:	
   705                           ;main.c: 433: if (tmr1_counter >= 40) {
   706  018C  3028               	movlw	(028h)
   707  018D  023F               	subwf	(_tmr1_counter),w
   708  018E  1C03               	skipc
   709  018F  2991               	goto	u2991
   710  0190  2992               	goto	u2990
   711  0191                     u2991:
   712  0191  2994               	goto	l2977
   713  0192                     u2990:
   714                           	line	434
   715                           	
   716  0192                     l2975:	
   717                           ;main.c: 434: application_reset();
   718  0192  229D               	fcall	_application_reset
   719  0193  2994               	goto	l2977
   720                           	line	435
   721                           	
   722  0194                     l563:	
   723                           	line	436
   724                           	
   725  0194                     l2977:	
   726                           ;main.c: 435: }
   727                           ;main.c: 436: TMR1IF = 0;
   728  0194  1283               	bcf	status, 5	;RP0=0, select bank0
   729  0195  1303               	bcf	status, 6	;RP1=0, select bank0
   730  0196  100C               	bcf	(96/8),(96)&7
   731  0197  2960               	goto	l2953
   732                           	line	437
   733                           	
   734  0198                     l562:	
   735  0198  2960               	goto	l2953
   736                           	line	440
   737                           	
   738  0199                     l564:	
   739                           	line	413
   740  0199  2960               	goto	l2953
   741                           	
   742  019A                     l565:	
   743                           	line	441
   744                           	
   745  019A                     l566:	
   746                           	global	start
   747  019A  2810               	ljmp	start
   748                           	opt stack 0
   749                           GLOBAL	__end_of_main
   750  019B                     	__end_of_main:
   751 ;; =============== function _main ends ============
   752                           
   753                           	signat	_main,88
   754                           	global	_init
   755                           psect	text369,local,class=CODE,delta=2
   756                           global __ptext369
   757  019B                     __ptext369:
   758                           
   759 ;; *************** function _init *****************
   760 ;; Defined at:
   761 ;;		line 346 in file "main.c"
   762 ;; Parameters:    Size  Location     Type
   763 ;;		None
   764 ;; Auto vars:     Size  Location     Type
   765 ;;		None
   766 ;; Return value:  Size  Location     Type
   767 ;;		None               void
   768 ;; Registers used:
   769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   770 ;; Tracked objects:
   771 ;;		On entry : 0/0
   772 ;;		On exit  : 0/0
   773 ;;		Unchanged: 0/0
   774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   775 ;;      Params:         0       0       0       0
   776 ;;      Locals:         0       0       0       0
   777 ;;      Temps:          0       0       0       0
   778 ;;      Totals:         0       0       0       0
   779 ;;Total ram usage:        0 bytes
   780 ;; Hardware stack levels used:    1
   781 ;; Hardware stack levels required when called:    5
   782 ;; This function calls:
   783 ;;		_shift_write
   784 ;;		_hour_start_end_init
   785 ;; This function is called by:
   786 ;;		_main
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           psect	text369
   790                           	file	"main.c"
   791                           	line	346
   792                           	global	__size_of_init
   793  0034                     	__size_of_init	equ	__end_of_init-_init
   794                           	
   795  019B                     _init:	
   796                           	opt	stack 2
   797                           ; Regs used in _init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   798                           	line	349
   799                           	
   800  019B                     l2901:	
   801                           ;main.c: 349: TRISA = 0;
   802  019B  1683               	bsf	status, 5	;RP0=1, select bank1
   803  019C  1303               	bcf	status, 6	;RP1=0, select bank1
   804  019D  0185               	clrf	(133)^080h	;volatile
   805                           	line	350
   806                           ;main.c: 350: ADCON1 = 0;
   807  019E  019F               	clrf	(159)^080h	;volatile
   808                           	line	351
   809                           	
   810  019F                     l2903:	
   811                           # 351 "main.c"
   812  019F  0000               nop ;#
   813                           psect	text369
   814                           	line	352
   815                           ;main.c: 352: PORTA = 0x00;
   816  01A0  1283               	bcf	status, 5	;RP0=0, select bank0
   817  01A1  1303               	bcf	status, 6	;RP1=0, select bank0
   818  01A2  0185               	clrf	(5)	;volatile
   819                           	line	353
   820                           	
   821  01A3                     l2905:	
   822                           ;main.c: 353: a_latch = 0x00;
   823  01A3  01BA               	clrf	(_a_latch)
   824                           	line	354
   825                           	
   826  01A4                     l2907:	
   827                           # 354 "main.c"
   828  01A4  0000               nop ;#
   829                           psect	text369
   830                           	line	357
   831                           	
   832  01A5                     l2909:	
   833                           ;main.c: 357: TRISB = 0xFF;
   834  01A5  30FF               	movlw	(0FFh)
   835  01A6  1683               	bsf	status, 5	;RP0=1, select bank1
   836  01A7  1303               	bcf	status, 6	;RP1=0, select bank1
   837  01A8  0086               	movwf	(134)^080h	;volatile
   838                           	line	361
   839                           	
   840  01A9                     l2911:	
   841                           ;main.c: 361: shift_write(0x05);
   842  01A9  3005               	movlw	(05h)
   843  01AA  2077               	fcall	_shift_write
   844                           	line	363
   845                           	
   846  01AB                     l2913:	
   847                           ;main.c: 363: OSCCONbits.IRCF2 = 1;
   848  01AB  1683               	bsf	status, 5	;RP0=1, select bank1
   849  01AC  1303               	bcf	status, 6	;RP1=0, select bank1
   850  01AD  170F               	bsf	(143)^080h,6	;volatile
   851                           	line	364
   852                           	
   853  01AE                     l2915:	
   854                           ;main.c: 364: OSCCONbits.IRCF1 = 1;
   855  01AE  168F               	bsf	(143)^080h,5	;volatile
   856                           	line	365
   857                           	
   858  01AF                     l2917:	
   859                           ;main.c: 365: OSCCONbits.IRCF0 = 1;
   860  01AF  160F               	bsf	(143)^080h,4	;volatile
   861                           	line	367
   862                           ;main.c: 367: while(!IOFS) {
   863  01B0  29B1               	goto	l551
   864                           	
   865  01B1                     l552:	
   866                           	line	369
   867                           ;main.c: 368: ;
   868                           	
   869  01B1                     l551:	
   870                           	line	367
   871  01B1  1D0F               	btfss	(1146/8)^080h,(1146)&7
   872  01B2  29B4               	goto	u2941
   873  01B3  29B5               	goto	u2940
   874  01B4                     u2941:
   875  01B4  29B1               	goto	l551
   876  01B5                     u2940:
   877  01B5  29B6               	goto	l2919
   878                           	
   879  01B6                     l553:	
   880                           	line	370
   881                           	
   882  01B6                     l2919:	
   883                           ;main.c: 369: }
   884                           ;main.c: 370: shift_write(0x02);
   885  01B6  3002               	movlw	(02h)
   886  01B7  2077               	fcall	_shift_write
   887                           	line	373
   888                           	
   889  01B8                     l2921:	
   890                           ;main.c: 373: hour_start_end_init();
   891  01B8  2111               	fcall	_hour_start_end_init
   892                           	line	385
   893                           	
   894  01B9                     l2923:	
   895                           ;main.c: 385: TMR1IF = 0;
   896  01B9  1283               	bcf	status, 5	;RP0=0, select bank0
   897  01BA  1303               	bcf	status, 6	;RP1=0, select bank0
   898  01BB  100C               	bcf	(96/8),(96)&7
   899                           	line	386
   900                           	
   901  01BC                     l2925:	
   902                           ;main.c: 386: TMR1IE = 0;
   903  01BC  1683               	bsf	status, 5	;RP0=1, select bank1
   904  01BD  1303               	bcf	status, 6	;RP1=0, select bank1
   905  01BE  100C               	bcf	(1120/8)^080h,(1120)&7
   906                           	line	387
   907                           	
   908  01BF                     l2927:	
   909                           ;main.c: 387: T1CON = 0;
   910  01BF  1283               	bcf	status, 5	;RP0=0, select bank0
   911  01C0  1303               	bcf	status, 6	;RP1=0, select bank0
   912  01C1  0190               	clrf	(16)	;volatile
   913                           	line	388
   914                           	
   915  01C2                     l2929:	
   916                           ;main.c: 388: TMR1ON = 1;
   917  01C2  1410               	bsf	(128/8),(128)&7
   918                           	line	390
   919                           	
   920  01C3                     l2931:	
   921                           ;main.c: 390: TMR0IF = 0;
   922  01C3  110B               	bcf	(90/8),(90)&7
   923                           	line	391
   924                           	
   925  01C4                     l2933:	
   926                           ;main.c: 391: TMR0IE = 0;
   927  01C4  128B               	bcf	(93/8),(93)&7
   928                           	line	392
   929                           	
   930  01C5                     l2935:	
   931                           ;main.c: 392: T0CS = 0;
   932  01C5  1683               	bsf	status, 5	;RP0=1, select bank1
   933  01C6  1303               	bcf	status, 6	;RP1=0, select bank1
   934  01C7  1281               	bcf	(1037/8)^080h,(1037)&7
   935                           	line	393
   936                           	
   937  01C8                     l2937:	
   938                           ;main.c: 393: state = 0;
   939  01C8  1283               	bcf	status, 5	;RP0=0, select bank0
   940  01C9  1303               	bcf	status, 6	;RP1=0, select bank0
   941  01CA  01BD               	clrf	(_state)
   942                           	line	396
   943                           	
   944  01CB                     l2939:	
   945                           ;main.c: 396: RBIE = 1;
   946  01CB  158B               	bsf	(91/8),(91)&7
   947                           	line	398
   948                           	
   949  01CC                     l2941:	
   950                           ;main.c: 398: PEIE = 1;
   951  01CC  170B               	bsf	(94/8),(94)&7
   952                           	line	399
   953                           	
   954  01CD                     l2943:	
   955                           ;main.c: 399: GIE = 1;
   956  01CD  178B               	bsf	(95/8),(95)&7
   957                           	line	400
   958                           	
   959  01CE                     l554:	
   960  01CE  0008               	return
   961                           	opt stack 0
   962                           GLOBAL	__end_of_init
   963  01CF                     	__end_of_init:
   964 ;; =============== function _init ends ============
   965                           
   966                           	signat	_init,88
   967                           	global	_application_reset
   968                           psect	text370,local,class=CODE,delta=2
   969                           global __ptext370
   970  029D                     __ptext370:
   971                           
   972 ;; *************** function _application_reset *****************
   973 ;; Defined at:
   974 ;;		line 299 in file "main.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;		None
   977 ;; Auto vars:     Size  Location     Type
   978 ;;		None
   979 ;; Return value:  Size  Location     Type
   980 ;;		None               void
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   988 ;;      Params:         0       0       0       0
   989 ;;      Locals:         0       0       0       0
   990 ;;      Temps:          0       0       0       0
   991 ;;      Totals:         0       0       0       0
   992 ;;Total ram usage:        0 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    5
   995 ;; This function calls:
   996 ;;		_shift_write
   997 ;; This function is called by:
   998 ;;		_main
   999 ;; This function uses a non-reentrant model
  1000 ;;
  1001                           psect	text370
  1002                           	file	"main.c"
  1003                           	line	299
  1004                           	global	__size_of_application_reset
  1005  0011                     	__size_of_application_reset	equ	__end_of_application_reset-_application_reset
  1006                           	
  1007  029D                     _application_reset:	
  1008                           	opt	stack 2
  1009                           ; Regs used in _application_reset: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1010                           	line	300
  1011                           	
  1012  029D                     l2879:	
  1013                           ;main.c: 300: state = 0;
  1014  029D  1283               	bcf	status, 5	;RP0=0, select bank0
  1015  029E  1303               	bcf	status, 6	;RP1=0, select bank0
  1016  029F  01BD               	clrf	(_state)
  1017                           	line	301
  1018                           	
  1019  02A0                     l2881:	
  1020                           ;main.c: 301: shift_write(0x5A);
  1021  02A0  305A               	movlw	(05Ah)
  1022  02A1  2077               	fcall	_shift_write
  1023                           	line	302
  1024                           	
  1025  02A2                     l2883:	
  1026                           ;main.c: 302: segment.raw = 0;
  1027  02A2  1283               	bcf	status, 5	;RP0=0, select bank0
  1028  02A3  1303               	bcf	status, 6	;RP1=0, select bank0
  1029  02A4  01B8               	clrf	(_segment)
  1030                           	line	303
  1031                           	
  1032  02A5                     l2885:	
  1033                           ;main.c: 303: segment.hrl = 0;
  1034  02A5  01B9               	clrf	0+(_segment)+01h
  1035                           	line	304
  1036                           	
  1037  02A6                     l2887:	
  1038                           ;main.c: 304: tmr1_counter = 0;
  1039  02A6  01BF               	clrf	(_tmr1_counter)
  1040                           	line	305
  1041                           	
  1042  02A7                     l2889:	
  1043                           ;main.c: 305: tmr0_counter = 0;
  1044  02A7  01BE               	clrf	(_tmr0_counter)
  1045                           	line	308
  1046                           	
  1047  02A8                     l2891:	
  1048                           ;main.c: 308: TMR0 = 0;
  1049  02A8  0181               	clrf	(1)	;volatile
  1050                           	line	309
  1051                           	
  1052  02A9                     l2893:	
  1053                           ;main.c: 309: TMR1L = 0;
  1054  02A9  018E               	clrf	(14)	;volatile
  1055                           	line	310
  1056                           	
  1057  02AA                     l2895:	
  1058                           ;main.c: 310: TMR1H = 0;
  1059  02AA  018F               	clrf	(15)	;volatile
  1060                           	line	313
  1061                           	
  1062  02AB                     l2897:	
  1063                           ;main.c: 313: TMR0IF = 0;
  1064  02AB  110B               	bcf	(90/8),(90)&7
  1065                           	line	314
  1066                           	
  1067  02AC                     l2899:	
  1068                           ;main.c: 314: TMR1IF = 0;
  1069  02AC  100C               	bcf	(96/8),(96)&7
  1070                           	line	315
  1071                           	
  1072  02AD                     l536:	
  1073  02AD  0008               	return
  1074                           	opt stack 0
  1075                           GLOBAL	__end_of_application_reset
  1076  02AE                     	__end_of_application_reset:
  1077 ;; =============== function _application_reset ends ============
  1078                           
  1079                           	signat	_application_reset,88
  1080                           	global	_next_segment
  1081                           psect	text371,local,class=CODE,delta=2
  1082                           global __ptext371
  1083  00C5                     __ptext371:
  1084                           
  1085 ;; *************** function _next_segment *****************
  1086 ;; Defined at:
  1087 ;;		line 206 in file "main.c"
  1088 ;; Parameters:    Size  Location     Type
  1089 ;;		None
  1090 ;; Auto vars:     Size  Location     Type
  1091 ;;		None
  1092 ;; Return value:  Size  Location     Type
  1093 ;;		None               void
  1094 ;; Registers used:
  1095 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1096 ;; Tracked objects:
  1097 ;;		On entry : 0/0
  1098 ;;		On exit  : 0/0
  1099 ;;		Unchanged: 0/0
  1100 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1101 ;;      Params:         0       0       0       0
  1102 ;;      Locals:         0       0       0       0
  1103 ;;      Temps:          0       1       0       0
  1104 ;;      Totals:         0       1       0       0
  1105 ;;Total ram usage:        1 bytes
  1106 ;; Hardware stack levels used:    1
  1107 ;; Hardware stack levels required when called:    5
  1108 ;; This function calls:
  1109 ;;		_show_face
  1110 ;;		_shift_write
  1111 ;; This function is called by:
  1112 ;;		_main
  1113 ;; This function uses a non-reentrant model
  1114 ;;
  1115                           psect	text371
  1116                           	file	"main.c"
  1117                           	line	206
  1118                           	global	__size_of_next_segment
  1119  004C                     	__size_of_next_segment	equ	__end_of_next_segment-_next_segment
  1120                           	
  1121  00C5                     _next_segment:	
  1122                           	opt	stack 2
  1123                           ; Regs used in _next_segment: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1124                           	line	207
  1125                           	
  1126  00C5                     l2845:	
  1127                           ;main.c: 207: GIE = 0;
  1128  00C5  138B               	bcf	(95/8),(95)&7
  1129                           	line	209
  1130                           	
  1131  00C6                     l2847:	
  1132                           ;main.c: 209: if (segment.raw > 128)
  1133  00C6  3081               	movlw	(081h)
  1134  00C7  1283               	bcf	status, 5	;RP0=0, select bank0
  1135  00C8  1303               	bcf	status, 6	;RP1=0, select bank0
  1136  00C9  0238               	subwf	(_segment),w
  1137  00CA  1C03               	skipc
  1138  00CB  28CD               	goto	u2881
  1139  00CC  28CE               	goto	u2880
  1140  00CD                     u2881:
  1141  00CD  28D0               	goto	l2851
  1142  00CE                     u2880:
  1143  00CE  290E               	goto	l2875
  1144                           	line	210
  1145                           	
  1146  00CF                     l2849:	
  1147                           ;main.c: 210: goto ns_end;
  1148  00CF  290E               	goto	l2875
  1149                           	
  1150  00D0                     l515:	
  1151                           	line	212
  1152                           	
  1153  00D0                     l2851:	
  1154                           ;main.c: 212: show_face();
  1155  00D0  2202               	fcall	_show_face
  1156                           	line	215
  1157                           	
  1158  00D1                     l2853:	
  1159                           ;main.c: 215: if (segment.raw == 0x80) {
  1160  00D1  1283               	bcf	status, 5	;RP0=0, select bank0
  1161  00D2  1303               	bcf	status, 6	;RP1=0, select bank0
  1162  00D3  0838               	movf	(_segment),w
  1163  00D4  3A80               	xorlw	080h
  1164  00D5  1D03               	skipz
  1165  00D6  28D8               	goto	u2891
  1166  00D7  28D9               	goto	u2890
  1167  00D8                     u2891:
  1168  00D8  28DC               	goto	l2857
  1169  00D9                     u2890:
  1170                           	line	216
  1171                           	
  1172  00D9                     l2855:	
  1173                           ;main.c: 216: shift_write(0x00);
  1174  00D9  3000               	movlw	(0)
  1175  00DA  2077               	fcall	_shift_write
  1176  00DB  28DC               	goto	l2857
  1177                           	line	217
  1178                           	
  1179  00DC                     l517:	
  1180                           	line	218
  1181                           	
  1182  00DC                     l2857:	
  1183                           ;main.c: 217: }
  1184                           ;main.c: 218: if (segment.raw == 0x00)
  1185  00DC  1283               	bcf	status, 5	;RP0=0, select bank0
  1186  00DD  1303               	bcf	status, 6	;RP1=0, select bank0
  1187  00DE  08B8               	movf	(_segment),f
  1188  00DF  1D03               	skipz
  1189  00E0  28E2               	goto	u2901
  1190  00E1  28E3               	goto	u2900
  1191  00E2                     u2901:
  1192  00E2  28E6               	goto	l2861
  1193  00E3                     u2900:
  1194                           	line	219
  1195                           	
  1196  00E3                     l2859:	
  1197                           ;main.c: 219: shift_write(0x10);
  1198  00E3  3010               	movlw	(010h)
  1199  00E4  2077               	fcall	_shift_write
  1200  00E5  28E6               	goto	l2861
  1201                           	
  1202  00E6                     l518:	
  1203                           	line	220
  1204                           	
  1205  00E6                     l2861:	
  1206                           ;main.c: 220: if (segment.raw == 0x20)
  1207  00E6  1283               	bcf	status, 5	;RP0=0, select bank0
  1208  00E7  1303               	bcf	status, 6	;RP1=0, select bank0
  1209  00E8  0838               	movf	(_segment),w
  1210  00E9  3A20               	xorlw	020h
  1211  00EA  1D03               	skipz
  1212  00EB  28ED               	goto	u2911
  1213  00EC  28EE               	goto	u2910
  1214  00ED                     u2911:
  1215  00ED  28F1               	goto	l2865
  1216  00EE                     u2910:
  1217                           	line	221
  1218                           	
  1219  00EE                     l2863:	
  1220                           ;main.c: 221: shift_write(0x20);
  1221  00EE  3020               	movlw	(020h)
  1222  00EF  2077               	fcall	_shift_write
  1223  00F0  28F1               	goto	l2865
  1224                           	
  1225  00F1                     l519:	
  1226                           	line	222
  1227                           	
  1228  00F1                     l2865:	
  1229                           ;main.c: 222: if (segment.raw == 0x40)
  1230  00F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1231  00F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1232  00F3  0838               	movf	(_segment),w
  1233  00F4  3A40               	xorlw	040h
  1234  00F5  1D03               	skipz
  1235  00F6  28F8               	goto	u2921
  1236  00F7  28F9               	goto	u2920
  1237  00F8                     u2921:
  1238  00F8  28FC               	goto	l2869
  1239  00F9                     u2920:
  1240                           	line	223
  1241                           	
  1242  00F9                     l2867:	
  1243                           ;main.c: 223: shift_write(0x40);
  1244  00F9  3040               	movlw	(040h)
  1245  00FA  2077               	fcall	_shift_write
  1246  00FB  28FC               	goto	l2869
  1247                           	
  1248  00FC                     l520:	
  1249                           	line	224
  1250                           	
  1251  00FC                     l2869:	
  1252                           ;main.c: 224: if (segment.raw == 0x60)
  1253  00FC  1283               	bcf	status, 5	;RP0=0, select bank0
  1254  00FD  1303               	bcf	status, 6	;RP1=0, select bank0
  1255  00FE  0838               	movf	(_segment),w
  1256  00FF  3A60               	xorlw	060h
  1257  0100  1D03               	skipz
  1258  0101  2903               	goto	u2931
  1259  0102  2904               	goto	u2930
  1260  0103                     u2931:
  1261  0103  2907               	goto	l2873
  1262  0104                     u2930:
  1263                           	line	225
  1264                           	
  1265  0104                     l2871:	
  1266                           ;main.c: 225: shift_write(0x80);
  1267  0104  3080               	movlw	(080h)
  1268  0105  2077               	fcall	_shift_write
  1269  0106  2907               	goto	l2873
  1270                           	
  1271  0107                     l521:	
  1272                           	line	227
  1273                           	
  1274  0107                     l2873:	
  1275                           ;main.c: 227: segment.raw++;
  1276  0107  3001               	movlw	(01h)
  1277  0108  1283               	bcf	status, 5	;RP0=0, select bank0
  1278  0109  1303               	bcf	status, 6	;RP1=0, select bank0
  1279  010A  00C7               	movwf	(??_next_segment+0)+0
  1280  010B  0847               	movf	(??_next_segment+0)+0,w
  1281  010C  07B8               	addwf	(_segment),f
  1282  010D  290E               	goto	l2875
  1283                           	line	229
  1284                           ;main.c: 229: ns_end:
  1285                           	
  1286  010E                     l516:	
  1287                           	line	230
  1288                           	
  1289  010E                     l2875:	
  1290                           ;main.c: 230: GIE = 1;
  1291  010E  178B               	bsf	(95/8),(95)&7
  1292  010F  2910               	goto	l522
  1293                           	line	231
  1294                           	
  1295  0110                     l2877:	
  1296                           	line	232
  1297                           ;main.c: 231: return;
  1298                           	
  1299  0110                     l522:	
  1300  0110  0008               	return
  1301                           	opt stack 0
  1302                           GLOBAL	__end_of_next_segment
  1303  0111                     	__end_of_next_segment:
  1304 ;; =============== function _next_segment ends ============
  1305                           
  1306                           	signat	_next_segment,88
  1307                           	global	_show_face
  1308                           psect	text372,local,class=CODE,delta=2
  1309                           global __ptext372
  1310  0202                     __ptext372:
  1311                           
  1312 ;; *************** function _show_face *****************
  1313 ;; Defined at:
  1314 ;;		line 193 in file "main.c"
  1315 ;; Parameters:    Size  Location     Type
  1316 ;;		None
  1317 ;; Auto vars:     Size  Location     Type
  1318 ;;		None
  1319 ;; Return value:  Size  Location     Type
  1320 ;;		None               void
  1321 ;; Registers used:
  1322 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1323 ;; Tracked objects:
  1324 ;;		On entry : 0/0
  1325 ;;		On exit  : 0/0
  1326 ;;		Unchanged: 0/0
  1327 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1328 ;;      Params:         0       0       0       0
  1329 ;;      Locals:         0       0       0       0
  1330 ;;      Temps:          0       1       0       0
  1331 ;;      Totals:         0       1       0       0
  1332 ;;Total ram usage:        1 bytes
  1333 ;; Hardware stack levels used:    1
  1334 ;; Hardware stack levels required when called:    4
  1335 ;; This function calls:
  1336 ;;		_bit_on
  1337 ;;		_bit_off
  1338 ;; This function is called by:
  1339 ;;		_next_segment
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           psect	text372
  1343                           	file	"main.c"
  1344                           	line	193
  1345                           	global	__size_of_show_face
  1346  002E                     	__size_of_show_face	equ	__end_of_show_face-_show_face
  1347                           	
  1348  0202                     _show_face:	
  1349                           	opt	stack 2
  1350                           ; Regs used in _show_face: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1351                           	line	194
  1352                           	
  1353  0202                     l2831:	
  1354                           ;main.c: 194: if (segment.hrl >= 12)
  1355  0202  300C               	movlw	(0Ch)
  1356  0203  1283               	bcf	status, 5	;RP0=0, select bank0
  1357  0204  1303               	bcf	status, 6	;RP1=0, select bank0
  1358  0205  0239               	subwf	0+(_segment)+01h,w
  1359  0206  1C03               	skipc
  1360  0207  2A09               	goto	u2851
  1361  0208  2A0A               	goto	u2850
  1362  0209                     u2851:
  1363  0209  2A0C               	goto	l2835
  1364  020A                     u2850:
  1365  020A  2A2F               	goto	l509
  1366                           	line	195
  1367                           	
  1368  020B                     l2833:	
  1369                           ;main.c: 195: return;
  1370  020B  2A2F               	goto	l509
  1371                           	
  1372  020C                     l508:	
  1373                           	line	196
  1374                           	
  1375  020C                     l2835:	
  1376                           ;main.c: 196: if (hour_start[segment.hrl] == segment.raw)
  1377  020C  0839               	movf	0+(_segment)+01h,w
  1378  020D  3E2C               	addlw	_hour_start&0ffh
  1379  020E  0084               	movwf	fsr0
  1380  020F  1383               	bcf	status, 7	;select IRP bank0
  1381  0210  0800               	movf	indf,w
  1382  0211  0638               	xorwf	(_segment),w
  1383  0212  1D03               	skipz
  1384  0213  2A15               	goto	u2861
  1385  0214  2A16               	goto	u2860
  1386  0215                     u2861:
  1387  0215  2A19               	goto	l2839
  1388  0216                     u2860:
  1389                           	line	197
  1390                           	
  1391  0216                     l2837:	
  1392                           ;main.c: 197: bit_on(0x02);
  1393  0216  3002               	movlw	(02h)
  1394  0217  22B8               	fcall	_bit_on
  1395  0218  2A2F               	goto	l509
  1396                           	line	198
  1397                           	
  1398  0219                     l510:	
  1399                           	
  1400  0219                     l2839:	
  1401                           ;main.c: 198: else if (hour_end[segment.hrl] == segment.raw){
  1402  0219  1283               	bcf	status, 5	;RP0=0, select bank0
  1403  021A  1303               	bcf	status, 6	;RP1=0, select bank0
  1404  021B  0839               	movf	0+(_segment)+01h,w
  1405  021C  3E20               	addlw	_hour_end&0ffh
  1406  021D  0084               	movwf	fsr0
  1407  021E  1383               	bcf	status, 7	;select IRP bank0
  1408  021F  0800               	movf	indf,w
  1409  0220  0638               	xorwf	(_segment),w
  1410  0221  1D03               	skipz
  1411  0222  2A24               	goto	u2871
  1412  0223  2A25               	goto	u2870
  1413  0224                     u2871:
  1414  0224  2A2F               	goto	l509
  1415  0225                     u2870:
  1416                           	line	199
  1417                           	
  1418  0225                     l2841:	
  1419                           ;main.c: 199: bit_off(0x02);
  1420  0225  3002               	movlw	(02h)
  1421  0226  22AE               	fcall	_bit_off
  1422                           	line	200
  1423                           	
  1424  0227                     l2843:	
  1425                           ;main.c: 200: segment.hrl++;
  1426  0227  3001               	movlw	(01h)
  1427  0228  1283               	bcf	status, 5	;RP0=0, select bank0
  1428  0229  1303               	bcf	status, 6	;RP1=0, select bank0
  1429  022A  00C2               	movwf	(??_show_face+0)+0
  1430  022B  0842               	movf	(??_show_face+0)+0,w
  1431  022C  07B9               	addwf	0+(_segment)+01h,f
  1432  022D  2A2F               	goto	l509
  1433                           	line	201
  1434                           	
  1435  022E                     l512:	
  1436  022E  2A2F               	goto	l509
  1437                           	line	203
  1438                           	
  1439  022F                     l511:	
  1440                           	
  1441  022F                     l509:	
  1442  022F  0008               	return
  1443                           	opt stack 0
  1444                           GLOBAL	__end_of_show_face
  1445  0230                     	__end_of_show_face:
  1446 ;; =============== function _show_face ends ============
  1447                           
  1448                           	signat	_show_face,88
  1449                           	global	_hour_start_end_init
  1450                           psect	text373,local,class=CODE,delta=2
  1451                           global __ptext373
  1452  0111                     __ptext373:
  1453                           
  1454 ;; *************** function _hour_start_end_init *****************
  1455 ;; Defined at:
  1456 ;;		line 182 in file "main.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;  min             1    6[BANK0 ] unsigned char 
  1461 ;;  i               1    7[BANK0 ] unsigned char 
  1462 ;; Return value:  Size  Location     Type
  1463 ;;		None               void
  1464 ;; Registers used:
  1465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1471 ;;      Params:         0       0       0       0
  1472 ;;      Locals:         0       2       0       0
  1473 ;;      Temps:          0       2       0       0
  1474 ;;      Totals:         0       4       0       0
  1475 ;;Total ram usage:        4 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    4
  1478 ;; This function calls:
  1479 ;;		___bmul
  1480 ;;		_sixty_start
  1481 ;;		_sixty_stop
  1482 ;; This function is called by:
  1483 ;;		_init
  1484 ;; This function uses a non-reentrant model
  1485 ;;
  1486                           psect	text373
  1487                           	file	"main.c"
  1488                           	line	182
  1489                           	global	__size_of_hour_start_end_init
  1490  0047                     	__size_of_hour_start_end_init	equ	__end_of_hour_start_end_init-_hour_start_end_init
  1491                           	
  1492  0111                     _hour_start_end_init:	
  1493                           	opt	stack 2
  1494                           ; Regs used in _hour_start_end_init: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1495                           	line	184
  1496                           	
  1497  0111                     l2813:	
  1498                           ;main.c: 183: uns8 i;
  1499                           ;main.c: 184: for (i=0; i<12; i++) {
  1500  0111  1283               	bcf	status, 5	;RP0=0, select bank0
  1501  0112  1303               	bcf	status, 6	;RP1=0, select bank0
  1502  0113  01C7               	clrf	(hour_start_end_init@i)
  1503                           	
  1504  0114                     l2815:	
  1505  0114  300C               	movlw	(0Ch)
  1506  0115  0247               	subwf	(hour_start_end_init@i),w
  1507  0116  1C03               	skipc
  1508  0117  2919               	goto	u2821
  1509  0118  291A               	goto	u2820
  1510  0119                     u2821:
  1511  0119  291C               	goto	l2819
  1512  011A                     u2820:
  1513  011A  2957               	goto	l505
  1514                           	
  1515  011B                     l2817:	
  1516  011B  2957               	goto	l505
  1517                           	
  1518  011C                     l503:	
  1519                           	line	186
  1520                           	
  1521  011C                     l2819:	
  1522                           ;main.c: 185: uns8 min;
  1523                           ;main.c: 186: min = i << 2 + i;
  1524  011C  0847               	movf	(hour_start_end_init@i),w
  1525  011D  00C4               	movwf	(??_hour_start_end_init+0)+0
  1526  011E  0847               	movf	(hour_start_end_init@i),w
  1527  011F  3E02               	addlw	02h
  1528  0120  3E01               	addlw	1
  1529  0121  2924               	goto	u2834
  1530  0122                     u2835:
  1531  0122  1003               	clrc
  1532  0123  0DC4               	rlf	(??_hour_start_end_init+0)+0,f
  1533  0124                     u2834:
  1534  0124  3EFF               	addlw	-1
  1535  0125  1D03               	skipz
  1536  0126  2922               	goto	u2835
  1537  0127  0844               	movf	0+(??_hour_start_end_init+0)+0,w
  1538  0128  00C5               	movwf	(??_hour_start_end_init+1)+0
  1539  0129  0845               	movf	(??_hour_start_end_init+1)+0,w
  1540  012A  00C6               	movwf	(hour_start_end_init@min)
  1541                           	line	187
  1542                           	
  1543  012B                     l2821:	
  1544                           ;main.c: 187: min = i*5;
  1545  012B  3005               	movlw	(05h)
  1546  012C  00C4               	movwf	(??_hour_start_end_init+0)+0
  1547  012D  0844               	movf	(??_hour_start_end_init+0)+0,w
  1548  012E  00C0               	movwf	(?___bmul)
  1549  012F  0847               	movf	(hour_start_end_init@i),w
  1550  0130  2283               	fcall	___bmul
  1551  0131  1283               	bcf	status, 5	;RP0=0, select bank0
  1552  0132  1303               	bcf	status, 6	;RP1=0, select bank0
  1553  0133  00C5               	movwf	(??_hour_start_end_init+1)+0
  1554  0134  0845               	movf	(??_hour_start_end_init+1)+0,w
  1555  0135  00C6               	movwf	(hour_start_end_init@min)
  1556                           	line	188
  1557                           	
  1558  0136                     l2823:	
  1559                           ;main.c: 188: hour_start[i] = sixty_start(min);
  1560  0136  0846               	movf	(hour_start_end_init@min),w
  1561  0137  21CF               	fcall	_sixty_start
  1562  0138  1283               	bcf	status, 5	;RP0=0, select bank0
  1563  0139  1303               	bcf	status, 6	;RP1=0, select bank0
  1564  013A  00C4               	movwf	(??_hour_start_end_init+0)+0
  1565  013B  0847               	movf	(hour_start_end_init@i),w
  1566  013C  3E2C               	addlw	_hour_start&0ffh
  1567  013D  0084               	movwf	fsr0
  1568  013E  0844               	movf	(??_hour_start_end_init+0)+0,w
  1569  013F  1383               	bcf	status, 7	;select IRP bank0
  1570  0140  0080               	movwf	indf
  1571                           	line	189
  1572                           	
  1573  0141                     l2825:	
  1574                           ;main.c: 189: hour_end[i] = sixty_stop(min);
  1575  0141  0846               	movf	(hour_start_end_init@min),w
  1576  0142  2230               	fcall	_sixty_stop
  1577  0143  1283               	bcf	status, 5	;RP0=0, select bank0
  1578  0144  1303               	bcf	status, 6	;RP1=0, select bank0
  1579  0145  00C4               	movwf	(??_hour_start_end_init+0)+0
  1580  0146  0847               	movf	(hour_start_end_init@i),w
  1581  0147  3E20               	addlw	_hour_end&0ffh
  1582  0148  0084               	movwf	fsr0
  1583  0149  0844               	movf	(??_hour_start_end_init+0)+0,w
  1584  014A  1383               	bcf	status, 7	;select IRP bank0
  1585  014B  0080               	movwf	indf
  1586                           	line	184
  1587                           	
  1588  014C                     l2827:	
  1589  014C  3001               	movlw	(01h)
  1590  014D  00C4               	movwf	(??_hour_start_end_init+0)+0
  1591  014E  0844               	movf	(??_hour_start_end_init+0)+0,w
  1592  014F  07C7               	addwf	(hour_start_end_init@i),f
  1593                           	
  1594  0150                     l2829:	
  1595  0150  300C               	movlw	(0Ch)
  1596  0151  0247               	subwf	(hour_start_end_init@i),w
  1597  0152  1C03               	skipc
  1598  0153  2955               	goto	u2841
  1599  0154  2956               	goto	u2840
  1600  0155                     u2841:
  1601  0155  291C               	goto	l2819
  1602  0156                     u2840:
  1603  0156  2957               	goto	l505
  1604                           	
  1605  0157                     l504:	
  1606                           	line	191
  1607                           	
  1608  0157                     l505:	
  1609  0157  0008               	return
  1610                           	opt stack 0
  1611                           GLOBAL	__end_of_hour_start_end_init
  1612  0158                     	__end_of_hour_start_end_init:
  1613 ;; =============== function _hour_start_end_init ends ============
  1614                           
  1615                           	signat	_hour_start_end_init,88
  1616                           	global	_shift_write
  1617                           psect	text374,local,class=CODE,delta=2
  1618                           global __ptext374
  1619  0077                     __ptext374:
  1620                           
  1621 ;; *************** function _shift_write *****************
  1622 ;; Defined at:
  1623 ;;		line 76 in file "main.c"
  1624 ;; Parameters:    Size  Location     Type
  1625 ;;  data            1    wreg     unsigned char 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  data            1    6[BANK0 ] unsigned char 
  1628 ;;  i               2    4[BANK0 ] int 
  1629 ;; Return value:  Size  Location     Type
  1630 ;;		None               void
  1631 ;; Registers used:
  1632 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1638 ;;      Params:         0       0       0       0
  1639 ;;      Locals:         0       3       0       0
  1640 ;;      Temps:          0       2       0       0
  1641 ;;      Totals:         0       5       0       0
  1642 ;;Total ram usage:        5 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    4
  1645 ;; This function calls:
  1646 ;;		_bit_off
  1647 ;;		_bit_on
  1648 ;; This function is called by:
  1649 ;;		_next_segment
  1650 ;;		_application_reset
  1651 ;;		_init
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           psect	text374
  1655                           	file	"main.c"
  1656                           	line	76
  1657                           	global	__size_of_shift_write
  1658  004E                     	__size_of_shift_write	equ	__end_of_shift_write-_shift_write
  1659                           	
  1660  0077                     _shift_write:	
  1661                           	opt	stack 2
  1662                           ; Regs used in _shift_write: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1663                           ;shift_write@data stored from wreg
  1664                           	line	79
  1665  0077  1283               	bcf	status, 5	;RP0=0, select bank0
  1666  0078  1303               	bcf	status, 6	;RP1=0, select bank0
  1667  0079  00C6               	movwf	(shift_write@data)
  1668                           	
  1669  007A                     l2789:	
  1670                           ;main.c: 77: int i;
  1671                           ;main.c: 79: bit_off(0x08);
  1672  007A  3008               	movlw	(08h)
  1673  007B  22AE               	fcall	_bit_off
  1674                           	line	80
  1675                           ;main.c: 80: bit_off(0x10);
  1676  007C  3010               	movlw	(010h)
  1677  007D  22AE               	fcall	_bit_off
  1678                           	line	81
  1679                           	
  1680  007E                     l2791:	
  1681                           ;main.c: 81: for (i=0; i<8; i++) {
  1682  007E  1283               	bcf	status, 5	;RP0=0, select bank0
  1683  007F  1303               	bcf	status, 6	;RP1=0, select bank0
  1684  0080  01C4               	clrf	(shift_write@i)
  1685  0081  01C5               	clrf	(shift_write@i+1)
  1686                           	
  1687  0082                     l2793:	
  1688  0082  0845               	movf	(shift_write@i+1),w
  1689  0083  3A80               	xorlw	80h
  1690  0084  00FF               	movwf	btemp+1
  1691  0085  3080               	movlw	(high(08h))^80h
  1692  0086  027F               	subwf	btemp+1,w
  1693  0087  1D03               	skipz
  1694  0088  288B               	goto	u2795
  1695  0089  3008               	movlw	low(08h)
  1696  008A  0244               	subwf	(shift_write@i),w
  1697  008B                     u2795:
  1698                           
  1699  008B  1C03               	skipc
  1700  008C  288E               	goto	u2791
  1701  008D  288F               	goto	u2790
  1702  008E                     u2791:
  1703  008E  2891               	goto	l471
  1704  008F                     u2790:
  1705  008F  28BF               	goto	l2809
  1706                           	
  1707  0090                     l2795:	
  1708  0090  28BF               	goto	l2809
  1709                           	
  1710  0091                     l471:	
  1711                           	line	82
  1712                           ;main.c: 82: if ((data & 0x01) != 0) {
  1713  0091  1283               	bcf	status, 5	;RP0=0, select bank0
  1714  0092  1303               	bcf	status, 6	;RP1=0, select bank0
  1715  0093  1C46               	btfss	(shift_write@data),(0)&7
  1716  0094  2896               	goto	u2801
  1717  0095  2897               	goto	u2800
  1718  0096                     u2801:
  1719  0096  289A               	goto	l2799
  1720  0097                     u2800:
  1721                           	line	83
  1722                           	
  1723  0097                     l2797:	
  1724                           ;main.c: 83: bit_on(0x04);
  1725  0097  3004               	movlw	(04h)
  1726  0098  22B8               	fcall	_bit_on
  1727                           	line	84
  1728                           ;main.c: 84: } else {
  1729  0099  289C               	goto	l474
  1730                           	
  1731  009A                     l473:	
  1732                           	line	85
  1733                           	
  1734  009A                     l2799:	
  1735                           ;main.c: 85: bit_off(0x04);
  1736  009A  3004               	movlw	(04h)
  1737  009B  22AE               	fcall	_bit_off
  1738                           	line	86
  1739                           	
  1740  009C                     l474:	
  1741                           	line	88
  1742                           ;main.c: 86: }
  1743                           ;main.c: 88: bit_on(0x10);
  1744  009C  3010               	movlw	(010h)
  1745  009D  22B8               	fcall	_bit_on
  1746                           	line	90
  1747                           	
  1748  009E                     l2801:	
  1749                           ;main.c: 90: data = data >> 1;
  1750  009E  1283               	bcf	status, 5	;RP0=0, select bank0
  1751  009F  1303               	bcf	status, 6	;RP1=0, select bank0
  1752  00A0  0846               	movf	(shift_write@data),w
  1753  00A1  00C2               	movwf	(??_shift_write+0)+0
  1754  00A2  1003               	clrc
  1755  00A3  0C42               	rrf	(??_shift_write+0)+0,w
  1756  00A4  00C3               	movwf	(??_shift_write+1)+0
  1757  00A5  0843               	movf	(??_shift_write+1)+0,w
  1758  00A6  00C6               	movwf	(shift_write@data)
  1759                           	line	91
  1760                           	
  1761  00A7                     l2803:	
  1762                           ;main.c: 91: bit_off(0x10);
  1763  00A7  3010               	movlw	(010h)
  1764  00A8  22AE               	fcall	_bit_off
  1765                           	line	81
  1766                           	
  1767  00A9                     l2805:	
  1768  00A9  3001               	movlw	low(01h)
  1769  00AA  1283               	bcf	status, 5	;RP0=0, select bank0
  1770  00AB  1303               	bcf	status, 6	;RP1=0, select bank0
  1771  00AC  07C4               	addwf	(shift_write@i),f
  1772  00AD  1803               	skipnc
  1773  00AE  0AC5               	incf	(shift_write@i+1),f
  1774  00AF  3000               	movlw	high(01h)
  1775  00B0  07C5               	addwf	(shift_write@i+1),f
  1776                           	
  1777  00B1                     l2807:	
  1778  00B1  0845               	movf	(shift_write@i+1),w
  1779  00B2  3A80               	xorlw	80h
  1780  00B3  00FF               	movwf	btemp+1
  1781  00B4  3080               	movlw	(high(08h))^80h
  1782  00B5  027F               	subwf	btemp+1,w
  1783  00B6  1D03               	skipz
  1784  00B7  28BA               	goto	u2815
  1785  00B8  3008               	movlw	low(08h)
  1786  00B9  0244               	subwf	(shift_write@i),w
  1787  00BA                     u2815:
  1788                           
  1789  00BA  1C03               	skipc
  1790  00BB  28BD               	goto	u2811
  1791  00BC  28BE               	goto	u2810
  1792  00BD                     u2811:
  1793  00BD  2891               	goto	l471
  1794  00BE                     u2810:
  1795  00BE  28BF               	goto	l2809
  1796                           	
  1797  00BF                     l472:	
  1798                           	line	94
  1799                           	
  1800  00BF                     l2809:	
  1801                           ;main.c: 93: }
  1802                           ;main.c: 94: bit_on(0x08);
  1803  00BF  3008               	movlw	(08h)
  1804  00C0  22B8               	fcall	_bit_on
  1805                           	line	95
  1806                           	
  1807  00C1                     l2811:	
  1808                           # 95 "main.c"
  1809  00C1  0000               nop ;#
  1810                           psect	text374
  1811                           	line	96
  1812                           ;main.c: 96: bit_off(0x08);
  1813  00C2  3008               	movlw	(08h)
  1814  00C3  22AE               	fcall	_bit_off
  1815                           	line	98
  1816                           	
  1817  00C4                     l475:	
  1818  00C4  0008               	return
  1819                           	opt stack 0
  1820                           GLOBAL	__end_of_shift_write
  1821  00C5                     	__end_of_shift_write:
  1822 ;; =============== function _shift_write ends ============
  1823                           
  1824                           	signat	_shift_write,4216
  1825                           	global	___bmul
  1826                           psect	text375,local,class=CODE,delta=2
  1827                           global __ptext375
  1828  0283                     __ptext375:
  1829                           
  1830 ;; *************** function ___bmul *****************
  1831 ;; Defined at:
  1832 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  multiplier      1    wreg     unsigned char 
  1835 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1838 ;;  product         1    2[BANK0 ] unsigned char 
  1839 ;; Return value:  Size  Location     Type
  1840 ;;                  1    wreg      unsigned char 
  1841 ;; Registers used:
  1842 ;;		wreg, status,2, status,0
  1843 ;; Tracked objects:
  1844 ;;		On entry : 0/0
  1845 ;;		On exit  : 0/0
  1846 ;;		Unchanged: 0/0
  1847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1848 ;;      Params:         0       1       0       0
  1849 ;;      Locals:         0       2       0       0
  1850 ;;      Temps:          0       1       0       0
  1851 ;;      Totals:         0       4       0       0
  1852 ;;Total ram usage:        4 bytes
  1853 ;; Hardware stack levels used:    1
  1854 ;; Hardware stack levels required when called:    3
  1855 ;; This function calls:
  1856 ;;		Nothing
  1857 ;; This function is called by:
  1858 ;;		_hour_start_end_init
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           psect	text375
  1862                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\bmul.c"
  1863                           	line	3
  1864                           	global	__size_of___bmul
  1865  001A                     	__size_of___bmul	equ	__end_of___bmul-___bmul
  1866                           	
  1867  0283                     ___bmul:	
  1868                           	opt	stack 2
  1869                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1870                           ;___bmul@multiplier stored from wreg
  1871  0283  1283               	bcf	status, 5	;RP0=0, select bank0
  1872  0284  1303               	bcf	status, 6	;RP1=0, select bank0
  1873  0285  00C3               	movwf	(___bmul@multiplier)
  1874                           	line	4
  1875                           	
  1876  0286                     l2767:	
  1877  0286  01C2               	clrf	(___bmul@product)
  1878                           	line	6
  1879                           	
  1880  0287                     l1025:	
  1881                           	line	7
  1882  0287  1C43               	btfss	(___bmul@multiplier),(0)&7
  1883  0288  2A8A               	goto	u2771
  1884  0289  2A8B               	goto	u2770
  1885  028A                     u2771:
  1886  028A  2A90               	goto	l2771
  1887  028B                     u2770:
  1888                           	line	8
  1889                           	
  1890  028B                     l2769:	
  1891  028B  0840               	movf	(___bmul@multiplicand),w
  1892  028C  00C1               	movwf	(??___bmul+0)+0
  1893  028D  0841               	movf	(??___bmul+0)+0,w
  1894  028E  07C2               	addwf	(___bmul@product),f
  1895  028F  2A90               	goto	l2771
  1896                           	
  1897  0290                     l1026:	
  1898                           	line	9
  1899                           	
  1900  0290                     l2771:	
  1901  0290  1003               	clrc
  1902  0291  0DC0               	rlf	(___bmul@multiplicand),f
  1903                           
  1904                           	line	10
  1905                           	
  1906  0292                     l2773:	
  1907  0292  1003               	clrc
  1908  0293  0CC3               	rrf	(___bmul@multiplier),f
  1909                           
  1910                           	line	11
  1911                           	
  1912  0294                     l2775:	
  1913  0294  08C3               	movf	(___bmul@multiplier),f
  1914  0295  1D03               	skipz
  1915  0296  2A98               	goto	u2781
  1916  0297  2A99               	goto	u2780
  1917  0298                     u2781:
  1918  0298  2A87               	goto	l1025
  1919  0299                     u2780:
  1920  0299  2A9A               	goto	l2777
  1921                           	
  1922  029A                     l1027:	
  1923                           	line	12
  1924                           	
  1925  029A                     l2777:	
  1926  029A  0842               	movf	(___bmul@product),w
  1927  029B  2A9C               	goto	l1028
  1928                           	
  1929  029C                     l2779:	
  1930                           	line	13
  1931                           	
  1932  029C                     l1028:	
  1933  029C  0008               	return
  1934                           	opt stack 0
  1935                           GLOBAL	__end_of___bmul
  1936  029D                     	__end_of___bmul:
  1937 ;; =============== function ___bmul ends ============
  1938                           
  1939                           	signat	___bmul,8313
  1940                           	global	_sixty_stop
  1941                           psect	text376,local,class=CODE,delta=2
  1942                           global __ptext376
  1943  0230                     __ptext376:
  1944                           
  1945 ;; *************** function _sixty_stop *****************
  1946 ;; Defined at:
  1947 ;;		line 154 in file "main.c"
  1948 ;; Parameters:    Size  Location     Type
  1949 ;;  x               1    wreg     unsigned char 
  1950 ;; Auto vars:     Size  Location     Type
  1951 ;;  x               1    2[BANK0 ] unsigned char 
  1952 ;; Return value:  Size  Location     Type
  1953 ;;                  1    wreg      unsigned char 
  1954 ;; Registers used:
  1955 ;;		wreg, status,2, status,0
  1956 ;; Tracked objects:
  1957 ;;		On entry : 0/0
  1958 ;;		On exit  : 0/0
  1959 ;;		Unchanged: 0/0
  1960 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1961 ;;      Params:         0       0       0       0
  1962 ;;      Locals:         0       1       0       0
  1963 ;;      Temps:          0       2       0       0
  1964 ;;      Totals:         0       3       0       0
  1965 ;;Total ram usage:        3 bytes
  1966 ;; Hardware stack levels used:    1
  1967 ;; Hardware stack levels required when called:    3
  1968 ;; This function calls:
  1969 ;;		Nothing
  1970 ;; This function is called by:
  1971 ;;		_hour_start_end_init
  1972 ;; This function uses a non-reentrant model
  1973 ;;
  1974                           psect	text376
  1975                           	file	"main.c"
  1976                           	line	154
  1977                           	global	__size_of_sixty_stop
  1978  002B                     	__size_of_sixty_stop	equ	__end_of_sixty_stop-_sixty_stop
  1979                           	
  1980  0230                     _sixty_stop:	
  1981                           	opt	stack 2
  1982                           ; Regs used in _sixty_stop: [wreg+status,2+status,0]
  1983                           ;sixty_stop@x stored from wreg
  1984  0230  1283               	bcf	status, 5	;RP0=0, select bank0
  1985  0231  1303               	bcf	status, 6	;RP1=0, select bank0
  1986  0232  00C2               	movwf	(sixty_stop@x)
  1987                           	line	155
  1988                           	
  1989  0233                     l2685:	
  1990                           ;main.c: 155: x = x << 1;
  1991  0233  0842               	movf	(sixty_stop@x),w
  1992  0234  00C0               	movwf	(??_sixty_stop+0)+0
  1993  0235  0740               	addwf	(??_sixty_stop+0)+0,w
  1994  0236  00C1               	movwf	(??_sixty_stop+1)+0
  1995  0237  0841               	movf	(??_sixty_stop+1)+0,w
  1996  0238  00C2               	movwf	(sixty_stop@x)
  1997                           	line	156
  1998                           	
  1999  0239                     l2687:	
  2000                           ;main.c: 156: if (x < 30)
  2001  0239  301E               	movlw	(01Eh)
  2002  023A  0242               	subwf	(sixty_stop@x),w
  2003  023B  1803               	skipnc
  2004  023C  2A3E               	goto	u2641
  2005  023D  2A3F               	goto	u2640
  2006  023E                     u2641:
  2007  023E  2A43               	goto	l2693
  2008  023F                     u2640:
  2009                           	line	157
  2010                           	
  2011  023F                     l2689:	
  2012                           ;main.c: 157: return x+2;
  2013  023F  0842               	movf	(sixty_stop@x),w
  2014  0240  3E02               	addlw	02h
  2015  0241  2A5A               	goto	l498
  2016                           	
  2017  0242                     l2691:	
  2018  0242  2A5A               	goto	l498
  2019                           	
  2020  0243                     l497:	
  2021                           	line	158
  2022                           	
  2023  0243                     l2693:	
  2024                           ;main.c: 158: if (x < 60)
  2025  0243  303C               	movlw	(03Ch)
  2026  0244  0242               	subwf	(sixty_stop@x),w
  2027  0245  1803               	skipnc
  2028  0246  2A48               	goto	u2651
  2029  0247  2A49               	goto	u2650
  2030  0248                     u2651:
  2031  0248  2A4D               	goto	l2699
  2032  0249                     u2650:
  2033                           	line	159
  2034                           	
  2035  0249                     l2695:	
  2036                           ;main.c: 159: return x+4;
  2037  0249  0842               	movf	(sixty_stop@x),w
  2038  024A  3E04               	addlw	04h
  2039  024B  2A5A               	goto	l498
  2040                           	
  2041  024C                     l2697:	
  2042  024C  2A5A               	goto	l498
  2043                           	
  2044  024D                     l499:	
  2045                           	line	160
  2046                           	
  2047  024D                     l2699:	
  2048                           ;main.c: 160: if (x < 90)
  2049  024D  305A               	movlw	(05Ah)
  2050  024E  0242               	subwf	(sixty_stop@x),w
  2051  024F  1803               	skipnc
  2052  0250  2A52               	goto	u2661
  2053  0251  2A53               	goto	u2660
  2054  0252                     u2661:
  2055  0252  2A57               	goto	l2705
  2056  0253                     u2660:
  2057                           	line	161
  2058                           	
  2059  0253                     l2701:	
  2060                           ;main.c: 161: return x+6;
  2061  0253  0842               	movf	(sixty_stop@x),w
  2062  0254  3E06               	addlw	06h
  2063  0255  2A5A               	goto	l498
  2064                           	
  2065  0256                     l2703:	
  2066  0256  2A5A               	goto	l498
  2067                           	
  2068  0257                     l500:	
  2069                           	line	163
  2070                           	
  2071  0257                     l2705:	
  2072                           ;main.c: 163: return x+8;
  2073  0257  0842               	movf	(sixty_stop@x),w
  2074  0258  3E08               	addlw	08h
  2075  0259  2A5A               	goto	l498
  2076                           	
  2077  025A                     l2707:	
  2078                           	line	164
  2079                           	
  2080  025A                     l498:	
  2081  025A  0008               	return
  2082                           	opt stack 0
  2083                           GLOBAL	__end_of_sixty_stop
  2084  025B                     	__end_of_sixty_stop:
  2085 ;; =============== function _sixty_stop ends ============
  2086                           
  2087                           	signat	_sixty_stop,4217
  2088                           	global	_sixty_start
  2089                           psect	text377,local,class=CODE,delta=2
  2090                           global __ptext377
  2091  01CF                     __ptext377:
  2092                           
  2093 ;; *************** function _sixty_start *****************
  2094 ;; Defined at:
  2095 ;;		line 133 in file "main.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  x               1    wreg     unsigned char 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  x               1    2[BANK0 ] unsigned char 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      unsigned char 
  2102 ;; Registers used:
  2103 ;;		wreg, status,2, status,0
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2109 ;;      Params:         0       0       0       0
  2110 ;;      Locals:         0       1       0       0
  2111 ;;      Temps:          0       2       0       0
  2112 ;;      Totals:         0       3       0       0
  2113 ;;Total ram usage:        3 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:    3
  2116 ;; This function calls:
  2117 ;;		Nothing
  2118 ;; This function is called by:
  2119 ;;		_hour_start_end_init
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           psect	text377
  2123                           	file	"main.c"
  2124                           	line	133
  2125                           	global	__size_of_sixty_start
  2126  0033                     	__size_of_sixty_start	equ	__end_of_sixty_start-_sixty_start
  2127                           	
  2128  01CF                     _sixty_start:	
  2129                           	opt	stack 2
  2130                           ; Regs used in _sixty_start: [wreg+status,2+status,0]
  2131                           ;sixty_start@x stored from wreg
  2132                           	line	135
  2133  01CF  1283               	bcf	status, 5	;RP0=0, select bank0
  2134  01D0  1303               	bcf	status, 6	;RP1=0, select bank0
  2135  01D1  00C2               	movwf	(sixty_start@x)
  2136                           	
  2137  01D2                     l2655:	
  2138                           ;main.c: 135: x = x << 1;
  2139  01D2  0842               	movf	(sixty_start@x),w
  2140  01D3  00C0               	movwf	(??_sixty_start+0)+0
  2141  01D4  0740               	addwf	(??_sixty_start+0)+0,w
  2142  01D5  00C1               	movwf	(??_sixty_start+1)+0
  2143  01D6  0841               	movf	(??_sixty_start+1)+0,w
  2144  01D7  00C2               	movwf	(sixty_start@x)
  2145                           	line	136
  2146                           	
  2147  01D8                     l2657:	
  2148                           ;main.c: 136: if (x == 0)
  2149  01D8  08C2               	movf	(sixty_start@x),f
  2150  01D9  1D03               	skipz
  2151  01DA  29DC               	goto	u2601
  2152  01DB  29DD               	goto	u2600
  2153  01DC                     u2601:
  2154  01DC  29E0               	goto	l2663
  2155  01DD                     u2600:
  2156                           	line	137
  2157                           	
  2158  01DD                     l2659:	
  2159                           ;main.c: 137: return 127;
  2160  01DD  307F               	movlw	(07Fh)
  2161  01DE  2A01               	goto	l491
  2162                           	
  2163  01DF                     l2661:	
  2164  01DF  2A01               	goto	l491
  2165                           	
  2166  01E0                     l490:	
  2167                           	line	138
  2168                           	
  2169  01E0                     l2663:	
  2170                           ;main.c: 138: if (x <= 30)
  2171  01E0  301F               	movlw	(01Fh)
  2172  01E1  0242               	subwf	(sixty_start@x),w
  2173  01E2  1803               	skipnc
  2174  01E3  29E5               	goto	u2611
  2175  01E4  29E6               	goto	u2610
  2176  01E5                     u2611:
  2177  01E5  29EA               	goto	l2669
  2178  01E6                     u2610:
  2179                           	line	139
  2180                           	
  2181  01E6                     l2665:	
  2182                           ;main.c: 139: return x+1;
  2183  01E6  0842               	movf	(sixty_start@x),w
  2184  01E7  3E01               	addlw	01h
  2185  01E8  2A01               	goto	l491
  2186                           	
  2187  01E9                     l2667:	
  2188  01E9  2A01               	goto	l491
  2189                           	
  2190  01EA                     l492:	
  2191                           	line	140
  2192                           	
  2193  01EA                     l2669:	
  2194                           ;main.c: 140: if (x <= 60)
  2195  01EA  303D               	movlw	(03Dh)
  2196  01EB  0242               	subwf	(sixty_start@x),w
  2197  01EC  1803               	skipnc
  2198  01ED  29EF               	goto	u2621
  2199  01EE  29F0               	goto	u2620
  2200  01EF                     u2621:
  2201  01EF  29F4               	goto	l2675
  2202  01F0                     u2620:
  2203                           	line	141
  2204                           	
  2205  01F0                     l2671:	
  2206                           ;main.c: 141: return x+3;
  2207  01F0  0842               	movf	(sixty_start@x),w
  2208  01F1  3E03               	addlw	03h
  2209  01F2  2A01               	goto	l491
  2210                           	
  2211  01F3                     l2673:	
  2212  01F3  2A01               	goto	l491
  2213                           	
  2214  01F4                     l493:	
  2215                           	line	142
  2216                           	
  2217  01F4                     l2675:	
  2218                           ;main.c: 142: if (x <= 90)
  2219  01F4  305B               	movlw	(05Bh)
  2220  01F5  0242               	subwf	(sixty_start@x),w
  2221  01F6  1803               	skipnc
  2222  01F7  29F9               	goto	u2631
  2223  01F8  29FA               	goto	u2630
  2224  01F9                     u2631:
  2225  01F9  29FE               	goto	l2681
  2226  01FA                     u2630:
  2227                           	line	143
  2228                           	
  2229  01FA                     l2677:	
  2230                           ;main.c: 143: return x+5;
  2231  01FA  0842               	movf	(sixty_start@x),w
  2232  01FB  3E05               	addlw	05h
  2233  01FC  2A01               	goto	l491
  2234                           	
  2235  01FD                     l2679:	
  2236  01FD  2A01               	goto	l491
  2237                           	
  2238  01FE                     l494:	
  2239                           	line	145
  2240                           	
  2241  01FE                     l2681:	
  2242                           ;main.c: 145: return x + 7;
  2243  01FE  0842               	movf	(sixty_start@x),w
  2244  01FF  3E07               	addlw	07h
  2245  0200  2A01               	goto	l491
  2246                           	
  2247  0201                     l2683:	
  2248                           	line	146
  2249                           	
  2250  0201                     l491:	
  2251  0201  0008               	return
  2252                           	opt stack 0
  2253                           GLOBAL	__end_of_sixty_start
  2254  0202                     	__end_of_sixty_start:
  2255 ;; =============== function _sixty_start ends ============
  2256                           
  2257                           	signat	_sixty_start,4217
  2258                           	global	_bit_off
  2259                           psect	text378,local,class=CODE,delta=2
  2260                           global __ptext378
  2261  02AE                     __ptext378:
  2262                           
  2263 ;; *************** function _bit_off *****************
  2264 ;; Defined at:
  2265 ;;		line 34 in file "main.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  bt              1    wreg     unsigned char 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  bt              1    1[BANK0 ] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;		None               void
  2272 ;; Registers used:
  2273 ;;		wreg, status,2, status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2279 ;;      Params:         0       0       0       0
  2280 ;;      Locals:         0       1       0       0
  2281 ;;      Temps:          0       1       0       0
  2282 ;;      Totals:         0       2       0       0
  2283 ;;Total ram usage:        2 bytes
  2284 ;; Hardware stack levels used:    1
  2285 ;; Hardware stack levels required when called:    3
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_shift_write
  2290 ;;		_show_face
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           psect	text378
  2294                           	file	"main.c"
  2295                           	line	34
  2296                           	global	__size_of_bit_off
  2297  000A                     	__size_of_bit_off	equ	__end_of_bit_off-_bit_off
  2298                           	
  2299  02AE                     _bit_off:	
  2300                           	opt	stack 2
  2301                           ; Regs used in _bit_off: [wreg+status,2+status,0]
  2302                           ;bit_off@bt stored from wreg
  2303  02AE  1283               	bcf	status, 5	;RP0=0, select bank0
  2304  02AF  1303               	bcf	status, 6	;RP1=0, select bank0
  2305  02B0  00C1               	movwf	(bit_off@bt)
  2306                           	line	35
  2307                           	
  2308  02B1                     l2651:	
  2309                           ;main.c: 35: a_latch &= ~bt;
  2310  02B1  0941               	comf	(bit_off@bt),w
  2311  02B2  00C0               	movwf	(??_bit_off+0)+0
  2312  02B3  0840               	movf	(??_bit_off+0)+0,w
  2313  02B4  05BA               	andwf	(_a_latch),f
  2314                           	line	36
  2315                           	
  2316  02B5                     l2653:	
  2317                           ;main.c: 36: PORTA = a_latch;
  2318  02B5  083A               	movf	(_a_latch),w
  2319  02B6  0085               	movwf	(5)	;volatile
  2320                           	line	37
  2321                           	
  2322  02B7                     l468:	
  2323  02B7  0008               	return
  2324                           	opt stack 0
  2325                           GLOBAL	__end_of_bit_off
  2326  02B8                     	__end_of_bit_off:
  2327 ;; =============== function _bit_off ends ============
  2328                           
  2329                           	signat	_bit_off,4216
  2330                           	global	_bit_on
  2331                           psect	text379,local,class=CODE,delta=2
  2332                           global __ptext379
  2333  02B8                     __ptext379:
  2334                           
  2335 ;; *************** function _bit_on *****************
  2336 ;; Defined at:
  2337 ;;		line 28 in file "main.c"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;  bt              1    wreg     unsigned char 
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  bt              1    1[BANK0 ] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;		None               void
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2351 ;;      Params:         0       0       0       0
  2352 ;;      Locals:         0       1       0       0
  2353 ;;      Temps:          0       1       0       0
  2354 ;;      Totals:         0       2       0       0
  2355 ;;Total ram usage:        2 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    3
  2358 ;; This function calls:
  2359 ;;		Nothing
  2360 ;; This function is called by:
  2361 ;;		_shift_write
  2362 ;;		_show_face
  2363 ;;		_main
  2364 ;; This function uses a non-reentrant model
  2365 ;;
  2366                           psect	text379
  2367                           	file	"main.c"
  2368                           	line	28
  2369                           	global	__size_of_bit_on
  2370  000A                     	__size_of_bit_on	equ	__end_of_bit_on-_bit_on
  2371                           	
  2372  02B8                     _bit_on:	
  2373                           	opt	stack 2
  2374                           ; Regs used in _bit_on: [wreg+status,2+status,0]
  2375                           ;bit_on@bt stored from wreg
  2376  02B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2377  02B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2378  02BA  00C1               	movwf	(bit_on@bt)
  2379                           	line	29
  2380                           	
  2381  02BB                     l2647:	
  2382                           ;main.c: 29: a_latch |= bt;
  2383  02BB  0841               	movf	(bit_on@bt),w
  2384  02BC  00C0               	movwf	(??_bit_on+0)+0
  2385  02BD  0840               	movf	(??_bit_on+0)+0,w
  2386  02BE  04BA               	iorwf	(_a_latch),f
  2387                           	line	30
  2388                           	
  2389  02BF                     l2649:	
  2390                           ;main.c: 30: PORTA = a_latch;
  2391  02BF  083A               	movf	(_a_latch),w
  2392  02C0  0085               	movwf	(5)	;volatile
  2393                           	line	31
  2394                           	
  2395  02C1                     l465:	
  2396  02C1  0008               	return
  2397                           	opt stack 0
  2398                           GLOBAL	__end_of_bit_on
  2399  02C2                     	__end_of_bit_on:
  2400 ;; =============== function _bit_on ends ============
  2401                           
  2402                           	signat	_bit_on,4216
  2403                           	global	_interrupt_handler
  2404                           psect	text380,local,class=CODE,delta=2
  2405                           global __ptext380
  2406  025B                     __ptext380:
  2407                           
  2408 ;; *************** function _interrupt_handler *****************
  2409 ;; Defined at:
  2410 ;;		line 318 in file "main.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;		None
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;		None               void
  2417 ;; Registers used:
  2418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2424 ;;      Params:         0       0       0       0
  2425 ;;      Locals:         0       0       0       0
  2426 ;;      Temps:          4       0       0       0
  2427 ;;      Totals:         4       0       0       0
  2428 ;;Total ram usage:        4 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:    2
  2431 ;; This function calls:
  2432 ;;		_sync
  2433 ;; This function is called by:
  2434 ;;		Interrupt level 1
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           psect	text380
  2438                           	file	"main.c"
  2439                           	line	318
  2440                           	global	__size_of_interrupt_handler
  2441  0028                     	__size_of_interrupt_handler	equ	__end_of_interrupt_handler-_interrupt_handler
  2442                           	
  2443  025B                     _interrupt_handler:	
  2444                           	opt	stack 2
  2445                           ; Regs used in _interrupt_handler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2446                           psect	intentry,class=CODE,delta=2
  2447                           global __pintentry
  2448  0004                     __pintentry:
  2449                           global interrupt_function
  2450  0004                     interrupt_function:
  2451                           	global saved_w
  2452  007E                     	saved_w	set	btemp+0
  2453  0004  00FE               	movwf	saved_w
  2454  0005  0E03               	swapf	status,w
  2455  0006  00F5               	movwf	(??_interrupt_handler+0)
  2456  0007  0804               	movf	fsr0,w
  2457  0008  00F6               	movwf	(??_interrupt_handler+1)
  2458  0009  080A               	movf	pclath,w
  2459  000A  00F7               	movwf	(??_interrupt_handler+2)
  2460  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  2461  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  2462  000D  087F               	movf	btemp+1,w
  2463  000E  00F8               	movwf	(??_interrupt_handler+3)
  2464  000F  2A5B               	ljmp	_interrupt_handler
  2465                           psect	text380
  2466                           	line	321
  2467                           	
  2468  025B                     i1l2755:	
  2469                           ;main.c: 320: static char c=0;
  2470                           ;main.c: 321: if (RBIF) {
  2471  025B  1C0B               	btfss	(88/8),(88)&7
  2472  025C  2A5E               	goto	u273_21
  2473  025D  2A5F               	goto	u273_20
  2474  025E                     u273_21:
  2475  025E  2A76               	goto	i1l548
  2476  025F                     u273_20:
  2477                           	line	322
  2478                           	
  2479  025F                     i1l2757:	
  2480                           ;main.c: 322: if (RB7 == 1) {
  2481                           	line	325
  2482                           ;main.c: 324: ;
  2483                           	
  2484  025F                     i1l542:	
  2485                           	line	327
  2486                           ;main.c: 325: }
  2487                           ;main.c: 327: if (RB5 == 0 || RB7 == 1) {
  2488  025F  1E86               	btfss	(53/8),(53)&7
  2489  0260  2A62               	goto	u274_21
  2490  0261  2A63               	goto	u274_20
  2491  0262                     u274_21:
  2492  0262  2A68               	goto	i1l2761
  2493  0263                     u274_20:
  2494                           	
  2495  0263                     i1l2759:	
  2496  0263  1F86               	btfss	(55/8),(55)&7
  2497  0264  2A66               	goto	u275_21
  2498  0265  2A67               	goto	u275_20
  2499  0266                     u275_21:
  2500  0266  2A74               	goto	i1l543
  2501  0267                     u275_20:
  2502  0267  2A68               	goto	i1l2761
  2503                           	
  2504  0268                     i1l545:	
  2505                           	line	332
  2506                           	
  2507  0268                     i1l2761:	
  2508                           ;main.c: 332: if(c == 0){
  2509  0268  08F9               	movf	(interrupt_handler@c),f
  2510  0269  1D03               	skipz
  2511  026A  2A6C               	goto	u276_21
  2512  026B  2A6D               	goto	u276_20
  2513  026C                     u276_21:
  2514  026C  2A72               	goto	i1l546
  2515  026D                     u276_20:
  2516                           	line	333
  2517                           	
  2518  026D                     i1l2763:	
  2519                           ;main.c: 333: sync();
  2520  026D  2011               	fcall	_sync
  2521                           	line	334
  2522                           	
  2523  026E                     i1l2765:	
  2524                           ;main.c: 334: c = 1;
  2525  026E  01F9               	clrf	(interrupt_handler@c)
  2526  026F  1403               	bsf	status,0
  2527  0270  0DF9               	rlf	(interrupt_handler@c),f
  2528                           	line	335
  2529                           ;main.c: 335: } else {
  2530  0271  2A74               	goto	i1l543
  2531                           	
  2532  0272                     i1l546:	
  2533                           	line	336
  2534                           ;main.c: 336: c = 0;
  2535  0272  01F9               	clrf	(interrupt_handler@c)
  2536  0273  2A74               	goto	i1l543
  2537                           	line	337
  2538                           	
  2539  0274                     i1l547:	
  2540                           	line	338
  2541                           	
  2542  0274                     i1l543:	
  2543                           	line	339
  2544                           ;main.c: 337: }
  2545                           ;main.c: 338: }
  2546                           ;main.c: 339: RBIF = 0;
  2547  0274  100B               	bcf	(88/8),(88)&7
  2548  0275  2A76               	goto	i1l548
  2549                           	line	340
  2550                           	
  2551  0276                     i1l541:	
  2552                           	line	341
  2553                           	
  2554  0276                     i1l548:	
  2555  0276  0878               	movf	(??_interrupt_handler+3),w
  2556  0277  1283               	bcf	status, 5	;RP0=0, select bank0
  2557  0278  1303               	bcf	status, 6	;RP1=0, select bank0
  2558  0279  00FF               	movwf	btemp+1
  2559  027A  0877               	movf	(??_interrupt_handler+2),w
  2560  027B  008A               	movwf	pclath
  2561  027C  0876               	movf	(??_interrupt_handler+1),w
  2562  027D  0084               	movwf	fsr0
  2563  027E  0E75               	swapf	(??_interrupt_handler+0)^0FFFFFF80h,w
  2564  027F  0083               	movwf	status
  2565  0280  0EFE               	swapf	saved_w,f
  2566  0281  0E7E               	swapf	saved_w,w
  2567  0282  0009               	retfie
  2568                           	opt stack 0
  2569                           GLOBAL	__end_of_interrupt_handler
  2570  0283                     	__end_of_interrupt_handler:
  2571 ;; =============== function _interrupt_handler ends ============
  2572                           
  2573                           	signat	_interrupt_handler,88
  2574                           	global	_sync
  2575                           psect	text381,local,class=CODE,delta=2
  2576                           global __ptext381
  2577  0011                     __ptext381:
  2578                           
  2579 ;; *************** function _sync *****************
  2580 ;; Defined at:
  2581 ;;		line 237 in file "main.c"
  2582 ;; Parameters:    Size  Location     Type
  2583 ;;		None
  2584 ;; Auto vars:     Size  Location     Type
  2585 ;;		None
  2586 ;; Return value:  Size  Location     Type
  2587 ;;		None               void
  2588 ;; Registers used:
  2589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2590 ;; Tracked objects:
  2591 ;;		On entry : 0/0
  2592 ;;		On exit  : 0/0
  2593 ;;		Unchanged: 0/0
  2594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2595 ;;      Params:         0       0       0       0
  2596 ;;      Locals:         0       0       0       0
  2597 ;;      Temps:          3       0       0       0
  2598 ;;      Totals:         3       0       0       0
  2599 ;;Total ram usage:        3 bytes
  2600 ;; Hardware stack levels used:    1
  2601 ;; Hardware stack levels required when called:    1
  2602 ;; This function calls:
  2603 ;;		i1_bit_off
  2604 ;;		i1_bit_on
  2605 ;; This function is called by:
  2606 ;;		_interrupt_handler
  2607 ;; This function uses a non-reentrant model
  2608 ;;
  2609                           psect	text381
  2610                           	file	"main.c"
  2611                           	line	237
  2612                           	global	__size_of_sync
  2613  0066                     	__size_of_sync	equ	__end_of_sync-_sync
  2614                           	
  2615  0011                     _sync:	
  2616                           	opt	stack 2
  2617                           ; Regs used in _sync: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2618                           	line	238
  2619                           	
  2620  0011                     i1l2709:	
  2621                           ;main.c: 238: bit_off(0x02);
  2622  0011  3002               	movlw	(02h)
  2623  0012  22C2               	fcall	i1_bit_off
  2624                           	line	241
  2625                           	
  2626  0013                     i1l2711:	
  2627                           ;main.c: 241: TMR1ON = 0;
  2628  0013  1283               	bcf	status, 5	;RP0=0, select bank0
  2629  0014  1303               	bcf	status, 6	;RP1=0, select bank0
  2630  0015  1010               	bcf	(128/8),(128)&7
  2631                           	line	243
  2632                           ;main.c: 243: switch (state) {
  2633  0016  285D               	goto	i1l2741
  2634                           	line	244
  2635                           ;main.c: 244: case 0:
  2636                           	
  2637  0017                     i1l526:	
  2638                           	line	246
  2639                           	
  2640  0017                     i1l2713:	
  2641                           ;main.c: 246: TMR1H = 0;
  2642  0017  018F               	clrf	(15)	;volatile
  2643                           	line	247
  2644                           ;main.c: 247: TMR1L = 0;
  2645  0018  018E               	clrf	(14)	;volatile
  2646                           	line	248
  2647                           	
  2648  0019                     i1l2715:	
  2649                           ;main.c: 248: tmr1_counter = 0;
  2650  0019  01BF               	clrf	(_tmr1_counter)
  2651                           	line	249
  2652                           	
  2653  001A                     i1l2717:	
  2654                           ;main.c: 249: TMR1IF = 0;
  2655  001A  100C               	bcf	(96/8),(96)&7
  2656                           	line	250
  2657                           	
  2658  001B                     i1l2719:	
  2659                           ;main.c: 250: TMR1ON = 1;
  2660  001B  1410               	bsf	(128/8),(128)&7
  2661                           	line	251
  2662                           ;main.c: 251: break;
  2663  001C  2868               	goto	i1l2743
  2664                           	line	253
  2665                           ;main.c: 253: case 1:
  2666                           	
  2667  001D                     i1l528:	
  2668                           	line	254
  2669                           	
  2670  001D                     i1l529:	
  2671                           	line	256
  2672                           ;main.c: 254: case 2:
  2673                           ;main.c: 256: if (TMR1IF == 1)
  2674  001D  1C0C               	btfss	(96/8),(96)&7
  2675  001E  2820               	goto	u267_21
  2676  001F  2821               	goto	u267_20
  2677  0020                     u267_21:
  2678  0020  2825               	goto	i1l530
  2679  0021                     u267_20:
  2680                           	line	257
  2681                           	
  2682  0021                     i1l2721:	
  2683                           ;main.c: 257: tmr1_counter++;
  2684  0021  3001               	movlw	(01h)
  2685  0022  00F2               	movwf	(??_sync+0)+0
  2686  0023  0872               	movf	(??_sync+0)+0,w
  2687  0024  07BF               	addwf	(_tmr1_counter),f
  2688                           	
  2689  0025                     i1l530:	
  2690                           	line	259
  2691                           ;main.c: 259: seg_ticks_l = (TMR1L >> 7) | ((TMR1H << 1) & 0xFF);
  2692  0025  080F               	movf	(15),w	;volatile
  2693  0026  00F2               	movwf	(??_sync+0)+0
  2694  0027  3001               	movlw	01h
  2695  0028                     u268_25:
  2696  0028  1003               	clrc
  2697  0029  0DF2               	rlf	(??_sync+0)+0,f
  2698  002A  3EFF               	addlw	-1
  2699  002B  1D03               	skipz
  2700  002C  2828               	goto	u268_25
  2701  002D  080E               	movf	(14),w	;volatile
  2702  002E  00F3               	movwf	(??_sync+1)+0
  2703  002F  3007               	movlw	07h
  2704  0030                     u269_25:
  2705  0030  1003               	clrc
  2706  0031  0CF3               	rrf	(??_sync+1)+0,f
  2707  0032  3EFF               	addlw	-1
  2708  0033  1D03               	skipz
  2709  0034  2830               	goto	u269_25
  2710  0035  0873               	movf	0+(??_sync+1)+0,w
  2711  0036  0472               	iorwf	0+(??_sync+0)+0,w
  2712  0037  00F4               	movwf	(??_sync+2)+0
  2713  0038  0874               	movf	(??_sync+2)+0,w
  2714  0039  00BC               	movwf	(_seg_ticks_l)
  2715                           	line	260
  2716                           ;main.c: 260: seg_ticks_h = (TMR1H >> 7) | ((tmr1_counter << 1) & 0xFF);
  2717  003A  083F               	movf	(_tmr1_counter),w
  2718  003B  00F2               	movwf	(??_sync+0)+0
  2719  003C  3001               	movlw	01h
  2720  003D                     u270_25:
  2721  003D  1003               	clrc
  2722  003E  0DF2               	rlf	(??_sync+0)+0,f
  2723  003F  3EFF               	addlw	-1
  2724  0040  1D03               	skipz
  2725  0041  283D               	goto	u270_25
  2726  0042  080F               	movf	(15),w	;volatile
  2727  0043  00F3               	movwf	(??_sync+1)+0
  2728  0044  3007               	movlw	07h
  2729  0045                     u271_25:
  2730  0045  1003               	clrc
  2731  0046  0CF3               	rrf	(??_sync+1)+0,f
  2732  0047  3EFF               	addlw	-1
  2733  0048  1D03               	skipz
  2734  0049  2845               	goto	u271_25
  2735  004A  0873               	movf	0+(??_sync+1)+0,w
  2736  004B  0472               	iorwf	0+(??_sync+0)+0,w
  2737  004C  00F4               	movwf	(??_sync+2)+0
  2738  004D  0874               	movf	(??_sync+2)+0,w
  2739  004E  00BB               	movwf	(_seg_ticks_h)
  2740                           	line	262
  2741                           	
  2742  004F                     i1l2723:	
  2743                           ;main.c: 262: segment.raw = 0;
  2744  004F  01B8               	clrf	(_segment)
  2745                           	line	263
  2746                           	
  2747  0050                     i1l2725:	
  2748                           ;main.c: 263: segment.hrl = 0;
  2749  0050  01B9               	clrf	0+(_segment)+01h
  2750                           	line	267
  2751                           	
  2752  0051                     i1l2727:	
  2753                           ;main.c: 267: TMR1L = 0;
  2754  0051  018E               	clrf	(14)	;volatile
  2755                           	line	268
  2756                           	
  2757  0052                     i1l2729:	
  2758                           ;main.c: 268: TMR1H = 0;
  2759  0052  018F               	clrf	(15)	;volatile
  2760                           	line	269
  2761                           	
  2762  0053                     i1l2731:	
  2763                           ;main.c: 269: tmr1_counter = 0;
  2764  0053  01BF               	clrf	(_tmr1_counter)
  2765                           	line	270
  2766                           	
  2767  0054                     i1l2733:	
  2768                           ;main.c: 270: TMR1IF = 0;
  2769  0054  100C               	bcf	(96/8),(96)&7
  2770                           	line	271
  2771                           	
  2772  0055                     i1l2735:	
  2773                           ;main.c: 271: TMR1ON = 1;
  2774  0055  1410               	bsf	(128/8),(128)&7
  2775                           	line	274
  2776                           ;main.c: 274: TMR0 = 256 - seg_ticks_l;
  2777  0056  033C               	decf	(_seg_ticks_l),w
  2778  0057  3AFF               	xorlw	0ffh
  2779  0058  0081               	movwf	(1)
  2780                           	line	275
  2781                           	
  2782  0059                     i1l2737:	
  2783                           ;main.c: 275: tmr0_counter = 0;
  2784  0059  01BE               	clrf	(_tmr0_counter)
  2785                           	line	276
  2786                           	
  2787  005A                     i1l2739:	
  2788                           ;main.c: 276: TMR0IF = 0;
  2789  005A  110B               	bcf	(90/8),(90)&7
  2790                           	line	279
  2791                           ;main.c: 279: break;
  2792  005B  2868               	goto	i1l2743
  2793                           	line	280
  2794                           ;main.c: 280: default:
  2795                           	
  2796  005C                     i1l531:	
  2797                           	line	282
  2798                           ;main.c: 281: ;
  2799                           ;main.c: 282: }
  2800  005C  2868               	goto	i1l2743
  2801                           	line	243
  2802                           	
  2803  005D                     i1l525:	
  2804                           	
  2805  005D                     i1l2741:	
  2806  005D  083D               	movf	(_state),w
  2807                           	; Switch size 1, requested type "space"
  2808                           ; Number of cases is 3, Range of values is 0 to 2
  2809                           ; switch strategies available:
  2810                           ; Name         Instructions Cycles
  2811                           ; direct_byte            9     6 (fixed)
  2812                           ; simple_byte           10     6 (average)
  2813                           ; jumptable            260     6 (fixed)
  2814                           ; rangetable             7     6 (fixed)
  2815                           ; spacedrange           12     9 (fixed)
  2816                           ; locatedrange           3     3 (fixed)
  2817                           ;	Chosen strategy is direct_byte
  2818                           
  2819  005E  0084               	movwf fsr
  2820  005F  3003               	movlw	3
  2821  0060  0204               	subwf	fsr,w
  2822  0061  1803               skipnc
  2823  0062  2868               goto i1l2743
  2824  0063  3000               movlw high(i1S2999)
  2825  0064  008A               movwf pclath
  2826  0065  3001               	movlw low(i1S2999)
  2827  0066  0704               	addwf fsr,w
  2828  0067  0082               	movwf pc
  2829                           psect	swtext1,local,class=CONST,delta=2
  2830                           global __pswtext1
  2831  0001                     __pswtext1:
  2832  0001                     i1S2999:
  2833  0001  2817               	ljmp	i1l2713
  2834  0002  281D               	ljmp	i1l529
  2835  0003  281D               	ljmp	i1l529
  2836                           psect	text381
  2837                           
  2838                           	line	282
  2839                           	
  2840  0068                     i1l527:	
  2841                           	line	285
  2842                           	
  2843  0068                     i1l2743:	
  2844                           ;main.c: 285: if (state != 2)
  2845  0068  083D               	movf	(_state),w
  2846  0069  3A02               	xorlw	02h
  2847  006A  1903               	skipnz
  2848  006B  286D               	goto	u272_21
  2849  006C  286E               	goto	u272_20
  2850  006D                     u272_21:
  2851  006D  2873               	goto	i1l2747
  2852  006E                     u272_20:
  2853                           	line	286
  2854                           	
  2855  006E                     i1l2745:	
  2856                           ;main.c: 286: state++;
  2857  006E  3001               	movlw	(01h)
  2858  006F  00F2               	movwf	(??_sync+0)+0
  2859  0070  0872               	movf	(??_sync+0)+0,w
  2860  0071  07BD               	addwf	(_state),f
  2861  0072  2873               	goto	i1l2747
  2862                           	
  2863  0073                     i1l532:	
  2864                           	line	289
  2865                           	
  2866  0073                     i1l2747:	
  2867                           ;main.c: 289: bit_on(0x02);
  2868  0073  3002               	movlw	(02h)
  2869  0074  22CC               	fcall	i1_bit_on
  2870  0075  2876               	goto	i1l533
  2871                           	line	290
  2872                           	
  2873  0076                     i1l2749:	
  2874                           	line	291
  2875                           ;main.c: 290: return;
  2876                           	
  2877  0076                     i1l533:	
  2878  0076  0008               	return
  2879                           	opt stack 0
  2880                           GLOBAL	__end_of_sync
  2881  0077                     	__end_of_sync:
  2882 ;; =============== function _sync ends ============
  2883                           
  2884                           	signat	_sync,88
  2885                           	global	i1_bit_off
  2886                           psect	text382,local,class=CODE,delta=2
  2887                           global __ptext382
  2888  02C2                     __ptext382:
  2889                           
  2890 ;; *************** function i1_bit_off *****************
  2891 ;; Defined at:
  2892 ;;		line 34 in file "main.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;  bit_off         1    wreg     unsigned char 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;  bit_off         1    1[COMMON] unsigned char 
  2897 ;; Return value:  Size  Location     Type
  2898 ;;		None               void
  2899 ;; Registers used:
  2900 ;;		wreg, status,2, status,0
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2906 ;;      Params:         0       0       0       0
  2907 ;;      Locals:         1       0       0       0
  2908 ;;      Temps:          1       0       0       0
  2909 ;;      Totals:         2       0       0       0
  2910 ;;Total ram usage:        2 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; This function calls:
  2913 ;;		Nothing
  2914 ;; This function is called by:
  2915 ;;		_sync
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           psect	text382
  2919                           	file	"main.c"
  2920                           	line	34
  2921                           	global	__size_ofi1_bit_off
  2922  000A                     	__size_ofi1_bit_off	equ	__end_ofi1_bit_off-i1_bit_off
  2923                           	
  2924  02C2                     i1_bit_off:	
  2925                           	opt	stack 2
  2926                           ; Regs used in i1_bit_off: [wreg+status,2+status,0]
  2927                           ;i1bit_off@bt stored from wreg
  2928  02C2  00F1               	movwf	(i1bit_off@bt)
  2929                           	line	35
  2930                           	
  2931  02C3                     i1l2785:	
  2932                           ;main.c: 35: a_latch &= ~bt;
  2933  02C3  0971               	comf	(i1bit_off@bt),w
  2934  02C4  00F0               	movwf	(??i1_bit_off+0)+0
  2935  02C5  0870               	movf	(??i1_bit_off+0)+0,w
  2936  02C6  1283               	bcf	status, 5	;RP0=0, select bank0
  2937  02C7  1303               	bcf	status, 6	;RP1=0, select bank0
  2938  02C8  05BA               	andwf	(_a_latch),f
  2939                           	line	36
  2940                           	
  2941  02C9                     i1l2787:	
  2942                           ;main.c: 36: PORTA = a_latch;
  2943  02C9  083A               	movf	(_a_latch),w
  2944  02CA  0085               	movwf	(5)	;volatile
  2945                           	line	37
  2946                           	
  2947  02CB                     i1l468:	
  2948  02CB  0008               	return
  2949                           	opt stack 0
  2950                           GLOBAL	__end_ofi1_bit_off
  2951  02CC                     	__end_ofi1_bit_off:
  2952 ;; =============== function i1_bit_off ends ============
  2953                           
  2954                           	signat	i1_bit_off,88
  2955                           	global	i1_bit_on
  2956                           psect	text383,local,class=CODE,delta=2
  2957                           global __ptext383
  2958  02CC                     __ptext383:
  2959                           
  2960 ;; *************** function i1_bit_on *****************
  2961 ;; Defined at:
  2962 ;;		line 28 in file "main.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  bit_on          1    wreg     unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  bit_on          1    1[COMMON] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;		None               void
  2969 ;; Registers used:
  2970 ;;		wreg, status,2, status,0
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2976 ;;      Params:         0       0       0       0
  2977 ;;      Locals:         1       0       0       0
  2978 ;;      Temps:          1       0       0       0
  2979 ;;      Totals:         2       0       0       0
  2980 ;;Total ram usage:        2 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; This function calls:
  2983 ;;		Nothing
  2984 ;; This function is called by:
  2985 ;;		_sync
  2986 ;; This function uses a non-reentrant model
  2987 ;;
  2988                           psect	text383
  2989                           	file	"main.c"
  2990                           	line	28
  2991                           	global	__size_ofi1_bit_on
  2992  000A                     	__size_ofi1_bit_on	equ	__end_ofi1_bit_on-i1_bit_on
  2993                           	
  2994  02CC                     i1_bit_on:	
  2995                           	opt	stack 2
  2996                           ; Regs used in i1_bit_on: [wreg+status,2+status,0]
  2997                           ;i1bit_on@bt stored from wreg
  2998  02CC  00F1               	movwf	(i1bit_on@bt)
  2999                           	line	29
  3000                           	
  3001  02CD                     i1l2781:	
  3002                           ;main.c: 29: a_latch |= bt;
  3003  02CD  0871               	movf	(i1bit_on@bt),w
  3004  02CE  00F0               	movwf	(??i1_bit_on+0)+0
  3005  02CF  0870               	movf	(??i1_bit_on+0)+0,w
  3006  02D0  1283               	bcf	status, 5	;RP0=0, select bank0
  3007  02D1  1303               	bcf	status, 6	;RP1=0, select bank0
  3008  02D2  04BA               	iorwf	(_a_latch),f
  3009                           	line	30
  3010                           	
  3011  02D3                     i1l2783:	
  3012                           ;main.c: 30: PORTA = a_latch;
  3013  02D3  083A               	movf	(_a_latch),w
  3014  02D4  0085               	movwf	(5)	;volatile
  3015                           	line	31
  3016                           	
  3017  02D5                     i1l465:	
  3018  02D5  0008               	return
  3019                           	opt stack 0
  3020                           GLOBAL	__end_ofi1_bit_on
  3021  02D6                     	__end_ofi1_bit_on:
  3022 ;; =============== function i1_bit_on ends ============
  3023                           
  3024                           	signat	i1_bit_on,88
  3025                           psect	text384,local,class=CODE,delta=2
  3026                           global __ptext384
  3027  0000                     __ptext384:
  3028                           	global	btemp
  3029  007E                     	btemp set 07Eh
  3030                           
  3031                           	DABS	1,126,2	;btemp
  3032                           	global	wtemp0
  3033  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Jun 03 16:11:46 2013

                           pc 0002  __size_of_hour_start_end_init 0047                ___bmul@product 0042  
                          _RD 0C60                            _WR 0C61                            fsr 0004  
                         l500 0257                           l510 0219                           l503 011C  
                         l511 022F                           l504 0157                           l512 022E  
                         l520 00FC                           l505 0157                           l521 0107  
                         l522 0110                           l515 00D0                           l508 020C  
                         l516 010E                           l509 022F                           l517 00DC  
                         l518 00E6                           l471 0091                           l519 00F1  
                         l551 01B1                           l472 00BF                           l536 02AD  
                         l552 01B1                           l560 0178                           l465 02C1  
                         l473 009A                           l553 01B6                           l561 017F  
                         l490 01E0                           l474 009C                           l554 01CE  
                         l562 0198                           l491 0201                           l475 00C4  
                         l563 0194                           l468 02B7                           l492 01EA  
                         l564 0199                           l493 01F4                           l565 019A  
                         l557 0160                           l494 01FE                           l566 019A  
                         l558 0182                           l559 0180                           l497 0243  
                         l498 025A                           l499 024D                           _GIE 005F  
                         _RB5 0035                           _RB7 0037                           fsr0 0004  
                         indf 0000                          l1025 0287                          l1026 0290  
                        l1027 029A                          l1028 029C                   _sixty_start 01CF  
                        l2701 0253                          l2703 0256                          l2705 0257  
                        l2801 009E                          l2651 02B1                          l2707 025A  
                        l2811 00C1                          l2803 00A7                          l2653 02B5  
                        l2661 01DF                          l2805 00A9                          l2821 012B  
                        l2813 0111                          l2901 019B                          l2647 02BB  
                        l2671 01F0                          l2663 01E0                          l2655 01D2  
                        l2807 00B1                          l2823 0136                          l2815 0114  
                        l2831 0202                          l2911 01A9                          l2903 019F  
                        l2649 02BF                          l2681 01FE                          l2673 01F3  
                        l2665 01E6                          l2657 01D8                          l2809 00BF  
                        l2825 0141                          l2817 011B                          l2841 0225  
                        l2833 020B                          l2921 01B8                          l2913 01AB  
                        l2905 01A3                          l2683 0201                          l2675 01F4  
                        l2667 01E9                          l2659 01DD                          l2691 0242  
                        l2771 0290                          l2827 014C                          l2819 011C  
                        l2843 0227                          l2835 020C                          l2851 00D0  
                        l2931 01C3                          l2923 01B9                          l2915 01AE  
                        l2907 01A4                          l2677 01FA                          l2669 01EA  
                        l2693 0243                          l2685 0233                          l2773 0292  
                        l2829 0150                          l2837 0216                          l2861 00E6  
                        l2853 00D1                          l2845 00C5                          l2941 01CC  
                        l2933 01C4                          l2925 01BC                          l2917 01AF  
                        l2909 01A5                          l2679 01FD                          l2695 0249  
                        l2687 0239                          l2775 0294                          l2767 0286  
                        l2791 007E                          l2839 0219                          l2871 0104  
                        l2863 00EE                          l2855 00D9                          l2847 00C6  
                        l2943 01CD                          l2935 01C5                          l2927 01BF  
                        l2919 01B6                          l2951 015D                          l2697 024C  
                        l2689 023F                          l2777 029A                          l2769 028B  
                        l2793 0082                          l2873 0107                          l2865 00F1  
                        l2857 00DC                          l2849 00CF                          l2881 02A0  
                        l2937 01C8                          l2929 01C2                          l2961 0173  
                        l2953 0160                          l2945 0158                          l2699 024D  
                        l2779 029C                          l2795 0090                          l2867 00F9  
                        l2859 00E3                          l2875 010E                          l2891 02A8  
                        l2883 02A2                          l2939 01CB                          l2971 0188  
                        l2963 0176                          l2955 0164                          l2947 0159  
                        l2797 0097                          l2789 007A                          l2877 0110  
                        l2869 00FC                          l2893 02A9                          l2885 02A5  
                        l2973 018C                          l2965 0178                          l2957 016C  
                        l2949 015A                          l2799 009A                          l2895 02AA  
                        l2887 02A6                          l2879 029D                          l2975 0192  
                        l2959 0172                          l2967 0180                          l2897 02AB  
                        l2889 02A7                          l2977 0194                          l2969 0182  
                        l2899 02AC                          _T0CS 040D                          u2600 01DD  
                        u2601 01DC                          u2610 01E6                          u2611 01E5  
                        u2620 01F0                          u2621 01EF                          u2630 01FA  
                        u2631 01F9                          u2640 023F                          u2800 0097  
                        u2641 023E                          u2801 0096                          u2650 0249  
                        u2810 00BE                          u2651 0248                          u2811 00BD  
                        _IOFS 047A                          u2660 0253                          u2820 011A  
                        u2900 00E3                          u2661 0252                          u2821 0119  
                        u2901 00E2                          u2910 00EE                          u2815 00BA  
                        u2911 00ED                          u2840 0156                          u2920 00F9  
                        u2841 0155                          u2921 00F8                          u2770 028B  
                        u2834 0124                          u2850 020A                          u2930 0104  
                        u2771 028A                          u2835 0122                          u2851 0209  
                        u2931 0103                          _PEIE 005E                          u2780 0299  
                        u2860 0216                          u2940 01B5                          u2781 0298  
                        u2861 0215                          u2941 01B4                          u2790 008F  
                        u2870 0225                          u2950 0164                          u2791 008E  
                        u2871 0224                          u2951 0163                          _RBIE 005B  
                        u2880 00CE                          u2960 016C                          _RBIF 0058  
                        u2881 00CD                          u2961 016B                          u2890 00D9  
                        u2970 0172                          u2795 008B                          u2891 00D8  
                        u2971 0171                          u2980 0188                          u2981 0187  
                        u2990 0192                          u2991 0191                          _TMR0 0001  
                        _WREN 0C62                          _main 0158                          _init 019B  
             shift_write@data 0046                          btemp 007E                          _sync 0011  
                  i1bit_on@bt 0071                          start 0010             ___bmul@multiplier 0043  
                       ?_main 0070                         ?_init 0070                         _EEADR 010D  
                       _CARRY 0018                         ?_sync 0070                         _T1CON 0010  
                       i1l530 0025                         i1l531 005C                         i1l532 0073  
                       i1l533 0076                         i1l525 005D                         i1l541 0276  
                       i1l526 0017                         i1l542 025F                         i1l527 0068  
                       i1l543 0274                         i1l528 001D                         i1l465 02D5  
                       i1l529 001D                         i1l545 0268                         i1l546 0272  
                       i1l547 0274                         i1l468 02CB                         i1l548 0276  
                       _TMR1H 000F                         _TMR1L 000E                         _PORTA 0005  
                       _TRISA 0085                         _TRISB 0086               __end_of_bit_off 02B8  
                       _state 003D                         main@i 0049                         pclath 000A  
                 i1bit_off@bt 0071              __end_ofi1_bit_on 02D6                         status 0003  
                       wtemp0 007E            __size_ofi1_bit_off 000A                  __end_of_main 019B  
                __end_of_init 01CF        hour_start_end_init@min 0046                  __end_of_sync 0077  
                      ??_main 0048                        ??_init 0048                        ??_sync 0072  
                      _ADCON1 009F                        i1S2999 0001                        _EEDATA 010C  
                      _EECON1 018C                        _EECON2 018D                        i1l2711 0013  
                      i1l2721 0021                        i1l2713 0017                        i1l2731 0053  
                      i1l2723 004F                        i1l2715 0019                        i1l2733 0054  
                      i1l2725 0050                        i1l2717 001A                        i1l2741 005D  
                      i1l2709 0011                        i1l2735 0055                        i1l2727 0051  
                      i1l2743 0068                        i1l2719 001B                        i1l2745 006E  
                      i1l2737 0059                        i1l2729 0052                        i1l2761 0268  
                      i1l2747 0073                        i1l2739 005A                        i1l2763 026D  
                      i1l2755 025B                        i1l2781 02CD                        i1l2749 0076  
                      i1l2765 026E                        i1l2757 025F                        i1l2783 02D3  
                      i1l2759 0263                        i1l2785 02C3                        i1l2787 02C9  
                      u270_25 003D                        u271_25 0045                        u272_20 006E  
                      u272_21 006D                        u273_20 025F                        u273_21 025E  
                      u274_20 0263                        u274_21 0262                        u267_20 0021  
                      u275_20 0267                        u267_21 0020                        u275_21 0266  
                      u276_20 026D                        u276_21 026C                        u268_25 0028  
                      u269_25 0030                        _TMR0IE 005D                        _TMR0IF 005A  
                      _TMR1IE 0460                        _TMR1IF 0060                        _TMR1ON 0080  
                ?_shift_write 0070                        ___bmul 0283                        _bit_on 02B8  
                   ??_bit_off 0040                        clrloop 02DF                        saved_w 007E  
           __end_ofi1_bit_off 02CC           _hour_start_end_init 0111           ___bmul@multiplicand 0040  
              __pcstackCOMMON 0070          ?_hour_start_end_init 0070                     ?i1_bit_on 0070  
                sixty_start@x 0042                  ?_sixty_start 0070                    __pbssBANK0 0020  
                  __pmaintext 0158                 ?_next_segment 0070                       ?___bmul 0040  
       ??_hour_start_end_init 0044                       ?_bit_on 0070                    __pintentry 0004  
                  ??i1_bit_on 0070            __size_of_show_face 002E            interrupt_handler@c 0079  
              ??_next_segment 0047               __size_of___bmul 001A                       _a_latch 003A  
             __size_of_bit_on 000A          __size_of_shift_write 004E                       _bit_off 02AE  
                     _segment 0038                    _hour_start 002C          end_of_initialization 02DC  
           __end_of_show_face 0230                     i1_bit_off 02C2          __size_of_sixty_start 0033  
                  _sixty_stop 0230          hour_start_end_init@i 0047             _application_reset 029D  
              __end_of___bmul 029D                __end_of_bit_on 02C2            ?_application_reset 0070  
         start_initialization 02D6             __size_ofi1_bit_on 000A           ??_application_reset 0047  
        __end_of_next_segment 0111                    ?i1_bit_off 0070     __end_of_application_reset 02AE  
                    ??___bmul 0041                      ??_bit_on 0040                   __pbssCOMMON 0079  
               __pcstackBANK0 0040                   sixty_stop@x 0042                   ?_sixty_stop 0070  
 __end_of_hour_start_end_init 0158                     __ptext370 029D                     __ptext371 00C5  
                   __ptext380 025B                     __ptext372 0202                     __ptext381 0011  
                   __ptext373 0111                     __ptext382 02C2                     __ptext374 0077  
                   __ptext383 02CC                     __ptext375 0283                     __ptext384 0000  
                   __ptext376 0230                     __ptext368 0000                     __ptext377 01CF  
                   __ptext369 019B                     __ptext378 02AE                     __ptext379 02B8  
                    ?_bit_off 0070                     __pswtext1 0001             _interrupt_handler 025B  
          ?_interrupt_handler 0070                   ??i1_bit_off 0070           ??_interrupt_handler 0075  
           interrupt_function 0004                     bit_off@bt 0041                 ??_shift_write 0042  
  __size_of_application_reset 0011                     _show_face 0202     __end_of_interrupt_handler 0283  
       __size_of_next_segment 004C                      i1_bit_on 02CC           __size_of_sixty_stop 002B  
                _tmr0_counter 003E                  _tmr1_counter 003F                  _next_segment 00C5  
                  ?_show_face 0070           __end_of_shift_write 00C5              __size_of_bit_off 000A  
               ??_sixty_start 0040                 __size_of_main 0043                 __size_of_init 0034  
               __size_of_sync 0066                      _hour_end 0020                      clear_ram 02DE  
                    bit_on@bt 0041    __size_of_interrupt_handler 0028                  shift_write@i 0044  
                 _seg_ticks_h 003B                   _seg_ticks_l 003C                      intlevel1 0000  
                ??_sixty_stop 0040           __end_of_sixty_start 0202                    _OSCCONbits 008F  
                 _shift_write 0077                   ??_show_face 0042            __end_of_sixty_stop 025B  
